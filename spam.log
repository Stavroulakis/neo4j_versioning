2021-11-22 12:24:50,758     neo4j  DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 12:24:50,758     neo4j  DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 12:24:50,758     neo4j  DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 12:24:50,758     neo4j  DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 12:24:50,758     neo4j  DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 12:24:50,758     neo4j  DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 12:24:50,758     neo4j  DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 12:24:50,758     neo4j  DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 12:24:50,758     neo4j  DEBUG  Attempting to update routing table from IPv4Address(('localhost', 7687))
2021-11-22 12:24:50,758     neo4j  DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 12:24:50,761     neo4j  DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 12:24:50,763     neo4j  DEBUG  [#8ED6]  C: <MAGIC> 0x6060B017
2021-11-22 12:24:50,763     neo4j  DEBUG  [#8ED6]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 12:24:50,765     neo4j  DEBUG  [#8ED6]  S: <HANDSHAKE> 0x00000204
2021-11-22 12:24:50,765     neo4j  DEBUG  [#8ED6]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 12:24:50,769     neo4j  DEBUG  [#8ED6]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-76'}
2021-11-22 12:24:50,769     neo4j  DEBUG  [#8ED6]  C: RUN 'CALL dbms.routing.getRoutingTable($context, $database)' {'context': {'address': 'localhost:7687'}, 'database': 'graph.db'} {'mode': 'r', 'db': 'system'}
2021-11-22 12:24:50,769     neo4j  DEBUG  [#8ED6]  C: PULL {'n': -1}
2021-11-22 12:24:50,775     neo4j  DEBUG  [#8ED6]  S: SUCCESS {'t_first': 3, 'fields': ['ttl', 'servers']}
2021-11-22 12:24:50,775     neo4j  DEBUG  [#8ED6]  S: RECORD * 1
2021-11-22 12:24:50,775     neo4j  DEBUG  [#8ED6]  S: SUCCESS {'bookmark': 'FB:kcwQAAAAAAAAAAAAAAAAAAAAAReQ', 'type': 's', 't_last': 1, 'db': 'system'}
2021-11-22 12:24:50,775     neo4j  DEBUG  [#8ED6]  C: RESET
2021-11-22 12:24:50,777     neo4j  DEBUG  [#8ED6]  S: SUCCESS {}
2021-11-22 12:24:50,777     neo4j  DEBUG  [#0000]  S: <ROUTING> table=RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=1551.2437748, ttl=300)
2021-11-22 12:24:50,777     neo4j  DEBUG  [#0000]  C: <UPDATE ROUTING TABLE> address=ResolvedIPv4Address(('127.0.0.1', 7687)) (RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=1551.2437748, ttl=300))
2021-11-22 12:24:50,777     neo4j  DEBUG  [#8ED6]  C: GOODBYE
2021-11-22 12:24:50,777     neo4j  DEBUG  [#8ED6]  C: <CLOSE>
2021-11-22 12:24:50,777     neo4j  DEBUG  [#0000]  C: <ROUTING AGED> database=None
2021-11-22 12:24:50,778     neo4j  DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=1551.2240287 perf_time=1551.2443561
2021-11-22 12:24:50,778     neo4j  DEBUG  [#0000]  C: <ROUTING AGED> database=graph.db
2021-11-22 12:24:50,778     neo4j  DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=1551.2437748 perf_time=1551.2444345
2021-11-22 12:24:50,778     neo4j  DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=1551.2240287, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=1551.2437748, ttl=300)}
2021-11-22 12:24:50,778     neo4j  DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 12:24:50,778     neo4j  DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 12:24:50,778     neo4j  DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 12:24:50,778     neo4j  DEBUG  [#8EDC]  C: <MAGIC> 0x6060B017
2021-11-22 12:24:50,778     neo4j  DEBUG  [#8EDC]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 12:24:50,780     neo4j  DEBUG  [#8EDC]  S: <HANDSHAKE> 0x00000204
2021-11-22 12:24:50,780     neo4j  DEBUG  [#8EDC]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 12:24:50,783     neo4j  DEBUG  [#8EDC]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-77'}
2021-11-22 12:24:50,783     neo4j  DEBUG  [#8EDC]  C: BEGIN {'db': 'graph.db'}
2021-11-22 12:24:50,784     neo4j  DEBUG  [#8EDC]  C: RUN "MATCH (node_1:type1{Name:$node_1_name})            -[node_relation:Has_State]-> (node_2:type1{prop1:'temp1',prop2:'temp2',Name:'testname2_State'})             WHERE node_relation.To IS NULL             RETURN count(node_1) as exist" {'node_1_name': 'testname2'} {}
2021-11-22 12:24:50,784     neo4j  DEBUG  [#8EDC]  C: PULL {'n': 1000}
2021-11-22 12:24:51,057     neo4j  DEBUG  [#8EDC]  S: SUCCESS {}
2021-11-22 12:24:51,057     neo4j  DEBUG  [#8EDC]  S: SUCCESS {'t_first': 243, 'fields': ['exist'], 'qid': 0}
2021-11-22 12:24:51,058     neo4j  DEBUG  [#8EDC]  S: RECORD * 1
2021-11-22 12:24:51,058     neo4j  DEBUG  [#8EDC]  S: SUCCESS {'type': 'r', 't_last': 28, 'db': 'graph.db'}
2021-11-22 12:24:51,058     neo4j  DEBUG  [#8EDC]  C: COMMIT
2021-11-22 12:24:51,060     neo4j  DEBUG  [#8EDC]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDUZA='}
2021-11-22 12:24:51,060     neo4j  DEBUG  [#8EDC]  C: RESET
2021-11-22 12:24:51,061     neo4j  DEBUG  [#8EDC]  S: SUCCESS {}
2021-11-22 12:24:51,061  src.neo4j_versioning   INFO  Node testname2 is up to date
2021-11-22 12:24:51,070     neo4j  DEBUG  [#8EDC]  C: GOODBYE
2021-11-22 12:24:51,070     neo4j  DEBUG  [#8EDC]  C: <CLOSE>
2021-11-22 12:25:43,445   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 12:25:43,445   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 12:25:43,445   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 12:25:43,445   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 12:25:43,445   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 12:25:43,445   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 12:25:43,445   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 12:25:43,445   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 12:25:43,445   DEBUG  Attempting to update routing table from IPv4Address(('localhost', 7687))
2021-11-22 12:25:43,445   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 12:25:43,447   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 12:25:43,448   DEBUG  [#8EE6]  C: <MAGIC> 0x6060B017
2021-11-22 12:25:43,448   DEBUG  [#8EE6]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 12:25:43,450   DEBUG  [#8EE6]  S: <HANDSHAKE> 0x00000204
2021-11-22 12:25:43,450   DEBUG  [#8EE6]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 12:25:43,453   DEBUG  [#8EE6]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-78'}
2021-11-22 12:25:43,454   DEBUG  [#8EE6]  C: RUN 'CALL dbms.routing.getRoutingTable($context, $database)' {'context': {'address': 'localhost:7687'}, 'database': 'graph.db'} {'mode': 'r', 'db': 'system'}
2021-11-22 12:25:43,454   DEBUG  [#8EE6]  C: PULL {'n': -1}
2021-11-22 12:25:43,461   DEBUG  [#8EE6]  S: SUCCESS {'t_first': 4, 'fields': ['ttl', 'servers']}
2021-11-22 12:25:43,461   DEBUG  [#8EE6]  S: RECORD * 1
2021-11-22 12:25:43,462   DEBUG  [#8EE6]  S: SUCCESS {'bookmark': 'FB:kcwQAAAAAAAAAAAAAAAAAAAAAReQ', 'type': 's', 't_last': 1, 'db': 'system'}
2021-11-22 12:25:43,462   DEBUG  [#8EE6]  C: RESET
2021-11-22 12:25:43,464   DEBUG  [#8EE6]  S: SUCCESS {}
2021-11-22 12:25:43,464   DEBUG  [#0000]  S: <ROUTING> table=RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=1603.9305732, ttl=300)
2021-11-22 12:25:43,464   DEBUG  [#0000]  C: <UPDATE ROUTING TABLE> address=ResolvedIPv4Address(('127.0.0.1', 7687)) (RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=1603.9305732, ttl=300))
2021-11-22 12:25:43,464   DEBUG  [#8EE6]  C: GOODBYE
2021-11-22 12:25:43,464   DEBUG  [#8EE6]  C: <CLOSE>
2021-11-22 12:25:43,464   DEBUG  [#0000]  C: <ROUTING AGED> database=None
2021-11-22 12:25:43,464   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=1603.9112469 perf_time=1603.931254
2021-11-22 12:25:43,465   DEBUG  [#0000]  C: <ROUTING AGED> database=graph.db
2021-11-22 12:25:43,465   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=1603.9305732 perf_time=1603.9314404
2021-11-22 12:25:43,465   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=1603.9112469, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=1603.9305732, ttl=300)}
2021-11-22 12:25:43,465   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 12:25:43,465   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 12:25:43,465   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 12:25:43,466   DEBUG  [#8EEC]  C: <MAGIC> 0x6060B017
2021-11-22 12:25:43,466   DEBUG  [#8EEC]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 12:25:43,468   DEBUG  [#8EEC]  S: <HANDSHAKE> 0x00000204
2021-11-22 12:25:43,468   DEBUG  [#8EEC]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 12:25:43,471   DEBUG  [#8EEC]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-79'}
2021-11-22 12:25:43,471   DEBUG  [#8EEC]  C: BEGIN {'db': 'graph.db'}
2021-11-22 12:25:43,472   DEBUG  [#8EEC]  C: RUN "MATCH (node_1:type1{Name:$node_1_name})            -[node_relation:Has_State]-> (node_2:type1{prop1:'temp1',prop2:'temp2',Name:'testname2_State'})             WHERE node_relation.To IS NULL             RETURN count(node_1) as exist" {'node_1_name': 'testname2'} {}
2021-11-22 12:25:43,472   DEBUG  [#8EEC]  C: PULL {'n': 1000}
2021-11-22 12:25:43,477   DEBUG  [#8EEC]  S: SUCCESS {}
2021-11-22 12:25:43,477   DEBUG  [#8EEC]  S: SUCCESS {'t_first': 2, 'fields': ['exist'], 'qid': 0}
2021-11-22 12:25:43,477   DEBUG  [#8EEC]  S: RECORD * 1
2021-11-22 12:25:43,477   DEBUG  [#8EEC]  S: SUCCESS {'type': 'r', 't_last': 1, 'db': 'graph.db'}
2021-11-22 12:25:43,477   DEBUG  [#8EEC]  C: COMMIT
2021-11-22 12:25:43,479   DEBUG  [#8EEC]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDUZA='}
2021-11-22 12:25:43,479   DEBUG  [#8EEC]  C: RESET
2021-11-22 12:25:43,481   DEBUG  [#8EEC]  S: SUCCESS {}
2021-11-22 12:25:43,481    INFO  Node testname2 is up to date
2021-11-22 12:25:43,487   DEBUG  [#8EEC]  C: GOODBYE
2021-11-22 12:25:43,488   DEBUG  [#8EEC]  C: <CLOSE>
2021-11-22 12:46:17,527   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 12:46:17,527   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 12:46:17,527   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 12:46:17,527   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 12:46:17,527   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 12:46:17,527   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 12:46:17,527   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 12:46:17,527   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 12:46:17,527   DEBUG  Attempting to update routing table from IPv4Address(('localhost', 7687))
2021-11-22 12:46:17,527   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 12:46:17,530   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 12:46:17,531   DEBUG  [#9080]  C: <MAGIC> 0x6060B017
2021-11-22 12:46:17,531   DEBUG  [#9080]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 12:46:17,533   DEBUG  [#9080]  S: <HANDSHAKE> 0x00000204
2021-11-22 12:46:17,533   DEBUG  [#9080]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 12:46:17,537   DEBUG  [#9080]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-143'}
2021-11-22 12:46:17,537   DEBUG  [#9080]  C: RUN 'CALL dbms.routing.getRoutingTable($context, $database)' {'context': {'address': 'localhost:7687'}, 'database': 'graph.db'} {'mode': 'r', 'db': 'system'}
2021-11-22 12:46:17,537   DEBUG  [#9080]  C: PULL {'n': -1}
2021-11-22 12:46:17,546   DEBUG  [#9080]  S: SUCCESS {'t_first': 5, 'fields': ['ttl', 'servers']}
2021-11-22 12:46:17,546   DEBUG  [#9080]  S: RECORD * 1
2021-11-22 12:46:17,546   DEBUG  [#9080]  S: SUCCESS {'bookmark': 'FB:kcwQAAAAAAAAAAAAAAAAAAAAAReQ', 'type': 's', 't_last': 0, 'db': 'system'}
2021-11-22 12:46:17,546   DEBUG  [#9080]  C: RESET
2021-11-22 12:46:17,548   DEBUG  [#9080]  S: SUCCESS {}
2021-11-22 12:46:17,548   DEBUG  [#0000]  S: <ROUTING> table=RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=2838.0146112, ttl=300)
2021-11-22 12:46:17,548   DEBUG  [#0000]  C: <UPDATE ROUTING TABLE> address=ResolvedIPv4Address(('127.0.0.1', 7687)) (RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=2838.0146112, ttl=300))
2021-11-22 12:46:17,548   DEBUG  [#9080]  C: GOODBYE
2021-11-22 12:46:17,548   DEBUG  [#9080]  C: <CLOSE>
2021-11-22 12:46:17,548   DEBUG  [#0000]  C: <ROUTING AGED> database=None
2021-11-22 12:46:17,548   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=2837.993249 perf_time=2838.0151479
2021-11-22 12:46:17,548   DEBUG  [#0000]  C: <ROUTING AGED> database=graph.db
2021-11-22 12:46:17,548   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=2838.0146112 perf_time=2838.0152678
2021-11-22 12:46:17,548   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=2837.993249, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=2838.0146112, ttl=300)}
2021-11-22 12:46:17,549   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 12:46:17,549   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 12:46:17,549   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 12:46:17,549   DEBUG  [#9086]  C: <MAGIC> 0x6060B017
2021-11-22 12:46:17,549   DEBUG  [#9086]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 12:46:17,554   DEBUG  [#9086]  S: <HANDSHAKE> 0x00000204
2021-11-22 12:46:17,555   DEBUG  [#9086]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 12:46:17,558   DEBUG  [#9086]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-144'}
2021-11-22 12:46:17,558   DEBUG  [#9086]  C: BEGIN {'db': 'graph.db'}
2021-11-22 12:46:17,558   DEBUG  [#9086]  C: RUN "MATCH (node_1:type1{Name:$node_1_name})            -[node_relation:Has_State]-> (node_2:type1{prop1:'temp1',prop2:'temp2',Name:'testname2_State'})             WHERE node_relation.To IS NULL             RETURN count(node_1) as exist" {'node_1_name': 'testname2'} {}
2021-11-22 12:46:17,558   DEBUG  [#9086]  C: PULL {'n': 1000}
2021-11-22 12:46:17,562   DEBUG  [#9086]  S: SUCCESS {}
2021-11-22 12:46:17,562   DEBUG  [#9086]  S: SUCCESS {'t_first': 1, 'fields': ['exist'], 'qid': 0}
2021-11-22 12:46:17,562   DEBUG  [#9086]  S: RECORD * 1
2021-11-22 12:46:17,562   DEBUG  [#9086]  S: SUCCESS {'type': 'r', 't_last': 1, 'db': 'graph.db'}
2021-11-22 12:46:17,562   DEBUG  [#9086]  C: COMMIT
2021-11-22 12:46:17,564   DEBUG  [#9086]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDUZA='}
2021-11-22 12:46:17,564   DEBUG  [#9086]  C: RESET
2021-11-22 12:46:17,565   DEBUG  [#9086]  S: SUCCESS {}
2021-11-22 12:46:17,565    INFO  Node testname2 is up to date
2021-11-22 12:46:17,572   DEBUG  [#9086]  C: GOODBYE
2021-11-22 12:46:17,573   DEBUG  [#9086]  C: <CLOSE>
2021-11-22 12:46:25,677   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 12:46:25,678   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 12:46:25,678   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 12:46:25,678   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 12:46:25,678   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 12:46:25,678   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 12:46:25,678   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 12:46:25,678   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 12:46:25,678   DEBUG  Attempting to update routing table from IPv4Address(('localhost', 7687))
2021-11-22 12:46:25,678   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 12:46:25,679   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 12:46:25,681   DEBUG  [#908C]  C: <MAGIC> 0x6060B017
2021-11-22 12:46:25,681   DEBUG  [#908C]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 12:46:25,682   DEBUG  [#908C]  S: <HANDSHAKE> 0x00000204
2021-11-22 12:46:25,683   DEBUG  [#908C]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 12:46:25,685   DEBUG  [#908C]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-145'}
2021-11-22 12:46:25,686   DEBUG  [#908C]  C: RUN 'CALL dbms.routing.getRoutingTable($context, $database)' {'context': {'address': 'localhost:7687'}, 'database': 'graph.db'} {'mode': 'r', 'db': 'system'}
2021-11-22 12:46:25,686   DEBUG  [#908C]  C: PULL {'n': -1}
2021-11-22 12:46:25,691   DEBUG  [#908C]  S: SUCCESS {'t_first': 3, 'fields': ['ttl', 'servers']}
2021-11-22 12:46:25,692   DEBUG  [#908C]  S: RECORD * 1
2021-11-22 12:46:25,692   DEBUG  [#908C]  S: SUCCESS {'bookmark': 'FB:kcwQAAAAAAAAAAAAAAAAAAAAAReQ', 'type': 's', 't_last': 0, 'db': 'system'}
2021-11-22 12:46:25,692   DEBUG  [#908C]  C: RESET
2021-11-22 12:46:25,693   DEBUG  [#908C]  S: SUCCESS {}
2021-11-22 12:46:25,693   DEBUG  [#0000]  S: <ROUTING> table=RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=2846.1598057, ttl=300)
2021-11-22 12:46:25,693   DEBUG  [#0000]  C: <UPDATE ROUTING TABLE> address=ResolvedIPv4Address(('127.0.0.1', 7687)) (RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=2846.1598057, ttl=300))
2021-11-22 12:46:25,693   DEBUG  [#908C]  C: GOODBYE
2021-11-22 12:46:25,693   DEBUG  [#908C]  C: <CLOSE>
2021-11-22 12:46:25,693   DEBUG  [#0000]  C: <ROUTING AGED> database=None
2021-11-22 12:46:25,694   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=2846.143849 perf_time=2846.1603615
2021-11-22 12:46:25,694   DEBUG  [#0000]  C: <ROUTING AGED> database=graph.db
2021-11-22 12:46:25,694   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=2846.1598057 perf_time=2846.160471
2021-11-22 12:46:25,694   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=2846.143849, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=2846.1598057, ttl=300)}
2021-11-22 12:46:25,694   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 12:46:25,694   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 12:46:25,694   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 12:46:25,695   DEBUG  [#9092]  C: <MAGIC> 0x6060B017
2021-11-22 12:46:25,695   DEBUG  [#9092]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 12:46:25,697   DEBUG  [#9092]  S: <HANDSHAKE> 0x00000204
2021-11-22 12:46:25,697   DEBUG  [#9092]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 12:46:25,700   DEBUG  [#9092]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-146'}
2021-11-22 12:46:25,700   DEBUG  [#9092]  C: BEGIN {'db': 'graph.db'}
2021-11-22 12:46:25,700   DEBUG  [#9092]  C: RUN "MATCH (node_1:type1{Name:$node_1_name})            -[node_relation:Has_State]-> (node_2:type1{prop1:'temp1',prop2:'temp2',Name:'testname6_State'})             WHERE node_relation.To IS NULL             RETURN count(node_1) as exist" {'node_1_name': 'testname6'} {}
2021-11-22 12:46:25,700   DEBUG  [#9092]  C: PULL {'n': 1000}
2021-11-22 12:46:25,797   DEBUG  [#9092]  S: SUCCESS {}
2021-11-22 12:46:25,797   DEBUG  [#9092]  S: SUCCESS {'t_first': 95, 'fields': ['exist'], 'qid': 0}
2021-11-22 12:46:25,797   DEBUG  [#9092]  S: RECORD * 1
2021-11-22 12:46:25,797   DEBUG  [#9092]  S: SUCCESS {'type': 'r', 't_last': 0, 'db': 'graph.db'}
2021-11-22 12:46:25,797   DEBUG  [#9092]  C: COMMIT
2021-11-22 12:46:25,799   DEBUG  [#9092]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDUZA='}
2021-11-22 12:46:25,799   DEBUG  [#9092]  C: RESET
2021-11-22 12:46:25,801   DEBUG  [#9092]  S: SUCCESS {}
2021-11-22 12:46:25,801   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 12:46:25,801   DEBUG  [#0000]  C: <ROUTING> Table expired=False
2021-11-22 12:46:25,801   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 12:46:25,801   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=True
2021-11-22 12:46:25,801   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=2846.143849, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=2846.1598057, ttl=300)}
2021-11-22 12:46:25,801   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 12:46:25,801   DEBUG  [#9092]  C: BEGIN {'db': 'graph.db', 'bookmarks': ['FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDUZA=']}
2021-11-22 12:46:25,801   DEBUG  [#9092]  C: RUN 'MATCH (node_1:type1{Name:$node_1_name})             RETURN count(node_1) as exist' {'node_1_name': 'testname6'} {}
2021-11-22 12:46:25,801   DEBUG  [#9092]  C: PULL {'n': 1000}
2021-11-22 12:46:25,834   DEBUG  [#9092]  S: SUCCESS {}
2021-11-22 12:46:25,834   DEBUG  [#9092]  S: SUCCESS {'t_first': 24, 'fields': ['exist'], 'qid': 0}
2021-11-22 12:46:25,834   DEBUG  [#9092]  S: RECORD * 1
2021-11-22 12:46:25,834   DEBUG  [#9092]  S: SUCCESS {'type': 'r', 't_last': 1, 'db': 'graph.db'}
2021-11-22 12:46:25,834   DEBUG  [#9092]  C: COMMIT
2021-11-22 12:46:25,836   DEBUG  [#9092]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDUZA='}
2021-11-22 12:46:25,836   DEBUG  [#9092]  C: RESET
2021-11-22 12:46:25,837   DEBUG  [#9092]  S: SUCCESS {}
2021-11-22 12:46:25,837   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 12:46:25,837   DEBUG  [#0000]  C: <ROUTING> Table expired=False
2021-11-22 12:46:25,837   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 12:46:25,837   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=True
2021-11-22 12:46:25,837   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=2846.143849, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=2846.1598057, ttl=300)}
2021-11-22 12:46:25,838   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 12:46:25,838   DEBUG  [#9092]  C: BEGIN {'db': 'graph.db', 'bookmarks': ['FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDUZA=']}
2021-11-22 12:46:25,838   DEBUG  [#9092]  C: RUN "MERGE (node_1:type1{Name:$node_1_name})            -[node_relation:Has_State {From:$fromDate}]-> (node_2:type1 {prop1:'temp1',prop2:'temp2',Name:'testname6_State'})            RETURN node_1, node_2" {'node_1_name': 'testname6', 'props': {'prop1': 'temp1', 'prop2': 'temp2', 'Name': 'testname6_State'}, 'node_2_name': 'testname6_State', 'fromDate': '2021-11-22 12:46:25.838295'} {}
2021-11-22 12:46:25,838   DEBUG  [#9092]  C: PULL {'n': 1000}
2021-11-22 12:46:26,378   DEBUG  [#9092]  S: SUCCESS {}
2021-11-22 12:46:26,378   DEBUG  [#9092]  S: SUCCESS {'t_first': 138, 'fields': ['node_1', 'node_2'], 'qid': 0}
2021-11-22 12:46:26,378   DEBUG  [#9092]  S: RECORD * 1
2021-11-22 12:46:26,378   DEBUG  [#9092]  S: SUCCESS {'stats': {'labels-added': 2, 'relationships-created': 1, 'nodes-created': 2, 'properties-set': 5}, 'type': 'rw', 't_last': 400, 'db': 'graph.db'}
2021-11-22 12:46:26,378   DEBUG  [#9092]  C: COMMIT
2021-11-22 12:46:26,481   DEBUG  [#9092]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDUpA='}
2021-11-22 12:46:26,481   DEBUG  [#9092]  C: RESET
2021-11-22 12:46:26,482   DEBUG  [#9092]  S: SUCCESS {}
2021-11-22 12:46:26,482    INFO  New node (testname6) has been added to the database
2021-11-22 12:46:26,490   DEBUG  [#9092]  C: GOODBYE
2021-11-22 12:46:26,490   DEBUG  [#9092]  C: <CLOSE>
2021-11-22 12:46:29,707   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 12:46:29,707   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 12:46:29,707   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 12:46:29,708   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 12:46:29,708   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 12:46:29,708   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 12:46:29,708   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 12:46:29,708   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 12:46:29,708   DEBUG  Attempting to update routing table from IPv4Address(('localhost', 7687))
2021-11-22 12:46:29,708   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 12:46:29,710   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 12:46:29,711   DEBUG  [#909A]  C: <MAGIC> 0x6060B017
2021-11-22 12:46:29,711   DEBUG  [#909A]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 12:46:29,712   DEBUG  [#909A]  S: <HANDSHAKE> 0x00000204
2021-11-22 12:46:29,712   DEBUG  [#909A]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 12:46:29,715   DEBUG  [#909A]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-147'}
2021-11-22 12:46:29,715   DEBUG  [#909A]  C: RUN 'CALL dbms.routing.getRoutingTable($context, $database)' {'context': {'address': 'localhost:7687'}, 'database': 'graph.db'} {'mode': 'r', 'db': 'system'}
2021-11-22 12:46:29,715   DEBUG  [#909A]  C: PULL {'n': -1}
2021-11-22 12:46:29,723   DEBUG  [#909A]  S: SUCCESS {'t_first': 6, 'fields': ['ttl', 'servers']}
2021-11-22 12:46:29,724   DEBUG  [#909A]  S: RECORD * 1
2021-11-22 12:46:29,724   DEBUG  [#909A]  S: SUCCESS {'bookmark': 'FB:kcwQAAAAAAAAAAAAAAAAAAAAAReQ', 'type': 's', 't_last': 1, 'db': 'system'}
2021-11-22 12:46:29,724   DEBUG  [#909A]  C: RESET
2021-11-22 12:46:29,725   DEBUG  [#909A]  S: SUCCESS {}
2021-11-22 12:46:29,725   DEBUG  [#0000]  S: <ROUTING> table=RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=2850.1919701, ttl=300)
2021-11-22 12:46:29,725   DEBUG  [#0000]  C: <UPDATE ROUTING TABLE> address=ResolvedIPv4Address(('127.0.0.1', 7687)) (RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=2850.1919701, ttl=300))
2021-11-22 12:46:29,725   DEBUG  [#909A]  C: GOODBYE
2021-11-22 12:46:29,725   DEBUG  [#909A]  C: <CLOSE>
2021-11-22 12:46:29,726   DEBUG  [#0000]  C: <ROUTING AGED> database=None
2021-11-22 12:46:29,726   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=2850.1736063 perf_time=2850.192452
2021-11-22 12:46:29,726   DEBUG  [#0000]  C: <ROUTING AGED> database=graph.db
2021-11-22 12:46:29,726   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=2850.1919701 perf_time=2850.19257
2021-11-22 12:46:29,726   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=2850.1736063, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=2850.1919701, ttl=300)}
2021-11-22 12:46:29,726   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 12:46:29,726   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 12:46:29,726   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 12:46:29,726   DEBUG  [#90A0]  C: <MAGIC> 0x6060B017
2021-11-22 12:46:29,726   DEBUG  [#90A0]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 12:46:29,728   DEBUG  [#90A0]  S: <HANDSHAKE> 0x00000204
2021-11-22 12:46:29,729   DEBUG  [#90A0]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 12:46:29,731   DEBUG  [#90A0]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-148'}
2021-11-22 12:46:29,731   DEBUG  [#90A0]  C: BEGIN {'db': 'graph.db'}
2021-11-22 12:46:29,731   DEBUG  [#90A0]  C: RUN "MATCH (node_1:type1{Name:$node_1_name})            -[node_relation:Has_State]-> (node_2:type1{prop1:'temp1',prop2:'temp2',Name:'testname6_State'})             WHERE node_relation.To IS NULL             RETURN count(node_1) as exist" {'node_1_name': 'testname6'} {}
2021-11-22 12:46:29,732   DEBUG  [#90A0]  C: PULL {'n': 1000}
2021-11-22 12:46:29,736   DEBUG  [#90A0]  S: SUCCESS {}
2021-11-22 12:46:29,736   DEBUG  [#90A0]  S: SUCCESS {'t_first': 1, 'fields': ['exist'], 'qid': 0}
2021-11-22 12:46:29,736   DEBUG  [#90A0]  S: RECORD * 1
2021-11-22 12:46:29,736   DEBUG  [#90A0]  S: SUCCESS {'type': 'r', 't_last': 1, 'db': 'graph.db'}
2021-11-22 12:46:29,736   DEBUG  [#90A0]  C: COMMIT
2021-11-22 12:46:29,738   DEBUG  [#90A0]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDUpA='}
2021-11-22 12:46:29,739   DEBUG  [#90A0]  C: RESET
2021-11-22 12:46:29,740   DEBUG  [#90A0]  S: SUCCESS {}
2021-11-22 12:46:29,740    INFO  Node testname6 is up to date
2021-11-22 12:46:29,750   DEBUG  [#90A0]  C: GOODBYE
2021-11-22 12:46:29,751   DEBUG  [#90A0]  C: <CLOSE>
2021-11-22 12:46:38,066   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 12:46:38,066   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 12:46:38,066   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 12:46:38,067   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 12:46:38,067   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 12:46:38,067   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 12:46:38,067   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 12:46:38,067   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 12:46:38,067   DEBUG  Attempting to update routing table from IPv4Address(('localhost', 7687))
2021-11-22 12:46:38,067   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 12:46:38,068   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 12:46:38,069   DEBUG  [#90A8]  C: <MAGIC> 0x6060B017
2021-11-22 12:46:38,069   DEBUG  [#90A8]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 12:46:38,071   DEBUG  [#90A8]  S: <HANDSHAKE> 0x00000204
2021-11-22 12:46:38,071   DEBUG  [#90A8]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 12:46:38,074   DEBUG  [#90A8]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-149'}
2021-11-22 12:46:38,074   DEBUG  [#90A8]  C: RUN 'CALL dbms.routing.getRoutingTable($context, $database)' {'context': {'address': 'localhost:7687'}, 'database': 'graph.db'} {'mode': 'r', 'db': 'system'}
2021-11-22 12:46:38,074   DEBUG  [#90A8]  C: PULL {'n': -1}
2021-11-22 12:46:38,082   DEBUG  [#90A8]  S: SUCCESS {'t_first': 4, 'fields': ['ttl', 'servers']}
2021-11-22 12:46:38,082   DEBUG  [#90A8]  S: RECORD * 1
2021-11-22 12:46:38,082   DEBUG  [#90A8]  S: SUCCESS {'bookmark': 'FB:kcwQAAAAAAAAAAAAAAAAAAAAAReQ', 'type': 's', 't_last': 1, 'db': 'system'}
2021-11-22 12:46:38,082   DEBUG  [#90A8]  C: RESET
2021-11-22 12:46:38,083   DEBUG  [#90A8]  S: SUCCESS {}
2021-11-22 12:46:38,084   DEBUG  [#0000]  S: <ROUTING> table=RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=2858.5503163, ttl=300)
2021-11-22 12:46:38,084   DEBUG  [#0000]  C: <UPDATE ROUTING TABLE> address=ResolvedIPv4Address(('127.0.0.1', 7687)) (RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=2858.5503163, ttl=300))
2021-11-22 12:46:38,084   DEBUG  [#90A8]  C: GOODBYE
2021-11-22 12:46:38,084   DEBUG  [#90A8]  C: <CLOSE>
2021-11-22 12:46:38,084   DEBUG  [#0000]  C: <ROUTING AGED> database=None
2021-11-22 12:46:38,084   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=2858.5327364 perf_time=2858.5506997
2021-11-22 12:46:38,084   DEBUG  [#0000]  C: <ROUTING AGED> database=graph.db
2021-11-22 12:46:38,084   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=2858.5503163 perf_time=2858.5508429
2021-11-22 12:46:38,084   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=2858.5327364, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=2858.5503163, ttl=300)}
2021-11-22 12:46:38,084   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 12:46:38,084   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 12:46:38,084   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 12:46:38,085   DEBUG  [#90AE]  C: <MAGIC> 0x6060B017
2021-11-22 12:46:38,085   DEBUG  [#90AE]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 12:46:38,087   DEBUG  [#90AE]  S: <HANDSHAKE> 0x00000204
2021-11-22 12:46:38,087   DEBUG  [#90AE]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 12:46:38,090   DEBUG  [#90AE]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-150'}
2021-11-22 12:46:38,090   DEBUG  [#90AE]  C: BEGIN {'db': 'graph.db'}
2021-11-22 12:46:38,090   DEBUG  [#90AE]  C: RUN "MATCH (node_1:type1{Name:$node_1_name})            -[node_relation:Has_State]-> (node_2:type1{prop1:'temp3',prop2:'temp2',Name:'testname6_State'})             WHERE node_relation.To IS NULL             RETURN count(node_1) as exist" {'node_1_name': 'testname6'} {}
2021-11-22 12:46:38,090   DEBUG  [#90AE]  C: PULL {'n': 1000}
2021-11-22 12:46:38,164   DEBUG  [#90AE]  S: SUCCESS {}
2021-11-22 12:46:38,164   DEBUG  [#90AE]  S: SUCCESS {'t_first': 70, 'fields': ['exist'], 'qid': 0}
2021-11-22 12:46:38,164   DEBUG  [#90AE]  S: RECORD * 1
2021-11-22 12:46:38,164   DEBUG  [#90AE]  S: SUCCESS {'type': 'r', 't_last': 1, 'db': 'graph.db'}
2021-11-22 12:46:38,164   DEBUG  [#90AE]  C: COMMIT
2021-11-22 12:46:38,166   DEBUG  [#90AE]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDUpA='}
2021-11-22 12:46:38,167   DEBUG  [#90AE]  C: RESET
2021-11-22 12:46:38,169   DEBUG  [#90AE]  S: SUCCESS {}
2021-11-22 12:46:38,169   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 12:46:38,169   DEBUG  [#0000]  C: <ROUTING> Table expired=False
2021-11-22 12:46:38,169   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 12:46:38,169   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=True
2021-11-22 12:46:38,169   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=2858.5327364, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=2858.5503163, ttl=300)}
2021-11-22 12:46:38,169   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 12:46:38,169   DEBUG  [#90AE]  C: BEGIN {'db': 'graph.db', 'bookmarks': ['FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDUpA=']}
2021-11-22 12:46:38,170   DEBUG  [#90AE]  C: RUN 'MATCH (node_1:type1{Name:$node_1_name})             RETURN count(node_1) as exist' {'node_1_name': 'testname6'} {}
2021-11-22 12:46:38,170   DEBUG  [#90AE]  C: PULL {'n': 1000}
2021-11-22 12:46:38,176   DEBUG  [#90AE]  S: SUCCESS {}
2021-11-22 12:46:38,176   DEBUG  [#90AE]  S: SUCCESS {'t_first': 3, 'fields': ['exist'], 'qid': 0}
2021-11-22 12:46:38,176   DEBUG  [#90AE]  S: RECORD * 1
2021-11-22 12:46:38,176   DEBUG  [#90AE]  S: SUCCESS {'type': 'r', 't_last': 1, 'db': 'graph.db'}
2021-11-22 12:46:38,177   DEBUG  [#90AE]  C: COMMIT
2021-11-22 12:46:38,178   DEBUG  [#90AE]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDUpA='}
2021-11-22 12:46:38,179   DEBUG  [#90AE]  C: RESET
2021-11-22 12:46:38,180   DEBUG  [#90AE]  S: SUCCESS {}
2021-11-22 12:46:38,180   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 12:46:38,180   DEBUG  [#0000]  C: <ROUTING> Table expired=False
2021-11-22 12:46:38,180   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 12:46:38,180   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=True
2021-11-22 12:46:38,180   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=2858.5327364, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=2858.5503163, ttl=300)}
2021-11-22 12:46:38,180   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 12:46:38,180   DEBUG  [#90AE]  C: BEGIN {'db': 'graph.db', 'bookmarks': ['FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDUpA=']}
2021-11-22 12:46:38,180   DEBUG  [#90AE]  C: RUN 'MATCH (node_1:type1{Name:$node_1_name})            -[node_relation:Has_State]-> (node_2:type1{Name:$node_1_name_state})             WHERE node_relation.To IS NULL              SET node_relation +={To:$fromDate}' {'node_1_name': 'testname6', 'node_1_name_state': 'testname6_State', 'fromDate': '2021-11-22 12:46:38.180722'} {}
2021-11-22 12:46:38,180   DEBUG  [#90AE]  C: PULL {'n': 1000}
2021-11-22 12:46:38,295   DEBUG  [#90AE]  S: SUCCESS {}
2021-11-22 12:46:38,295   DEBUG  [#90AE]  S: SUCCESS {'t_first': 113, 'fields': [], 'qid': 0}
2021-11-22 12:46:38,295   DEBUG  [#90AE]  C: RUN "MATCH (node_1:type1{Name:$node_1_name})            CREATE (node_2:type1 {prop1:'temp3',prop2:'temp2',Name:'testname6_State'})            CREATE (node_1)-[node_relation:Has_State {From:$fromDate}]->(node_2)            RETURN node_2" {'node_1_name': 'testname6', 'fromDate': '2021-11-22 12:46:38.295414'} {}
2021-11-22 12:46:38,295   DEBUG  [#90AE]  C: PULL {'n': 1000}
2021-11-22 12:46:38,296   DEBUG  [#90AE]  S: SUCCESS {'stats': {'properties-set': 1}, 'type': 'w', 't_last': 0, 'db': 'graph.db'}
2021-11-22 12:46:38,381   DEBUG  [#90AE]  S: SUCCESS {'t_first': 51, 'fields': ['node_2'], 'qid': 1}
2021-11-22 12:46:38,381   DEBUG  [#90AE]  S: RECORD * 1
2021-11-22 12:46:38,382   DEBUG  [#90AE]  S: SUCCESS {'stats': {'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 4}, 'type': 'rw', 't_last': 8, 'db': 'graph.db'}
2021-11-22 12:46:38,382   DEBUG  [#90AE]  C: COMMIT
2021-11-22 12:46:38,424   DEBUG  [#90AE]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDU5A='}
2021-11-22 12:46:38,424   DEBUG  [#90AE]  C: RESET
2021-11-22 12:46:38,425   DEBUG  [#90AE]  S: SUCCESS {}
2021-11-22 12:46:38,425    INFO  Node testname6 got an updated version
2021-11-22 12:46:38,435   DEBUG  [#90AE]  C: GOODBYE
2021-11-22 12:46:38,436   DEBUG  [#90AE]  C: <CLOSE>
2021-11-22 13:21:08,131   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 13:21:08,131   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 13:21:08,131   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 13:21:08,131   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 13:21:08,131   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 13:21:08,131   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 13:21:08,131   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 13:21:08,131   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 13:21:08,131   DEBUG  Attempting to update routing table from IPv4Address(('localhost', 7687))
2021-11-22 13:21:08,131   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 13:21:08,134   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 13:21:08,135   DEBUG  [#93CA]  C: <MAGIC> 0x6060B017
2021-11-22 13:21:08,135   DEBUG  [#93CA]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 13:21:08,137   DEBUG  [#93CA]  S: <HANDSHAKE> 0x00000204
2021-11-22 13:21:08,137   DEBUG  [#93CA]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 13:21:08,143   DEBUG  [#93CA]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-266'}
2021-11-22 13:21:08,143   DEBUG  [#93CA]  C: RUN 'CALL dbms.routing.getRoutingTable($context, $database)' {'context': {'address': 'localhost:7687'}, 'database': 'graph.db'} {'mode': 'r', 'db': 'system'}
2021-11-22 13:21:08,143   DEBUG  [#93CA]  C: PULL {'n': -1}
2021-11-22 13:21:08,148   DEBUG  [#93CA]  S: SUCCESS {'t_first': 3, 'fields': ['ttl', 'servers']}
2021-11-22 13:21:08,148   DEBUG  [#93CA]  S: RECORD * 1
2021-11-22 13:21:08,148   DEBUG  [#93CA]  S: SUCCESS {'bookmark': 'FB:kcwQAAAAAAAAAAAAAAAAAAAAAReQ', 'type': 's', 't_last': 0, 'db': 'system'}
2021-11-22 13:21:08,148   DEBUG  [#93CA]  C: RESET
2021-11-22 13:21:08,150   DEBUG  [#93CA]  S: SUCCESS {}
2021-11-22 13:21:08,150   DEBUG  [#0000]  S: <ROUTING> table=RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=4928.6168091, ttl=300)
2021-11-22 13:21:08,150   DEBUG  [#0000]  C: <UPDATE ROUTING TABLE> address=ResolvedIPv4Address(('127.0.0.1', 7687)) (RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=4928.6168091, ttl=300))
2021-11-22 13:21:08,150   DEBUG  [#93CA]  C: GOODBYE
2021-11-22 13:21:08,150   DEBUG  [#93CA]  C: <CLOSE>
2021-11-22 13:21:08,150   DEBUG  [#0000]  C: <ROUTING AGED> database=None
2021-11-22 13:21:08,151   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=4928.5971541 perf_time=4928.6173738
2021-11-22 13:21:08,151   DEBUG  [#0000]  C: <ROUTING AGED> database=graph.db
2021-11-22 13:21:08,151   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=4928.6168091 perf_time=4928.6174786
2021-11-22 13:21:08,151   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=4928.5971541, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=4928.6168091, ttl=300)}
2021-11-22 13:21:08,151   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 13:21:08,151   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 13:21:08,151   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 13:21:08,151   DEBUG  [#93D0]  C: <MAGIC> 0x6060B017
2021-11-22 13:21:08,151   DEBUG  [#93D0]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 13:21:08,153   DEBUG  [#93D0]  S: <HANDSHAKE> 0x00000204
2021-11-22 13:21:08,153   DEBUG  [#93D0]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 13:21:08,155   DEBUG  [#93D0]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-267'}
2021-11-22 13:21:08,156   DEBUG  [#93D0]  C: BEGIN {'db': 'graph.db'}
2021-11-22 13:21:08,156   DEBUG  [#93D0]  C: RUN "MATCH(node_1:type1)<-[r1:Has_State]-(node_2:type1)             WHERE r1.To is null AND node_1.Name ='testname6_State'             RETURN properties(node_1)" {} {}
2021-11-22 13:21:08,156   DEBUG  [#93D0]  C: PULL {'n': 1000}
2021-11-22 13:21:08,208   DEBUG  [#93D0]  S: SUCCESS {}
2021-11-22 13:21:08,208   DEBUG  [#93D0]  S: SUCCESS {'t_first': 49, 'fields': ['properties(node_1)'], 'qid': 0}
2021-11-22 13:21:08,208   DEBUG  [#93D0]  S: RECORD * 1
2021-11-22 13:21:08,208   DEBUG  [#93D0]  S: SUCCESS {'type': 'r', 't_last': 1, 'db': 'graph.db'}
2021-11-22 13:21:08,208   DEBUG  [#93D0]  C: COMMIT
2021-11-22 13:21:08,210   DEBUG  [#93D0]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDU5A='}
2021-11-22 13:21:08,210   DEBUG  [#93D0]  C: RESET
2021-11-22 13:21:08,211   DEBUG  [#93D0]  S: SUCCESS {}
2021-11-22 13:21:08,217   DEBUG  [#93D0]  C: GOODBYE
2021-11-22 13:21:08,217   DEBUG  [#93D0]  C: <CLOSE>
2021-11-22 13:37:33,223   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 13:37:33,223   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 13:37:33,223   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 13:37:33,223   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 13:37:33,223   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 13:37:33,223   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 13:37:33,223   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 13:37:33,223   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 13:37:33,223   DEBUG  Attempting to update routing table from IPv4Address(('localhost', 7687))
2021-11-22 13:37:33,223   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 13:37:33,225   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 13:37:33,226   DEBUG  [#97CC]  C: <MAGIC> 0x6060B017
2021-11-22 13:37:33,226   DEBUG  [#97CC]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 13:37:33,227   DEBUG  [#97CC]  S: <HANDSHAKE> 0x00000204
2021-11-22 13:37:33,227   DEBUG  [#97CC]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 13:37:33,229   DEBUG  [#97CC]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-433'}
2021-11-22 13:37:33,229   DEBUG  [#97CC]  C: RUN 'CALL dbms.routing.getRoutingTable($context, $database)' {'context': {'address': 'localhost:7687'}, 'database': 'graph.db'} {'mode': 'r', 'db': 'system'}
2021-11-22 13:37:33,230   DEBUG  [#97CC]  C: PULL {'n': -1}
2021-11-22 13:37:33,235   DEBUG  [#97CC]  S: SUCCESS {'t_first': 3, 'fields': ['ttl', 'servers']}
2021-11-22 13:37:33,235   DEBUG  [#97CC]  S: RECORD * 1
2021-11-22 13:37:33,235   DEBUG  [#97CC]  S: SUCCESS {'bookmark': 'FB:kcwQAAAAAAAAAAAAAAAAAAAAAReQ', 'type': 's', 't_last': 0, 'db': 'system'}
2021-11-22 13:37:33,235   DEBUG  [#97CC]  C: RESET
2021-11-22 13:37:33,236   DEBUG  [#97CC]  S: SUCCESS {}
2021-11-22 13:37:33,236   DEBUG  [#0000]  S: <ROUTING> table=RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=5913.7032248, ttl=300)
2021-11-22 13:37:33,237   DEBUG  [#0000]  C: <UPDATE ROUTING TABLE> address=ResolvedIPv4Address(('127.0.0.1', 7687)) (RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=5913.7032248, ttl=300))
2021-11-22 13:37:33,237   DEBUG  [#97CC]  C: GOODBYE
2021-11-22 13:37:33,237   DEBUG  [#97CC]  C: <CLOSE>
2021-11-22 13:37:33,237   DEBUG  [#0000]  C: <ROUTING AGED> database=None
2021-11-22 13:37:33,237   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=5913.6895481 perf_time=5913.7037178
2021-11-22 13:37:33,237   DEBUG  [#0000]  C: <ROUTING AGED> database=graph.db
2021-11-22 13:37:33,237   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=5913.7032248 perf_time=5913.7038111
2021-11-22 13:37:33,237   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=5913.6895481, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=5913.7032248, ttl=300)}
2021-11-22 13:37:33,237   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 13:37:33,237   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 13:37:33,238   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 13:37:33,238   DEBUG  [#97D2]  C: <MAGIC> 0x6060B017
2021-11-22 13:37:33,238   DEBUG  [#97D2]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 13:37:33,239   DEBUG  [#97D2]  S: <HANDSHAKE> 0x00000204
2021-11-22 13:37:33,239   DEBUG  [#97D2]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 13:37:33,242   DEBUG  [#97D2]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-434'}
2021-11-22 13:37:33,242   DEBUG  [#97D2]  C: BEGIN {'db': 'graph.db'}
2021-11-22 13:37:33,242   DEBUG  [#97D2]  C: RUN "MATCH (node_1:type1{Name:$node_1_name})            -[node_relation:Has_State]-> (node_2:type1{prop1:'temp34',prop2:'temp2',Name:'testname6_State'})             WHERE node_relation.To IS NULL             RETURN count(node_1) as exist" {'node_1_name': 'testname6'} {}
2021-11-22 13:37:33,242   DEBUG  [#97D2]  C: PULL {'n': 1000}
2021-11-22 13:37:33,298   DEBUG  [#97D2]  S: SUCCESS {}
2021-11-22 13:37:33,298   DEBUG  [#97D2]  S: SUCCESS {'t_first': 53, 'fields': ['exist'], 'qid': 0}
2021-11-22 13:37:33,298   DEBUG  [#97D2]  S: RECORD * 1
2021-11-22 13:37:33,298   DEBUG  [#97D2]  S: SUCCESS {'type': 'r', 't_last': 1, 'db': 'graph.db'}
2021-11-22 13:37:33,298   DEBUG  [#97D2]  C: COMMIT
2021-11-22 13:37:33,299   DEBUG  [#97D2]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDU5A='}
2021-11-22 13:37:33,299   DEBUG  [#97D2]  C: RESET
2021-11-22 13:37:33,301   DEBUG  [#97D2]  S: SUCCESS {}
2021-11-22 13:37:33,301   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 13:37:33,301   DEBUG  [#0000]  C: <ROUTING> Table expired=False
2021-11-22 13:37:33,301   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 13:37:33,301   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=True
2021-11-22 13:37:33,301   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=5913.6895481, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=5913.7032248, ttl=300)}
2021-11-22 13:37:33,301   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 13:37:33,301   DEBUG  [#97D2]  C: BEGIN {'db': 'graph.db', 'bookmarks': ['FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDU5A=']}
2021-11-22 13:37:33,302   DEBUG  [#97D2]  C: RUN 'MATCH (node_1:type1{Name:$node_1_name})             RETURN count(node_1) as exist' {'node_1_name': 'testname6'} {}
2021-11-22 13:37:33,302   DEBUG  [#97D2]  C: PULL {'n': 1000}
2021-11-22 13:37:33,305   DEBUG  [#97D2]  S: SUCCESS {}
2021-11-22 13:37:33,306   DEBUG  [#97D2]  S: SUCCESS {'t_first': 1, 'fields': ['exist'], 'qid': 0}
2021-11-22 13:37:33,306   DEBUG  [#97D2]  S: RECORD * 1
2021-11-22 13:37:33,306   DEBUG  [#97D2]  S: SUCCESS {'type': 'r', 't_last': 0, 'db': 'graph.db'}
2021-11-22 13:37:33,306   DEBUG  [#97D2]  C: COMMIT
2021-11-22 13:37:33,308   DEBUG  [#97D2]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDU5A='}
2021-11-22 13:37:33,308   DEBUG  [#97D2]  C: RESET
2021-11-22 13:37:33,309   DEBUG  [#97D2]  S: SUCCESS {}
2021-11-22 13:37:33,310   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 13:37:33,310   DEBUG  [#0000]  C: <ROUTING> Table expired=False
2021-11-22 13:37:33,310   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 13:37:33,310   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=True
2021-11-22 13:37:33,310   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=5913.6895481, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=5913.7032248, ttl=300)}
2021-11-22 13:37:33,310   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 13:37:33,310   DEBUG  [#97D2]  C: BEGIN {'db': 'graph.db', 'bookmarks': ['FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDU5A=']}
2021-11-22 13:37:33,310   DEBUG  [#97D2]  C: RUN 'MATCH (node_1:type1{Name:$node_1_name})            -[node_relation:Has_State]-> (node_2:type1{Name:$node_1_name_state})             WHERE node_relation.To IS NULL              SET node_relation +={To:$fromDate}' {'node_1_name': 'testname6', 'node_1_name_state': 'testname6_State', 'fromDate': '2021-11-22 13:37:33.310520'} {}
2021-11-22 13:37:33,310   DEBUG  [#97D2]  C: PULL {'n': 1000}
2021-11-22 13:37:33,326   DEBUG  [#97D2]  S: SUCCESS {}
2021-11-22 13:37:33,326   DEBUG  [#97D2]  S: SUCCESS {'t_first': 14, 'fields': [], 'qid': 0}
2021-11-22 13:37:33,326   DEBUG  [#97D2]  C: RUN "MATCH (node_1:type1{Name:$node_1_name})            CREATE (node_2:type1 {prop1:'temp34',prop2:'temp2',Name:'testname6_State'})            CREATE (node_1)-[node_relation:Has_State {From:$fromDate}]->(node_2)            RETURN node_2" {'node_1_name': 'testname6', 'fromDate': '2021-11-22 13:37:33.326429'} {}
2021-11-22 13:37:33,326   DEBUG  [#97D2]  C: PULL {'n': 1000}
2021-11-22 13:37:33,326   DEBUG  [#97D2]  S: SUCCESS {'stats': {'properties-set': 1}, 'type': 'w', 't_last': 0, 'db': 'graph.db'}
2021-11-22 13:37:33,355   DEBUG  [#97D2]  S: SUCCESS {'t_first': 24, 'fields': ['node_2'], 'qid': 1}
2021-11-22 13:37:33,355   DEBUG  [#97D2]  S: RECORD * 1
2021-11-22 13:37:33,355   DEBUG  [#97D2]  S: SUCCESS {'stats': {'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 4}, 'type': 'rw', 't_last': 3, 'db': 'graph.db'}
2021-11-22 13:37:33,355   DEBUG  [#97D2]  C: COMMIT
2021-11-22 13:37:33,367   DEBUG  [#97D2]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDVJA='}
2021-11-22 13:37:33,367   DEBUG  [#97D2]  C: RESET
2021-11-22 13:37:33,369   DEBUG  [#97D2]  S: SUCCESS {}
2021-11-22 13:37:33,369    INFO  Node testname6 got an updated version
2021-11-22 13:37:33,374   DEBUG  [#97D2]  C: GOODBYE
2021-11-22 13:37:33,375   DEBUG  [#97D2]  C: <CLOSE>
2021-11-22 13:49:15,665   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 13:49:15,666   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 13:49:15,666   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 13:49:15,666   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 13:49:15,666   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 13:49:15,666   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 13:49:15,666   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 13:49:15,666   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 13:49:15,666   DEBUG  Attempting to update routing table from IPv4Address(('localhost', 7687))
2021-11-22 13:49:15,666   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 13:49:15,667   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 13:49:15,668   DEBUG  [#9A5C]  C: <MAGIC> 0x6060B017
2021-11-22 13:49:15,668   DEBUG  [#9A5C]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 13:49:15,669   DEBUG  [#9A5C]  S: <HANDSHAKE> 0x00000204
2021-11-22 13:49:15,670   DEBUG  [#9A5C]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 13:49:15,672   DEBUG  [#9A5C]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-534'}
2021-11-22 13:49:15,672   DEBUG  [#9A5C]  C: RUN 'CALL dbms.routing.getRoutingTable($context, $database)' {'context': {'address': 'localhost:7687'}, 'database': 'graph.db'} {'mode': 'r', 'db': 'system'}
2021-11-22 13:49:15,672   DEBUG  [#9A5C]  C: PULL {'n': -1}
2021-11-22 13:49:15,676   DEBUG  [#9A5C]  S: SUCCESS {'t_first': 2, 'fields': ['ttl', 'servers']}
2021-11-22 13:49:15,676   DEBUG  [#9A5C]  S: RECORD * 1
2021-11-22 13:49:15,677   DEBUG  [#9A5C]  S: SUCCESS {'bookmark': 'FB:kcwQAAAAAAAAAAAAAAAAAAAAAReQ', 'type': 's', 't_last': 0, 'db': 'system'}
2021-11-22 13:49:15,677   DEBUG  [#9A5C]  C: RESET
2021-11-22 13:49:15,678   DEBUG  [#9A5C]  S: SUCCESS {}
2021-11-22 13:49:15,678   DEBUG  [#0000]  S: <ROUTING> table=RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=6616.1447587, ttl=300)
2021-11-22 13:49:15,678   DEBUG  [#0000]  C: <UPDATE ROUTING TABLE> address=ResolvedIPv4Address(('127.0.0.1', 7687)) (RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=6616.1447587, ttl=300))
2021-11-22 13:49:15,678   DEBUG  [#9A5C]  C: GOODBYE
2021-11-22 13:49:15,678   DEBUG  [#9A5C]  C: <CLOSE>
2021-11-22 13:49:15,678   DEBUG  [#0000]  C: <ROUTING AGED> database=None
2021-11-22 13:49:15,678   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=6616.1319629 perf_time=6616.1452844
2021-11-22 13:49:15,679   DEBUG  [#0000]  C: <ROUTING AGED> database=graph.db
2021-11-22 13:49:15,679   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=6616.1447587 perf_time=6616.1453814
2021-11-22 13:49:15,679   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=6616.1319629, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=6616.1447587, ttl=300)}
2021-11-22 13:49:15,679   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 13:49:15,679   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 13:49:15,679   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 13:49:15,679   DEBUG  [#9A62]  C: <MAGIC> 0x6060B017
2021-11-22 13:49:15,679   DEBUG  [#9A62]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 13:49:15,681   DEBUG  [#9A62]  S: <HANDSHAKE> 0x00000204
2021-11-22 13:49:15,681   DEBUG  [#9A62]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 13:49:15,683   DEBUG  [#9A62]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-535'}
2021-11-22 13:49:15,683   DEBUG  [#9A62]  C: BEGIN {'db': 'graph.db'}
2021-11-22 13:49:15,683   DEBUG  [#9A62]  C: RUN 'MATCH (node_1:type1{Name:node_1_name})                -[node_relation:Has_State]->(node_2:type1)                    RETURN node_relation ORDER BY node_relation.To DESC' {'node_1_name': 'testname6'} {}
2021-11-22 13:49:15,683   DEBUG  [#9A62]  C: PULL {'n': 1000}
2021-11-22 13:49:15,689   DEBUG  [#9A62]  S: SUCCESS {}
2021-11-22 13:49:15,689   DEBUG  [#9A62]  S: FAILURE {'code': 'Neo.ClientError.Statement.SyntaxError', 'message': 'Variable `node_1_name` not defined (line 1, column 26 (offset: 25))\n"MATCH (node_1:type1{Name:node_1_name})                -[node_relation:Has_State]->(node_2:type1)                    RETURN node_relation ORDER BY node_relation.To DESC"\n                          ^'}
2021-11-22 13:49:15,689   DEBUG  [#9A62]  C: RESET
2021-11-22 13:49:15,689   DEBUG  [#9A62]  S: IGNORED
2021-11-22 13:49:15,690   DEBUG  [#9A62]  S: SUCCESS {}
2021-11-22 13:49:15,711   DEBUG  [#9A62]  C: GOODBYE
2021-11-22 13:49:15,712   DEBUG  [#9A62]  C: <CLOSE>
2021-11-22 13:50:47,923   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 13:50:47,923   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 13:50:47,923   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 13:50:47,923   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 13:50:47,923   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 13:50:47,924   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 13:50:47,924   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 13:50:47,924   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 13:50:47,924   DEBUG  Attempting to update routing table from IPv4Address(('localhost', 7687))
2021-11-22 13:50:47,924   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 13:50:47,925   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 13:50:47,926   DEBUG  [#9A7E]  C: <MAGIC> 0x6060B017
2021-11-22 13:50:47,926   DEBUG  [#9A7E]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 13:50:47,928   DEBUG  [#9A7E]  S: <HANDSHAKE> 0x00000204
2021-11-22 13:50:47,928   DEBUG  [#9A7E]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 13:50:47,930   DEBUG  [#9A7E]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-539'}
2021-11-22 13:50:47,930   DEBUG  [#9A7E]  C: RUN 'CALL dbms.routing.getRoutingTable($context, $database)' {'context': {'address': 'localhost:7687'}, 'database': 'graph.db'} {'mode': 'r', 'db': 'system'}
2021-11-22 13:50:47,930   DEBUG  [#9A7E]  C: PULL {'n': -1}
2021-11-22 13:50:47,934   DEBUG  [#9A7E]  S: SUCCESS {'t_first': 2, 'fields': ['ttl', 'servers']}
2021-11-22 13:50:47,935   DEBUG  [#9A7E]  S: RECORD * 1
2021-11-22 13:50:47,935   DEBUG  [#9A7E]  S: SUCCESS {'bookmark': 'FB:kcwQAAAAAAAAAAAAAAAAAAAAAReQ', 'type': 's', 't_last': 1, 'db': 'system'}
2021-11-22 13:50:47,935   DEBUG  [#9A7E]  C: RESET
2021-11-22 13:50:47,936   DEBUG  [#9A7E]  S: SUCCESS {}
2021-11-22 13:50:47,936   DEBUG  [#0000]  S: <ROUTING> table=RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=6708.4028058, ttl=300)
2021-11-22 13:50:47,936   DEBUG  [#0000]  C: <UPDATE ROUTING TABLE> address=ResolvedIPv4Address(('127.0.0.1', 7687)) (RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=6708.4028058, ttl=300))
2021-11-22 13:50:47,936   DEBUG  [#9A7E]  C: GOODBYE
2021-11-22 13:50:47,936   DEBUG  [#9A7E]  C: <CLOSE>
2021-11-22 13:50:47,936   DEBUG  [#0000]  C: <ROUTING AGED> database=None
2021-11-22 13:50:47,936   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=6708.3897076 perf_time=6708.4032538
2021-11-22 13:50:47,937   DEBUG  [#0000]  C: <ROUTING AGED> database=graph.db
2021-11-22 13:50:47,937   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=6708.4028058 perf_time=6708.4034095
2021-11-22 13:50:47,937   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=6708.3897076, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=6708.4028058, ttl=300)}
2021-11-22 13:50:47,937   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 13:50:47,937   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 13:50:47,937   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 13:50:47,937   DEBUG  [#9A84]  C: <MAGIC> 0x6060B017
2021-11-22 13:50:47,937   DEBUG  [#9A84]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 13:50:47,939   DEBUG  [#9A84]  S: <HANDSHAKE> 0x00000204
2021-11-22 13:50:47,939   DEBUG  [#9A84]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 13:50:47,941   DEBUG  [#9A84]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-540'}
2021-11-22 13:50:47,941   DEBUG  [#9A84]  C: BEGIN {'db': 'graph.db'}
2021-11-22 13:50:47,941   DEBUG  [#9A84]  C: RUN 'MATCH (node_1:type1{Name:node_1_name})                -[node_relation:Has_State]->(node_2:type1)                    RETURN node_relation ORDER BY node_relation.To DESC' {'node_1_name': 'testname6'} {}
2021-11-22 13:50:47,941   DEBUG  [#9A84]  C: PULL {'n': 1000}
2021-11-22 13:50:47,945   DEBUG  [#9A84]  S: SUCCESS {}
2021-11-22 13:50:47,945   DEBUG  [#9A84]  S: FAILURE {'code': 'Neo.ClientError.Statement.SyntaxError', 'message': 'Variable `node_1_name` not defined (line 1, column 26 (offset: 25))\n"MATCH (node_1:type1{Name:node_1_name})                -[node_relation:Has_State]->(node_2:type1)                    RETURN node_relation ORDER BY node_relation.To DESC"\n                          ^'}
2021-11-22 13:50:47,945   DEBUG  [#9A84]  C: RESET
2021-11-22 13:50:47,945   DEBUG  [#9A84]  S: IGNORED
2021-11-22 13:50:47,946   DEBUG  [#9A84]  S: SUCCESS {}
2021-11-22 13:50:47,955   DEBUG  [#9A84]  C: GOODBYE
2021-11-22 13:50:47,955   DEBUG  [#9A84]  C: <CLOSE>
2021-11-22 13:51:00,930   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 13:51:00,930   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 13:51:00,930   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 13:51:00,930   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 13:51:00,930   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 13:51:00,930   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 13:51:00,930   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 13:51:00,930   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 13:51:00,931   DEBUG  Attempting to update routing table from IPv4Address(('localhost', 7687))
2021-11-22 13:51:00,931   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 13:51:00,932   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 13:51:00,933   DEBUG  [#9A9C]  C: <MAGIC> 0x6060B017
2021-11-22 13:51:00,933   DEBUG  [#9A9C]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 13:51:00,934   DEBUG  [#9A9C]  S: <HANDSHAKE> 0x00000204
2021-11-22 13:51:00,934   DEBUG  [#9A9C]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 13:51:00,937   DEBUG  [#9A9C]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-544'}
2021-11-22 13:51:00,937   DEBUG  [#9A9C]  C: RUN 'CALL dbms.routing.getRoutingTable($context, $database)' {'context': {'address': 'localhost:7687'}, 'database': 'graph.db'} {'mode': 'r', 'db': 'system'}
2021-11-22 13:51:00,937   DEBUG  [#9A9C]  C: PULL {'n': -1}
2021-11-22 13:51:00,940   DEBUG  [#9A9C]  S: SUCCESS {'t_first': 2, 'fields': ['ttl', 'servers']}
2021-11-22 13:51:00,940   DEBUG  [#9A9C]  S: RECORD * 1
2021-11-22 13:51:00,940   DEBUG  [#9A9C]  S: SUCCESS {'bookmark': 'FB:kcwQAAAAAAAAAAAAAAAAAAAAAReQ', 'type': 's', 't_last': 0, 'db': 'system'}
2021-11-22 13:51:00,940   DEBUG  [#9A9C]  C: RESET
2021-11-22 13:51:00,941   DEBUG  [#9A9C]  S: SUCCESS {}
2021-11-22 13:51:00,942   DEBUG  [#0000]  S: <ROUTING> table=RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=6721.4083833, ttl=300)
2021-11-22 13:51:00,942   DEBUG  [#0000]  C: <UPDATE ROUTING TABLE> address=ResolvedIPv4Address(('127.0.0.1', 7687)) (RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=6721.4083833, ttl=300))
2021-11-22 13:51:00,942   DEBUG  [#9A9C]  C: GOODBYE
2021-11-22 13:51:00,942   DEBUG  [#9A9C]  C: <CLOSE>
2021-11-22 13:51:00,942   DEBUG  [#0000]  C: <ROUTING AGED> database=None
2021-11-22 13:51:00,942   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=6721.3966268 perf_time=6721.4087933
2021-11-22 13:51:00,942   DEBUG  [#0000]  C: <ROUTING AGED> database=graph.db
2021-11-22 13:51:00,942   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=6721.4083833 perf_time=6721.4088897
2021-11-22 13:51:00,942   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=6721.3966268, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=6721.4083833, ttl=300)}
2021-11-22 13:51:00,942   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 13:51:00,942   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 13:51:00,942   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 13:51:00,943   DEBUG  [#9AA2]  C: <MAGIC> 0x6060B017
2021-11-22 13:51:00,943   DEBUG  [#9AA2]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 13:51:00,944   DEBUG  [#9AA2]  S: <HANDSHAKE> 0x00000204
2021-11-22 13:51:00,944   DEBUG  [#9AA2]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 13:51:00,946   DEBUG  [#9AA2]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-545'}
2021-11-22 13:51:00,947   DEBUG  [#9AA2]  C: BEGIN {'db': 'graph.db'}
2021-11-22 13:51:00,947   DEBUG  [#9AA2]  C: RUN 'MATCH (node_1:type1{Name:node_1_name})            -[node_relation:Has_State]->(node_2:type1)            RETURN node_relation ORDER BY node_relation.To DESC' {'node_1_name': 'testname6'} {}
2021-11-22 13:51:00,947   DEBUG  [#9AA2]  C: PULL {'n': 1000}
2021-11-22 13:51:00,951   DEBUG  [#9AA2]  S: SUCCESS {}
2021-11-22 13:51:00,951   DEBUG  [#9AA2]  S: FAILURE {'code': 'Neo.ClientError.Statement.SyntaxError', 'message': 'Variable `node_1_name` not defined (line 1, column 26 (offset: 25))\n"MATCH (node_1:type1{Name:node_1_name})            -[node_relation:Has_State]->(node_2:type1)            RETURN node_relation ORDER BY node_relation.To DESC"\n                          ^'}
2021-11-22 13:51:00,951   DEBUG  [#9AA2]  C: RESET
2021-11-22 13:51:00,951   DEBUG  [#9AA2]  S: IGNORED
2021-11-22 13:51:00,952   DEBUG  [#9AA2]  S: SUCCESS {}
2021-11-22 13:51:00,960   DEBUG  [#9AA2]  C: GOODBYE
2021-11-22 13:51:00,960   DEBUG  [#9AA2]  C: <CLOSE>
2021-11-22 13:51:41,939   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 13:51:41,939   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 13:51:41,939   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 13:51:41,939   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 13:51:41,939   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 13:51:41,939   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 13:51:41,939   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 13:51:41,939   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 13:51:41,939   DEBUG  Attempting to update routing table from IPv4Address(('localhost', 7687))
2021-11-22 13:51:41,939   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 13:51:41,940   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 13:51:41,942   DEBUG  [#9AAC]  C: <MAGIC> 0x6060B017
2021-11-22 13:51:41,942   DEBUG  [#9AAC]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 13:51:41,943   DEBUG  [#9AAC]  S: <HANDSHAKE> 0x00000204
2021-11-22 13:51:41,943   DEBUG  [#9AAC]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 13:51:41,947   DEBUG  [#9AAC]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-546'}
2021-11-22 13:51:41,947   DEBUG  [#9AAC]  C: RUN 'CALL dbms.routing.getRoutingTable($context, $database)' {'context': {'address': 'localhost:7687'}, 'database': 'graph.db'} {'mode': 'r', 'db': 'system'}
2021-11-22 13:51:41,947   DEBUG  [#9AAC]  C: PULL {'n': -1}
2021-11-22 13:51:41,951   DEBUG  [#9AAC]  S: SUCCESS {'t_first': 2, 'fields': ['ttl', 'servers']}
2021-11-22 13:51:41,952   DEBUG  [#9AAC]  S: RECORD * 1
2021-11-22 13:51:41,952   DEBUG  [#9AAC]  S: SUCCESS {'bookmark': 'FB:kcwQAAAAAAAAAAAAAAAAAAAAAReQ', 'type': 's', 't_last': 0, 'db': 'system'}
2021-11-22 13:51:41,952   DEBUG  [#9AAC]  C: RESET
2021-11-22 13:51:41,953   DEBUG  [#9AAC]  S: SUCCESS {}
2021-11-22 13:51:41,953   DEBUG  [#0000]  S: <ROUTING> table=RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=6762.4198652, ttl=300)
2021-11-22 13:51:41,953   DEBUG  [#0000]  C: <UPDATE ROUTING TABLE> address=ResolvedIPv4Address(('127.0.0.1', 7687)) (RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=6762.4198652, ttl=300))
2021-11-22 13:51:41,953   DEBUG  [#9AAC]  C: GOODBYE
2021-11-22 13:51:41,953   DEBUG  [#9AAC]  C: <CLOSE>
2021-11-22 13:51:41,954   DEBUG  [#0000]  C: <ROUTING AGED> database=None
2021-11-22 13:51:41,954   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=6762.4052074 perf_time=6762.4204524
2021-11-22 13:51:41,954   DEBUG  [#0000]  C: <ROUTING AGED> database=graph.db
2021-11-22 13:51:41,954   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=6762.4198652 perf_time=6762.4206397
2021-11-22 13:51:41,954   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=6762.4052074, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=6762.4198652, ttl=300)}
2021-11-22 13:51:41,954   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 13:51:41,954   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 13:51:41,954   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 13:51:41,955   DEBUG  [#9AB2]  C: <MAGIC> 0x6060B017
2021-11-22 13:51:41,955   DEBUG  [#9AB2]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 13:51:41,957   DEBUG  [#9AB2]  S: <HANDSHAKE> 0x00000204
2021-11-22 13:51:41,957   DEBUG  [#9AB2]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 13:51:41,959   DEBUG  [#9AB2]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-547'}
2021-11-22 13:51:41,960   DEBUG  [#9AB2]  C: BEGIN {'db': 'graph.db'}
2021-11-22 13:51:41,960   DEBUG  [#9AB2]  C: RUN 'MATCH (node_1:type1{Name:$node_1_name})                -[node_relation:Has_State]->(node_2:type1)                    RETURN node_relation ORDER BY node_relation.To DESC' {'node_1_name': 'testname6'} {}
2021-11-22 13:51:41,960   DEBUG  [#9AB2]  C: PULL {'n': 1000}
2021-11-22 13:51:41,991   DEBUG  [#9AB2]  S: SUCCESS {}
2021-11-22 13:51:41,991   DEBUG  [#9AB2]  S: SUCCESS {'t_first': 28, 'fields': ['node_relation'], 'qid': 0}
2021-11-22 13:51:41,991   DEBUG  [#9AB2]  S: RECORD * 1
2021-11-22 13:51:41,992   DEBUG  [#9AB2]  S: RECORD * 1
2021-11-22 13:51:41,992   DEBUG  [#9AB2]  S: RECORD * 1
2021-11-22 13:51:41,992   DEBUG  [#9AB2]  S: SUCCESS {'type': 'r', 't_last': 1, 'db': 'graph.db'}
2021-11-22 13:51:41,993   DEBUG  [#9AB2]  C: COMMIT
2021-11-22 13:51:41,994   DEBUG  [#9AB2]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDVJA='}
2021-11-22 13:51:41,994   DEBUG  [#9AB2]  C: RESET
2021-11-22 13:51:41,996   DEBUG  [#9AB2]  S: SUCCESS {}
2021-11-22 13:51:42,002   DEBUG  [#9AB2]  C: GOODBYE
2021-11-22 13:51:42,002   DEBUG  [#9AB2]  C: <CLOSE>
2021-11-22 13:52:41,529   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 13:52:41,529   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 13:52:41,529   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 13:52:41,529   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 13:52:41,529   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 13:52:41,529   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 13:52:41,529   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 13:52:41,529   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 13:52:41,529   DEBUG  Attempting to update routing table from IPv4Address(('localhost', 7687))
2021-11-22 13:52:41,529   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 13:52:41,531   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 13:52:41,532   DEBUG  [#9AF2]  C: <MAGIC> 0x6060B017
2021-11-22 13:52:41,532   DEBUG  [#9AF2]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 13:52:41,533   DEBUG  [#9AF2]  S: <HANDSHAKE> 0x00000204
2021-11-22 13:52:41,533   DEBUG  [#9AF2]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 13:52:41,535   DEBUG  [#9AF2]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-557'}
2021-11-22 13:52:41,535   DEBUG  [#9AF2]  C: RUN 'CALL dbms.routing.getRoutingTable($context, $database)' {'context': {'address': 'localhost:7687'}, 'database': 'graph.db'} {'mode': 'r', 'db': 'system'}
2021-11-22 13:52:41,535   DEBUG  [#9AF2]  C: PULL {'n': -1}
2021-11-22 13:52:41,539   DEBUG  [#9AF2]  S: SUCCESS {'t_first': 2, 'fields': ['ttl', 'servers']}
2021-11-22 13:52:41,539   DEBUG  [#9AF2]  S: RECORD * 1
2021-11-22 13:52:41,539   DEBUG  [#9AF2]  S: SUCCESS {'bookmark': 'FB:kcwQAAAAAAAAAAAAAAAAAAAAAReQ', 'type': 's', 't_last': 0, 'db': 'system'}
2021-11-22 13:52:41,539   DEBUG  [#9AF2]  C: RESET
2021-11-22 13:52:41,541   DEBUG  [#9AF2]  S: SUCCESS {}
2021-11-22 13:52:41,541   DEBUG  [#0000]  S: <ROUTING> table=RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=6822.0074812, ttl=300)
2021-11-22 13:52:41,541   DEBUG  [#0000]  C: <UPDATE ROUTING TABLE> address=ResolvedIPv4Address(('127.0.0.1', 7687)) (RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=6822.0074812, ttl=300))
2021-11-22 13:52:41,541   DEBUG  [#9AF2]  C: GOODBYE
2021-11-22 13:52:41,541   DEBUG  [#9AF2]  C: <CLOSE>
2021-11-22 13:52:41,541   DEBUG  [#0000]  C: <ROUTING AGED> database=None
2021-11-22 13:52:41,541   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=6821.9954216 perf_time=6822.0079645
2021-11-22 13:52:41,541   DEBUG  [#0000]  C: <ROUTING AGED> database=graph.db
2021-11-22 13:52:41,541   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=6822.0074812 perf_time=6822.0081379
2021-11-22 13:52:41,541   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=6821.9954216, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=6822.0074812, ttl=300)}
2021-11-22 13:52:41,542   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 13:52:41,542   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 13:52:41,542   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 13:52:41,542   DEBUG  [#9AF8]  C: <MAGIC> 0x6060B017
2021-11-22 13:52:41,542   DEBUG  [#9AF8]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 13:52:41,544   DEBUG  [#9AF8]  S: <HANDSHAKE> 0x00000204
2021-11-22 13:52:41,544   DEBUG  [#9AF8]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 13:52:41,546   DEBUG  [#9AF8]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-558'}
2021-11-22 13:52:41,546   DEBUG  [#9AF8]  C: BEGIN {'db': 'graph.db'}
2021-11-22 13:52:41,547   DEBUG  [#9AF8]  C: RUN 'MATCH (node_1:type1{Name:$node_1_name})                -[node_relation:Has_State]->(node_2:type1)                    RETURN node_relation ORDER BY node_relation.To DESC' {'node_1_name': 'testname6'} {}
2021-11-22 13:52:41,547   DEBUG  [#9AF8]  C: PULL {'n': 1000}
2021-11-22 13:52:41,549   DEBUG  [#9AF8]  S: SUCCESS {}
2021-11-22 13:52:41,550   DEBUG  [#9AF8]  S: SUCCESS {'t_first': 1, 'fields': ['node_relation'], 'qid': 0}
2021-11-22 13:52:41,550   DEBUG  [#9AF8]  S: RECORD * 1
2021-11-22 13:52:41,550   DEBUG  [#9AF8]  S: RECORD * 1
2021-11-22 13:52:41,550   DEBUG  [#9AF8]  S: RECORD * 1
2021-11-22 13:52:41,550   DEBUG  [#9AF8]  S: SUCCESS {'type': 'r', 't_last': 1, 'db': 'graph.db'}
2021-11-22 13:52:41,551   DEBUG  [#9AF8]  C: ROLLBACK
2021-11-22 13:52:41,554   DEBUG  [#9AF8]  S: SUCCESS {}
2021-11-22 13:52:41,554   DEBUG  [#9AF8]  C: RESET
2021-11-22 13:52:41,555   DEBUG  [#9AF8]  S: SUCCESS {}
2021-11-22 13:52:41,568   DEBUG  [#9AF8]  C: GOODBYE
2021-11-22 13:52:41,569   DEBUG  [#9AF8]  C: <CLOSE>
2021-11-22 13:54:40,011   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 13:54:40,011   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 13:54:40,011   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 13:54:40,011   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 13:54:40,011   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 13:54:40,011   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 13:54:40,011   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 13:54:40,012   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 13:54:40,012   DEBUG  Attempting to update routing table from IPv4Address(('localhost', 7687))
2021-11-22 13:54:40,012   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 13:54:40,013   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 13:54:40,014   DEBUG  [#9B84]  C: <MAGIC> 0x6060B017
2021-11-22 13:54:40,014   DEBUG  [#9B84]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 13:54:40,015   DEBUG  [#9B84]  S: <HANDSHAKE> 0x00000204
2021-11-22 13:54:40,015   DEBUG  [#9B84]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 13:54:40,018   DEBUG  [#9B84]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-580'}
2021-11-22 13:54:40,019   DEBUG  [#9B84]  C: RUN 'CALL dbms.routing.getRoutingTable($context, $database)' {'context': {'address': 'localhost:7687'}, 'database': 'graph.db'} {'mode': 'r', 'db': 'system'}
2021-11-22 13:54:40,019   DEBUG  [#9B84]  C: PULL {'n': -1}
2021-11-22 13:54:40,022   DEBUG  [#9B84]  S: SUCCESS {'t_first': 2, 'fields': ['ttl', 'servers']}
2021-11-22 13:54:40,023   DEBUG  [#9B84]  S: RECORD * 1
2021-11-22 13:54:40,023   DEBUG  [#9B84]  S: SUCCESS {'bookmark': 'FB:kcwQAAAAAAAAAAAAAAAAAAAAAReQ', 'type': 's', 't_last': 1, 'db': 'system'}
2021-11-22 13:54:40,023   DEBUG  [#9B84]  C: RESET
2021-11-22 13:54:40,024   DEBUG  [#9B84]  S: SUCCESS {}
2021-11-22 13:54:40,024   DEBUG  [#0000]  S: <ROUTING> table=RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=6940.4910874, ttl=300)
2021-11-22 13:54:40,024   DEBUG  [#0000]  C: <UPDATE ROUTING TABLE> address=ResolvedIPv4Address(('127.0.0.1', 7687)) (RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=6940.4910874, ttl=300))
2021-11-22 13:54:40,024   DEBUG  [#9B84]  C: GOODBYE
2021-11-22 13:54:40,025   DEBUG  [#9B84]  C: <CLOSE>
2021-11-22 13:54:40,025   DEBUG  [#0000]  C: <ROUTING AGED> database=None
2021-11-22 13:54:40,025   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=6940.4776774 perf_time=6940.491589
2021-11-22 13:54:40,025   DEBUG  [#0000]  C: <ROUTING AGED> database=graph.db
2021-11-22 13:54:40,025   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=6940.4910874 perf_time=6940.4917227
2021-11-22 13:54:40,025   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=6940.4776774, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=6940.4910874, ttl=300)}
2021-11-22 13:54:40,025   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 13:54:40,025   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 13:54:40,025   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 13:54:40,025   DEBUG  [#9B8A]  C: <MAGIC> 0x6060B017
2021-11-22 13:54:40,026   DEBUG  [#9B8A]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 13:54:40,027   DEBUG  [#9B8A]  S: <HANDSHAKE> 0x00000204
2021-11-22 13:54:40,027   DEBUG  [#9B8A]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 13:54:40,029   DEBUG  [#9B8A]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-581'}
2021-11-22 13:54:40,030   DEBUG  [#9B8A]  C: BEGIN {'db': 'graph.db'}
2021-11-22 13:54:40,030   DEBUG  [#9B8A]  C: RUN 'MATCH (node_1:type1{Name:$node_1_name})                -[node_relation:Has_State]->(node_2:type1)                    RETURN properties(node_relation) ORDER BY node_relation.To DESC' {'node_1_name': 'testname6'} {}
2021-11-22 13:54:40,030   DEBUG  [#9B8A]  C: PULL {'n': 1000}
2021-11-22 13:54:40,059   DEBUG  [#9B8A]  S: SUCCESS {}
2021-11-22 13:54:40,059   DEBUG  [#9B8A]  S: SUCCESS {'t_first': 28, 'fields': ['properties(node_relation)'], 'qid': 0}
2021-11-22 13:54:40,060   DEBUG  [#9B8A]  S: RECORD * 1
2021-11-22 13:54:40,060   DEBUG  [#9B8A]  S: RECORD * 1
2021-11-22 13:54:40,060   DEBUG  [#9B8A]  S: RECORD * 1
2021-11-22 13:54:40,060   DEBUG  [#9B8A]  S: SUCCESS {'type': 'r', 't_last': 1, 'db': 'graph.db'}
2021-11-22 13:54:40,060   DEBUG  [#9B8A]  C: ROLLBACK
2021-11-22 13:54:40,062   DEBUG  [#9B8A]  S: SUCCESS {}
2021-11-22 13:54:40,062   DEBUG  [#9B8A]  C: RESET
2021-11-22 13:54:40,063   DEBUG  [#9B8A]  S: SUCCESS {}
2021-11-22 13:54:40,078   DEBUG  [#9B8A]  C: GOODBYE
2021-11-22 13:54:40,078   DEBUG  [#9B8A]  C: <CLOSE>
2021-11-22 13:59:56,715   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 13:59:56,715   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 13:59:56,715   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 13:59:56,715   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 13:59:56,715   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 13:59:56,715   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 13:59:56,715   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 13:59:56,715   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 13:59:56,715   DEBUG  Attempting to update routing table from IPv4Address(('localhost', 7687))
2021-11-22 13:59:56,715   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 13:59:56,717   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 13:59:56,718   DEBUG  [#9CA6]  C: <MAGIC> 0x6060B017
2021-11-22 13:59:56,718   DEBUG  [#9CA6]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 13:59:56,719   DEBUG  [#9CA6]  S: <HANDSHAKE> 0x00000204
2021-11-22 13:59:56,720   DEBUG  [#9CA6]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 13:59:56,722   DEBUG  [#9CA6]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-627'}
2021-11-22 13:59:56,722   DEBUG  [#9CA6]  C: RUN 'CALL dbms.routing.getRoutingTable($context, $database)' {'context': {'address': 'localhost:7687'}, 'database': 'graph.db'} {'mode': 'r', 'db': 'system'}
2021-11-22 13:59:56,722   DEBUG  [#9CA6]  C: PULL {'n': -1}
2021-11-22 13:59:56,726   DEBUG  [#9CA6]  S: SUCCESS {'t_first': 2, 'fields': ['ttl', 'servers']}
2021-11-22 13:59:56,726   DEBUG  [#9CA6]  S: RECORD * 1
2021-11-22 13:59:56,726   DEBUG  [#9CA6]  S: SUCCESS {'bookmark': 'FB:kcwQAAAAAAAAAAAAAAAAAAAAAReQ', 'type': 's', 't_last': 0, 'db': 'system'}
2021-11-22 13:59:56,726   DEBUG  [#9CA6]  C: RESET
2021-11-22 13:59:56,728   DEBUG  [#9CA6]  S: SUCCESS {}
2021-11-22 13:59:56,728   DEBUG  [#0000]  S: <ROUTING> table=RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=7257.1945908, ttl=300)
2021-11-22 13:59:56,728   DEBUG  [#0000]  C: <UPDATE ROUTING TABLE> address=ResolvedIPv4Address(('127.0.0.1', 7687)) (RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=7257.1945908, ttl=300))
2021-11-22 13:59:56,728   DEBUG  [#9CA6]  C: GOODBYE
2021-11-22 13:59:56,728   DEBUG  [#9CA6]  C: <CLOSE>
2021-11-22 13:59:56,728   DEBUG  [#0000]  C: <ROUTING AGED> database=None
2021-11-22 13:59:56,728   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=7257.1811282 perf_time=7257.195068
2021-11-22 13:59:56,728   DEBUG  [#0000]  C: <ROUTING AGED> database=graph.db
2021-11-22 13:59:56,728   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=7257.1945908 perf_time=7257.1951799
2021-11-22 13:59:56,728   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=7257.1811282, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=7257.1945908, ttl=300)}
2021-11-22 13:59:56,728   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 13:59:56,729   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 13:59:56,729   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 13:59:56,729   DEBUG  [#9CAC]  C: <MAGIC> 0x6060B017
2021-11-22 13:59:56,729   DEBUG  [#9CAC]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 13:59:56,730   DEBUG  [#9CAC]  S: <HANDSHAKE> 0x00000204
2021-11-22 13:59:56,730   DEBUG  [#9CAC]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 13:59:56,733   DEBUG  [#9CAC]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-628'}
2021-11-22 13:59:56,733   DEBUG  [#9CAC]  C: BEGIN {'db': 'graph.db'}
2021-11-22 13:59:56,733   DEBUG  [#9CAC]  C: RUN 'MATCH (node_1:type1{Name:$node_1_name})                -[node_relation:Has_State]->(node_2:type1)                    RETURN properties(node_relation) ORDER BY node_relation.To DESC' {'node_1_name': 'testname6'} {}
2021-11-22 13:59:56,733   DEBUG  [#9CAC]  C: PULL {'n': 1000}
2021-11-22 13:59:56,736   DEBUG  [#9CAC]  S: SUCCESS {}
2021-11-22 13:59:56,736   DEBUG  [#9CAC]  S: SUCCESS {'t_first': 0, 'fields': ['properties(node_relation)'], 'qid': 0}
2021-11-22 13:59:56,737   DEBUG  [#9CAC]  S: RECORD * 1
2021-11-22 13:59:56,737   DEBUG  [#9CAC]  S: RECORD * 1
2021-11-22 13:59:56,737   DEBUG  [#9CAC]  S: RECORD * 1
2021-11-22 13:59:56,737   DEBUG  [#9CAC]  S: SUCCESS {'type': 'r', 't_last': 1, 'db': 'graph.db'}
2021-11-22 13:59:56,737   DEBUG  [#9CAC]  C: ROLLBACK
2021-11-22 13:59:56,738   DEBUG  [#9CAC]  S: SUCCESS {}
2021-11-22 13:59:56,738   DEBUG  [#9CAC]  C: RESET
2021-11-22 13:59:56,739   DEBUG  [#9CAC]  S: SUCCESS {}
2021-11-22 13:59:56,748   DEBUG  [#9CAC]  C: GOODBYE
2021-11-22 13:59:56,748   DEBUG  [#9CAC]  C: <CLOSE>
2021-11-22 14:00:12,426   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:00:12,426   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 14:00:12,426   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:00:12,426   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 14:00:12,426   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:00:12,426   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 14:00:12,426   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:00:12,426   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 14:00:12,426   DEBUG  Attempting to update routing table from IPv4Address(('localhost', 7687))
2021-11-22 14:00:12,426   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 14:00:12,428   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 14:00:12,429   DEBUG  [#9CC6]  C: <MAGIC> 0x6060B017
2021-11-22 14:00:12,429   DEBUG  [#9CC6]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 14:00:12,430   DEBUG  [#9CC6]  S: <HANDSHAKE> 0x00000204
2021-11-22 14:00:12,430   DEBUG  [#9CC6]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 14:00:12,433   DEBUG  [#9CC6]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-632'}
2021-11-22 14:00:12,433   DEBUG  [#9CC6]  C: RUN 'CALL dbms.routing.getRoutingTable($context, $database)' {'context': {'address': 'localhost:7687'}, 'database': 'graph.db'} {'mode': 'r', 'db': 'system'}
2021-11-22 14:00:12,433   DEBUG  [#9CC6]  C: PULL {'n': -1}
2021-11-22 14:00:12,437   DEBUG  [#9CC6]  S: SUCCESS {'t_first': 2, 'fields': ['ttl', 'servers']}
2021-11-22 14:00:12,437   DEBUG  [#9CC6]  S: RECORD * 1
2021-11-22 14:00:12,437   DEBUG  [#9CC6]  S: SUCCESS {'bookmark': 'FB:kcwQAAAAAAAAAAAAAAAAAAAAAReQ', 'type': 's', 't_last': 0, 'db': 'system'}
2021-11-22 14:00:12,437   DEBUG  [#9CC6]  C: RESET
2021-11-22 14:00:12,438   DEBUG  [#9CC6]  S: SUCCESS {}
2021-11-22 14:00:12,439   DEBUG  [#0000]  S: <ROUTING> table=RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=7272.9053218, ttl=300)
2021-11-22 14:00:12,439   DEBUG  [#0000]  C: <UPDATE ROUTING TABLE> address=ResolvedIPv4Address(('127.0.0.1', 7687)) (RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=7272.9053218, ttl=300))
2021-11-22 14:00:12,439   DEBUG  [#9CC6]  C: GOODBYE
2021-11-22 14:00:12,439   DEBUG  [#9CC6]  C: <CLOSE>
2021-11-22 14:00:12,439   DEBUG  [#0000]  C: <ROUTING AGED> database=None
2021-11-22 14:00:12,439   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=7272.8924494 perf_time=7272.9057719
2021-11-22 14:00:12,439   DEBUG  [#0000]  C: <ROUTING AGED> database=graph.db
2021-11-22 14:00:12,439   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=7272.9053218 perf_time=7272.9059653
2021-11-22 14:00:12,439   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=7272.8924494, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=7272.9053218, ttl=300)}
2021-11-22 14:00:12,439   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 14:00:12,439   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 14:00:12,440   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 14:00:12,440   DEBUG  [#9CCC]  C: <MAGIC> 0x6060B017
2021-11-22 14:00:12,440   DEBUG  [#9CCC]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 14:00:12,441   DEBUG  [#9CCC]  S: <HANDSHAKE> 0x00000204
2021-11-22 14:00:12,442   DEBUG  [#9CCC]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 14:00:12,445   DEBUG  [#9CCC]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-633'}
2021-11-22 14:00:12,445   DEBUG  [#9CCC]  C: BEGIN {'db': 'graph.db'}
2021-11-22 14:00:12,445   DEBUG  [#9CCC]  C: RUN 'MATCH (node_1:type1{Name:$node_1_name})                -[node_relation:Has_State]->(node_2:type1)                    RETURN properties(node_relation) ORDER BY node_relation.To DESC' {'node_1_name': 'testname6'} {}
2021-11-22 14:00:12,445   DEBUG  [#9CCC]  C: PULL {'n': 1000}
2021-11-22 14:00:12,448   DEBUG  [#9CCC]  S: SUCCESS {}
2021-11-22 14:00:12,448   DEBUG  [#9CCC]  S: SUCCESS {'t_first': 0, 'fields': ['properties(node_relation)'], 'qid': 0}
2021-11-22 14:00:12,448   DEBUG  [#9CCC]  S: RECORD * 1
2021-11-22 14:00:12,448   DEBUG  [#9CCC]  S: RECORD * 1
2021-11-22 14:00:12,448   DEBUG  [#9CCC]  S: RECORD * 1
2021-11-22 14:00:12,448   DEBUG  [#9CCC]  S: SUCCESS {'type': 'r', 't_last': 1, 'db': 'graph.db'}
2021-11-22 14:00:12,448   DEBUG  [#9CCC]  C: COMMIT
2021-11-22 14:00:12,450   DEBUG  [#9CCC]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDVJA='}
2021-11-22 14:00:12,450   DEBUG  [#9CCC]  C: RESET
2021-11-22 14:00:12,451   DEBUG  [#9CCC]  S: SUCCESS {}
2021-11-22 14:00:12,458   DEBUG  [#9CCC]  C: GOODBYE
2021-11-22 14:00:12,459   DEBUG  [#9CCC]  C: <CLOSE>
2021-11-22 14:00:42,164   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:00:42,164   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 14:00:42,164   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:00:42,164   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 14:00:42,164   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:00:42,164   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 14:00:42,164   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:00:42,164   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 14:00:42,164   DEBUG  Attempting to update routing table from IPv4Address(('localhost', 7687))
2021-11-22 14:00:42,164   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 14:00:42,166   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 14:00:42,167   DEBUG  [#9CEA]  C: <MAGIC> 0x6060B017
2021-11-22 14:00:42,167   DEBUG  [#9CEA]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 14:00:42,168   DEBUG  [#9CEA]  S: <HANDSHAKE> 0x00000204
2021-11-22 14:00:42,168   DEBUG  [#9CEA]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 14:00:42,171   DEBUG  [#9CEA]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-637'}
2021-11-22 14:00:42,171   DEBUG  [#9CEA]  C: RUN 'CALL dbms.routing.getRoutingTable($context, $database)' {'context': {'address': 'localhost:7687'}, 'database': 'graph.db'} {'mode': 'r', 'db': 'system'}
2021-11-22 14:00:42,171   DEBUG  [#9CEA]  C: PULL {'n': -1}
2021-11-22 14:00:42,176   DEBUG  [#9CEA]  S: SUCCESS {'t_first': 2, 'fields': ['ttl', 'servers']}
2021-11-22 14:00:42,176   DEBUG  [#9CEA]  S: RECORD * 1
2021-11-22 14:00:42,176   DEBUG  [#9CEA]  S: SUCCESS {'bookmark': 'FB:kcwQAAAAAAAAAAAAAAAAAAAAAReQ', 'type': 's', 't_last': 1, 'db': 'system'}
2021-11-22 14:00:42,176   DEBUG  [#9CEA]  C: RESET
2021-11-22 14:00:42,177   DEBUG  [#9CEA]  S: SUCCESS {}
2021-11-22 14:00:42,177   DEBUG  [#0000]  S: <ROUTING> table=RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=7302.6442315, ttl=300)
2021-11-22 14:00:42,178   DEBUG  [#0000]  C: <UPDATE ROUTING TABLE> address=ResolvedIPv4Address(('127.0.0.1', 7687)) (RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=7302.6442315, ttl=300))
2021-11-22 14:00:42,178   DEBUG  [#9CEA]  C: GOODBYE
2021-11-22 14:00:42,178   DEBUG  [#9CEA]  C: <CLOSE>
2021-11-22 14:00:42,178   DEBUG  [#0000]  C: <ROUTING AGED> database=None
2021-11-22 14:00:42,178   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=7302.6303132 perf_time=7302.6446661
2021-11-22 14:00:42,178   DEBUG  [#0000]  C: <ROUTING AGED> database=graph.db
2021-11-22 14:00:42,178   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=7302.6442315 perf_time=7302.6448078
2021-11-22 14:00:42,178   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=7302.6303132, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=7302.6442315, ttl=300)}
2021-11-22 14:00:42,178   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 14:00:42,178   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 14:00:42,178   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 14:00:42,179   DEBUG  [#9CF0]  C: <MAGIC> 0x6060B017
2021-11-22 14:00:42,179   DEBUG  [#9CF0]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 14:00:42,180   DEBUG  [#9CF0]  S: <HANDSHAKE> 0x00000204
2021-11-22 14:00:42,180   DEBUG  [#9CF0]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 14:00:42,182   DEBUG  [#9CF0]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-638'}
2021-11-22 14:00:42,183   DEBUG  [#9CF0]  C: BEGIN {'db': 'graph.db'}
2021-11-22 14:00:42,183   DEBUG  [#9CF0]  C: RUN 'MATCH (node_1:type1{Name:$node_1_name})                -[node_relation:Has_State]->(node_2:type1)                    RETURN properties(node_relation) ORDER BY node_relation.To DESC' {'node_1_name': 'testname6'} {}
2021-11-22 14:00:42,183   DEBUG  [#9CF0]  C: PULL {'n': 1000}
2021-11-22 14:00:42,185   DEBUG  [#9CF0]  S: SUCCESS {}
2021-11-22 14:00:42,185   DEBUG  [#9CF0]  S: SUCCESS {'t_first': 1, 'fields': ['properties(node_relation)'], 'qid': 0}
2021-11-22 14:00:42,185   DEBUG  [#9CF0]  S: RECORD * 1
2021-11-22 14:00:42,186   DEBUG  [#9CF0]  S: RECORD * 1
2021-11-22 14:00:42,186   DEBUG  [#9CF0]  S: RECORD * 1
2021-11-22 14:00:42,186   DEBUG  [#9CF0]  S: SUCCESS {'type': 'r', 't_last': 1, 'db': 'graph.db'}
2021-11-22 14:00:42,186   DEBUG  [#9CF0]  C: COMMIT
2021-11-22 14:00:42,187   DEBUG  [#9CF0]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDVJA='}
2021-11-22 14:00:42,187   DEBUG  [#9CF0]  C: RESET
2021-11-22 14:00:42,188   DEBUG  [#9CF0]  S: SUCCESS {}
2021-11-22 14:00:42,197   DEBUG  [#9CF0]  C: GOODBYE
2021-11-22 14:00:42,198   DEBUG  [#9CF0]  C: <CLOSE>
2021-11-22 14:01:52,918   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:01:52,918   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 14:01:52,918   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:01:52,918   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 14:01:52,918   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:01:52,918   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 14:01:52,918   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:01:52,918   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 14:01:52,918   DEBUG  Attempting to update routing table from IPv4Address(('localhost', 7687))
2021-11-22 14:01:52,918   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 14:01:52,920   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 14:01:52,921   DEBUG  [#9D20]  C: <MAGIC> 0x6060B017
2021-11-22 14:01:52,921   DEBUG  [#9D20]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 14:01:52,922   DEBUG  [#9D20]  S: <HANDSHAKE> 0x00000204
2021-11-22 14:01:52,923   DEBUG  [#9D20]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 14:01:52,925   DEBUG  [#9D20]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-645'}
2021-11-22 14:01:52,925   DEBUG  [#9D20]  C: RUN 'CALL dbms.routing.getRoutingTable($context, $database)' {'context': {'address': 'localhost:7687'}, 'database': 'graph.db'} {'mode': 'r', 'db': 'system'}
2021-11-22 14:01:52,925   DEBUG  [#9D20]  C: PULL {'n': -1}
2021-11-22 14:01:52,929   DEBUG  [#9D20]  S: SUCCESS {'t_first': 1, 'fields': ['ttl', 'servers']}
2021-11-22 14:01:52,929   DEBUG  [#9D20]  S: RECORD * 1
2021-11-22 14:01:52,929   DEBUG  [#9D20]  S: SUCCESS {'bookmark': 'FB:kcwQAAAAAAAAAAAAAAAAAAAAAReQ', 'type': 's', 't_last': 1, 'db': 'system'}
2021-11-22 14:01:52,929   DEBUG  [#9D20]  C: RESET
2021-11-22 14:01:52,930   DEBUG  [#9D20]  S: SUCCESS {}
2021-11-22 14:01:52,931   DEBUG  [#0000]  S: <ROUTING> table=RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=7373.3974393, ttl=300)
2021-11-22 14:01:52,931   DEBUG  [#0000]  C: <UPDATE ROUTING TABLE> address=ResolvedIPv4Address(('127.0.0.1', 7687)) (RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=7373.3974393, ttl=300))
2021-11-22 14:01:52,931   DEBUG  [#9D20]  C: GOODBYE
2021-11-22 14:01:52,931   DEBUG  [#9D20]  C: <CLOSE>
2021-11-22 14:01:52,931   DEBUG  [#0000]  C: <ROUTING AGED> database=None
2021-11-22 14:01:52,931   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=7373.384026 perf_time=7373.3978484
2021-11-22 14:01:52,931   DEBUG  [#0000]  C: <ROUTING AGED> database=graph.db
2021-11-22 14:01:52,931   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=7373.3974393 perf_time=7373.3979283
2021-11-22 14:01:52,931   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=7373.384026, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=7373.3974393, ttl=300)}
2021-11-22 14:01:52,931   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 14:01:52,931   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 14:01:52,931   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 14:01:52,932   DEBUG  [#9D26]  C: <MAGIC> 0x6060B017
2021-11-22 14:01:52,932   DEBUG  [#9D26]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 14:01:52,933   DEBUG  [#9D26]  S: <HANDSHAKE> 0x00000204
2021-11-22 14:01:52,934   DEBUG  [#9D26]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 14:01:52,936   DEBUG  [#9D26]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-646'}
2021-11-22 14:01:52,936   DEBUG  [#9D26]  C: BEGIN {'db': 'graph.db'}
2021-11-22 14:01:52,936   DEBUG  [#9D26]  C: RUN 'MATCH (node_1:type1{Name:$node_1_name})                -[node_relation:Has_State]->(node_2:type1)                    RETURN properties(node_relation) ORDER BY node_relation.To DESC' {'node_1_name': 'testname6'} {}
2021-11-22 14:01:52,936   DEBUG  [#9D26]  C: PULL {'n': 1000}
2021-11-22 14:01:52,938   DEBUG  [#9D26]  S: SUCCESS {}
2021-11-22 14:01:52,939   DEBUG  [#9D26]  S: SUCCESS {'t_first': 0, 'fields': ['properties(node_relation)'], 'qid': 0}
2021-11-22 14:01:52,939   DEBUG  [#9D26]  S: RECORD * 1
2021-11-22 14:01:52,939   DEBUG  [#9D26]  S: RECORD * 1
2021-11-22 14:01:52,939   DEBUG  [#9D26]  S: RECORD * 1
2021-11-22 14:01:52,939   DEBUG  [#9D26]  S: SUCCESS {'type': 'r', 't_last': 1, 'db': 'graph.db'}
2021-11-22 14:01:52,939   DEBUG  [#9D26]  C: COMMIT
2021-11-22 14:01:52,941   DEBUG  [#9D26]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDVJA='}
2021-11-22 14:01:52,941   DEBUG  [#9D26]  C: RESET
2021-11-22 14:01:52,942   DEBUG  [#9D26]  S: SUCCESS {}
2021-11-22 14:01:52,950   DEBUG  [#9D26]  C: GOODBYE
2021-11-22 14:01:52,951   DEBUG  [#9D26]  C: <CLOSE>
2021-11-22 14:03:25,117   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:03:25,117   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 14:03:25,117   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:03:25,117   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 14:03:25,117   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:03:25,117   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 14:03:25,117   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:03:25,117   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 14:03:25,117   DEBUG  Attempting to update routing table from IPv4Address(('localhost', 7687))
2021-11-22 14:03:25,117   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 14:03:25,119   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 14:03:25,120   DEBUG  [#9D44]  C: <MAGIC> 0x6060B017
2021-11-22 14:03:25,120   DEBUG  [#9D44]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 14:03:25,121   DEBUG  [#9D44]  S: <HANDSHAKE> 0x00000204
2021-11-22 14:03:25,121   DEBUG  [#9D44]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 14:03:25,123   DEBUG  [#9D44]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-650'}
2021-11-22 14:03:25,124   DEBUG  [#9D44]  C: RUN 'CALL dbms.routing.getRoutingTable($context, $database)' {'context': {'address': 'localhost:7687'}, 'database': 'graph.db'} {'mode': 'r', 'db': 'system'}
2021-11-22 14:03:25,124   DEBUG  [#9D44]  C: PULL {'n': -1}
2021-11-22 14:03:25,128   DEBUG  [#9D44]  S: SUCCESS {'t_first': 2, 'fields': ['ttl', 'servers']}
2021-11-22 14:03:25,128   DEBUG  [#9D44]  S: RECORD * 1
2021-11-22 14:03:25,128   DEBUG  [#9D44]  S: SUCCESS {'bookmark': 'FB:kcwQAAAAAAAAAAAAAAAAAAAAAReQ', 'type': 's', 't_last': 1, 'db': 'system'}
2021-11-22 14:03:25,128   DEBUG  [#9D44]  C: RESET
2021-11-22 14:03:25,129   DEBUG  [#9D44]  S: SUCCESS {}
2021-11-22 14:03:25,129   DEBUG  [#0000]  S: <ROUTING> table=RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=7465.5960887, ttl=300)
2021-11-22 14:03:25,129   DEBUG  [#0000]  C: <UPDATE ROUTING TABLE> address=ResolvedIPv4Address(('127.0.0.1', 7687)) (RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=7465.5960887, ttl=300))
2021-11-22 14:03:25,129   DEBUG  [#9D44]  C: GOODBYE
2021-11-22 14:03:25,130   DEBUG  [#9D44]  C: <CLOSE>
2021-11-22 14:03:25,130   DEBUG  [#0000]  C: <ROUTING AGED> database=None
2021-11-22 14:03:25,130   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=7465.5834025 perf_time=7465.5964875
2021-11-22 14:03:25,130   DEBUG  [#0000]  C: <ROUTING AGED> database=graph.db
2021-11-22 14:03:25,130   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=7465.5960887 perf_time=7465.5966111
2021-11-22 14:03:25,130   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=7465.5834025, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=7465.5960887, ttl=300)}
2021-11-22 14:03:25,130   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 14:03:25,130   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 14:03:25,130   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 14:03:25,130   DEBUG  [#9D4A]  C: <MAGIC> 0x6060B017
2021-11-22 14:03:25,130   DEBUG  [#9D4A]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 14:03:25,132   DEBUG  [#9D4A]  S: <HANDSHAKE> 0x00000204
2021-11-22 14:03:25,132   DEBUG  [#9D4A]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 14:03:25,134   DEBUG  [#9D4A]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-651'}
2021-11-22 14:03:25,134   DEBUG  [#9D4A]  C: BEGIN {'db': 'graph.db'}
2021-11-22 14:03:25,135   DEBUG  [#9D4A]  C: RUN 'MATCH (node_1:type1{Name:$node_1_name})                -[node_relation:Has_State]->(node_2:type1)                    RETURN properties(node_relation) ORDER BY node_relation.To DESC' {'node_1_name': 'testname6'} {}
2021-11-22 14:03:25,135   DEBUG  [#9D4A]  C: PULL {'n': 1000}
2021-11-22 14:03:25,137   DEBUG  [#9D4A]  S: SUCCESS {}
2021-11-22 14:03:25,138   DEBUG  [#9D4A]  S: SUCCESS {'t_first': 0, 'fields': ['properties(node_relation)'], 'qid': 0}
2021-11-22 14:03:25,138   DEBUG  [#9D4A]  S: RECORD * 1
2021-11-22 14:03:25,138   DEBUG  [#9D4A]  S: RECORD * 1
2021-11-22 14:03:25,138   DEBUG  [#9D4A]  S: RECORD * 1
2021-11-22 14:03:25,138   DEBUG  [#9D4A]  S: SUCCESS {'type': 'r', 't_last': 1, 'db': 'graph.db'}
2021-11-22 14:03:25,138   DEBUG  [#9D4A]  C: COMMIT
2021-11-22 14:03:25,139   DEBUG  [#9D4A]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDVJA='}
2021-11-22 14:03:25,140   DEBUG  [#9D4A]  C: RESET
2021-11-22 14:03:25,141   DEBUG  [#9D4A]  S: SUCCESS {}
2021-11-22 14:03:25,150   DEBUG  [#9D4A]  C: GOODBYE
2021-11-22 14:03:25,150   DEBUG  [#9D4A]  C: <CLOSE>
2021-11-22 14:07:36,534   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:07:36,534   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 14:07:36,534   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:07:36,534   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 14:07:36,535   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:07:36,535   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 14:07:36,535   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:07:36,535   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 14:07:36,535   DEBUG  Attempting to update routing table from IPv4Address(('localhost', 7687))
2021-11-22 14:07:36,535   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 14:07:36,536   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 14:07:36,537   DEBUG  [#9DB2]  C: <MAGIC> 0x6060B017
2021-11-22 14:07:36,537   DEBUG  [#9DB2]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 14:07:36,538   DEBUG  [#9DB2]  S: <HANDSHAKE> 0x00000204
2021-11-22 14:07:36,538   DEBUG  [#9DB2]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 14:07:36,541   DEBUG  [#9DB2]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-664'}
2021-11-22 14:07:36,541   DEBUG  [#9DB2]  C: RUN 'CALL dbms.routing.getRoutingTable($context, $database)' {'context': {'address': 'localhost:7687'}, 'database': 'graph.db'} {'mode': 'r', 'db': 'system'}
2021-11-22 14:07:36,541   DEBUG  [#9DB2]  C: PULL {'n': -1}
2021-11-22 14:07:36,545   DEBUG  [#9DB2]  S: SUCCESS {'t_first': 2, 'fields': ['ttl', 'servers']}
2021-11-22 14:07:36,545   DEBUG  [#9DB2]  S: RECORD * 1
2021-11-22 14:07:36,545   DEBUG  [#9DB2]  S: SUCCESS {'bookmark': 'FB:kcwQAAAAAAAAAAAAAAAAAAAAAReQ', 'type': 's', 't_last': 0, 'db': 'system'}
2021-11-22 14:07:36,545   DEBUG  [#9DB2]  C: RESET
2021-11-22 14:07:36,546   DEBUG  [#9DB2]  S: SUCCESS {}
2021-11-22 14:07:36,547   DEBUG  [#0000]  S: <ROUTING> table=RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=7717.0133589, ttl=300)
2021-11-22 14:07:36,547   DEBUG  [#0000]  C: <UPDATE ROUTING TABLE> address=ResolvedIPv4Address(('127.0.0.1', 7687)) (RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=7717.0133589, ttl=300))
2021-11-22 14:07:36,547   DEBUG  [#9DB2]  C: GOODBYE
2021-11-22 14:07:36,547   DEBUG  [#9DB2]  C: <CLOSE>
2021-11-22 14:07:36,547   DEBUG  [#0000]  C: <ROUTING AGED> database=None
2021-11-22 14:07:36,547   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=7717.0007758 perf_time=7717.0138294
2021-11-22 14:07:36,547   DEBUG  [#0000]  C: <ROUTING AGED> database=graph.db
2021-11-22 14:07:36,547   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=7717.0133589 perf_time=7717.0139867
2021-11-22 14:07:36,547   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=7717.0007758, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=7717.0133589, ttl=300)}
2021-11-22 14:07:36,547   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 14:07:36,547   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 14:07:36,548   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 14:07:36,548   DEBUG  [#9DB8]  C: <MAGIC> 0x6060B017
2021-11-22 14:07:36,548   DEBUG  [#9DB8]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 14:07:36,549   DEBUG  [#9DB8]  S: <HANDSHAKE> 0x00000204
2021-11-22 14:07:36,549   DEBUG  [#9DB8]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 14:07:36,551   DEBUG  [#9DB8]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-665'}
2021-11-22 14:07:36,552   DEBUG  [#9DB8]  C: BEGIN {'db': 'graph.db'}
2021-11-22 14:07:36,552   DEBUG  [#9DB8]  C: RUN 'MATCH (node_1:type1{Name:$node_1_name})                -[node_relation:Has_State]->(node_2:type1)                    RETURN properties(node_relation) ORDER BY node_relation.To DESC' {'node_1_name': 'testname6'} {}
2021-11-22 14:07:36,552   DEBUG  [#9DB8]  C: PULL {'n': 1000}
2021-11-22 14:07:36,555   DEBUG  [#9DB8]  S: SUCCESS {}
2021-11-22 14:07:36,555   DEBUG  [#9DB8]  S: SUCCESS {'t_first': 0, 'fields': ['properties(node_relation)'], 'qid': 0}
2021-11-22 14:07:36,555   DEBUG  [#9DB8]  S: RECORD * 1
2021-11-22 14:07:36,555   DEBUG  [#9DB8]  S: RECORD * 1
2021-11-22 14:07:36,556   DEBUG  [#9DB8]  S: RECORD * 1
2021-11-22 14:07:36,556   DEBUG  [#9DB8]  S: SUCCESS {'type': 'r', 't_last': 1, 'db': 'graph.db'}
2021-11-22 14:07:36,556   DEBUG  [#9DB8]  C: ROLLBACK
2021-11-22 14:07:36,557   DEBUG  [#9DB8]  S: SUCCESS {}
2021-11-22 14:07:36,557   DEBUG  [#9DB8]  C: RESET
2021-11-22 14:07:36,558   DEBUG  [#9DB8]  S: SUCCESS {}
2021-11-22 14:07:36,567   DEBUG  [#9DB8]  C: GOODBYE
2021-11-22 14:07:36,567   DEBUG  [#9DB8]  C: <CLOSE>
2021-11-22 14:08:06,771   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:08:06,771   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 14:08:06,771   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:08:06,771   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 14:08:06,771   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:08:06,771   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 14:08:06,771   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:08:06,771   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 14:08:06,771   DEBUG  Attempting to update routing table from IPv4Address(('localhost', 7687))
2021-11-22 14:08:06,771   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 14:08:06,773   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 14:08:06,774   DEBUG  [#9DD4]  C: <MAGIC> 0x6060B017
2021-11-22 14:08:06,774   DEBUG  [#9DD4]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 14:08:06,775   DEBUG  [#9DD4]  S: <HANDSHAKE> 0x00000204
2021-11-22 14:08:06,775   DEBUG  [#9DD4]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 14:08:06,777   DEBUG  [#9DD4]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-669'}
2021-11-22 14:08:06,777   DEBUG  [#9DD4]  C: RUN 'CALL dbms.routing.getRoutingTable($context, $database)' {'context': {'address': 'localhost:7687'}, 'database': 'graph.db'} {'mode': 'r', 'db': 'system'}
2021-11-22 14:08:06,777   DEBUG  [#9DD4]  C: PULL {'n': -1}
2021-11-22 14:08:06,781   DEBUG  [#9DD4]  S: SUCCESS {'t_first': 2, 'fields': ['ttl', 'servers']}
2021-11-22 14:08:06,781   DEBUG  [#9DD4]  S: RECORD * 1
2021-11-22 14:08:06,781   DEBUG  [#9DD4]  S: SUCCESS {'bookmark': 'FB:kcwQAAAAAAAAAAAAAAAAAAAAAReQ', 'type': 's', 't_last': 0, 'db': 'system'}
2021-11-22 14:08:06,781   DEBUG  [#9DD4]  C: RESET
2021-11-22 14:08:06,783   DEBUG  [#9DD4]  S: SUCCESS {}
2021-11-22 14:08:06,783   DEBUG  [#0000]  S: <ROUTING> table=RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=7747.2494352, ttl=300)
2021-11-22 14:08:06,783   DEBUG  [#0000]  C: <UPDATE ROUTING TABLE> address=ResolvedIPv4Address(('127.0.0.1', 7687)) (RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=7747.2494352, ttl=300))
2021-11-22 14:08:06,783   DEBUG  [#9DD4]  C: GOODBYE
2021-11-22 14:08:06,783   DEBUG  [#9DD4]  C: <CLOSE>
2021-11-22 14:08:06,783   DEBUG  [#0000]  C: <ROUTING AGED> database=None
2021-11-22 14:08:06,783   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=7747.2374476 perf_time=7747.2498178
2021-11-22 14:08:06,783   DEBUG  [#0000]  C: <ROUTING AGED> database=graph.db
2021-11-22 14:08:06,783   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=7747.2494352 perf_time=7747.2499613
2021-11-22 14:08:06,783   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=7747.2374476, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=7747.2494352, ttl=300)}
2021-11-22 14:08:06,783   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 14:08:06,783   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 14:08:06,784   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 14:08:06,784   DEBUG  [#9DDA]  C: <MAGIC> 0x6060B017
2021-11-22 14:08:06,784   DEBUG  [#9DDA]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 14:08:06,785   DEBUG  [#9DDA]  S: <HANDSHAKE> 0x00000204
2021-11-22 14:08:06,786   DEBUG  [#9DDA]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 14:08:06,788   DEBUG  [#9DDA]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-670'}
2021-11-22 14:08:06,788   DEBUG  [#9DDA]  C: BEGIN {'db': 'graph.db'}
2021-11-22 14:08:06,788   DEBUG  [#9DDA]  C: RUN 'MATCH (node_1:type1{Name:$node_1_name})                -[node_relation:Has_State]->(node_2:type1)                    RETURN properties(node_relation) ORDER BY node_relation.To DESC' {'node_1_name': 'testname6'} {}
2021-11-22 14:08:06,788   DEBUG  [#9DDA]  C: PULL {'n': 1000}
2021-11-22 14:08:06,791   DEBUG  [#9DDA]  S: SUCCESS {}
2021-11-22 14:08:06,791   DEBUG  [#9DDA]  S: SUCCESS {'t_first': 0, 'fields': ['properties(node_relation)'], 'qid': 0}
2021-11-22 14:08:06,791   DEBUG  [#9DDA]  S: RECORD * 1
2021-11-22 14:08:06,791   DEBUG  [#9DDA]  S: RECORD * 1
2021-11-22 14:08:06,791   DEBUG  [#9DDA]  S: RECORD * 1
2021-11-22 14:08:06,791   DEBUG  [#9DDA]  S: SUCCESS {'type': 'r', 't_last': 1, 'db': 'graph.db'}
2021-11-22 14:08:06,792   DEBUG  [#9DDA]  C: ROLLBACK
2021-11-22 14:08:06,793   DEBUG  [#9DDA]  S: SUCCESS {}
2021-11-22 14:08:06,793   DEBUG  [#9DDA]  C: RESET
2021-11-22 14:08:06,794   DEBUG  [#9DDA]  S: SUCCESS {}
2021-11-22 14:08:06,802   DEBUG  [#9DDA]  C: GOODBYE
2021-11-22 14:08:06,802   DEBUG  [#9DDA]  C: <CLOSE>
2021-11-22 14:08:11,564   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:08:11,564   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 14:08:11,565   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:08:11,565   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 14:08:11,565   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:08:11,565   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 14:08:11,565   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:08:11,565   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 14:08:11,565   DEBUG  Attempting to update routing table from IPv4Address(('localhost', 7687))
2021-11-22 14:08:11,565   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 14:08:11,566   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 14:08:11,568   DEBUG  [#9DE0]  C: <MAGIC> 0x6060B017
2021-11-22 14:08:11,568   DEBUG  [#9DE0]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 14:08:11,569   DEBUG  [#9DE0]  S: <HANDSHAKE> 0x00000204
2021-11-22 14:08:11,569   DEBUG  [#9DE0]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 14:08:11,571   DEBUG  [#9DE0]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-671'}
2021-11-22 14:08:11,571   DEBUG  [#9DE0]  C: RUN 'CALL dbms.routing.getRoutingTable($context, $database)' {'context': {'address': 'localhost:7687'}, 'database': 'graph.db'} {'mode': 'r', 'db': 'system'}
2021-11-22 14:08:11,571   DEBUG  [#9DE0]  C: PULL {'n': -1}
2021-11-22 14:08:11,575   DEBUG  [#9DE0]  S: SUCCESS {'t_first': 2, 'fields': ['ttl', 'servers']}
2021-11-22 14:08:11,575   DEBUG  [#9DE0]  S: RECORD * 1
2021-11-22 14:08:11,575   DEBUG  [#9DE0]  S: SUCCESS {'bookmark': 'FB:kcwQAAAAAAAAAAAAAAAAAAAAAReQ', 'type': 's', 't_last': 0, 'db': 'system'}
2021-11-22 14:08:11,575   DEBUG  [#9DE0]  C: RESET
2021-11-22 14:08:11,576   DEBUG  [#9DE0]  S: SUCCESS {}
2021-11-22 14:08:11,577   DEBUG  [#0000]  S: <ROUTING> table=RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=7752.0434, ttl=300)
2021-11-22 14:08:11,577   DEBUG  [#0000]  C: <UPDATE ROUTING TABLE> address=ResolvedIPv4Address(('127.0.0.1', 7687)) (RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=7752.0434, ttl=300))
2021-11-22 14:08:11,577   DEBUG  [#9DE0]  C: GOODBYE
2021-11-22 14:08:11,577   DEBUG  [#9DE0]  C: <CLOSE>
2021-11-22 14:08:11,577   DEBUG  [#0000]  C: <ROUTING AGED> database=None
2021-11-22 14:08:11,577   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=7752.030889 perf_time=7752.0438261
2021-11-22 14:08:11,577   DEBUG  [#0000]  C: <ROUTING AGED> database=graph.db
2021-11-22 14:08:11,577   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=7752.0434 perf_time=7752.0439445
2021-11-22 14:08:11,577   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=7752.030889, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=7752.0434, ttl=300)}
2021-11-22 14:08:11,577   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 14:08:11,577   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 14:08:11,578   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 14:08:11,578   DEBUG  [#9DE6]  C: <MAGIC> 0x6060B017
2021-11-22 14:08:11,578   DEBUG  [#9DE6]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 14:08:11,579   DEBUG  [#9DE6]  S: <HANDSHAKE> 0x00000204
2021-11-22 14:08:11,579   DEBUG  [#9DE6]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 14:08:11,582   DEBUG  [#9DE6]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-672'}
2021-11-22 14:08:11,582   DEBUG  [#9DE6]  C: BEGIN {'db': 'graph.db'}
2021-11-22 14:08:11,582   DEBUG  [#9DE6]  C: RUN 'MATCH (node_1:type1{Name:$node_1_name})                -[node_relation:Has_State]->(node_2:type1)                    RETURN properties(node_relation) ORDER BY node_relation.To DESC' {'node_1_name': 'testname6'} {}
2021-11-22 14:08:11,582   DEBUG  [#9DE6]  C: PULL {'n': 1000}
2021-11-22 14:08:11,585   DEBUG  [#9DE6]  S: SUCCESS {}
2021-11-22 14:08:11,585   DEBUG  [#9DE6]  S: SUCCESS {'t_first': 0, 'fields': ['properties(node_relation)'], 'qid': 0}
2021-11-22 14:08:11,585   DEBUG  [#9DE6]  S: RECORD * 1
2021-11-22 14:08:11,585   DEBUG  [#9DE6]  S: RECORD * 1
2021-11-22 14:08:11,585   DEBUG  [#9DE6]  S: RECORD * 1
2021-11-22 14:08:11,585   DEBUG  [#9DE6]  S: SUCCESS {'type': 'r', 't_last': 1, 'db': 'graph.db'}
2021-11-22 14:08:11,586   DEBUG  [#9DE6]  C: ROLLBACK
2021-11-22 14:08:11,588   DEBUG  [#9DE6]  S: SUCCESS {}
2021-11-22 14:08:11,588   DEBUG  [#9DE6]  C: RESET
2021-11-22 14:08:11,589   DEBUG  [#9DE6]  S: SUCCESS {}
2021-11-22 14:08:11,595   DEBUG  [#9DE6]  C: GOODBYE
2021-11-22 14:08:11,595   DEBUG  [#9DE6]  C: <CLOSE>
2021-11-22 14:08:31,492   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:08:31,492   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 14:08:31,492   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:08:31,492   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 14:08:31,492   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:08:31,492   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 14:08:31,492   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:08:31,492   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 14:08:31,492   DEBUG  Attempting to update routing table from IPv4Address(('localhost', 7687))
2021-11-22 14:08:31,492   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 14:08:31,494   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 14:08:31,495   DEBUG  [#9DF0]  C: <MAGIC> 0x6060B017
2021-11-22 14:08:31,495   DEBUG  [#9DF0]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 14:08:31,496   DEBUG  [#9DF0]  S: <HANDSHAKE> 0x00000204
2021-11-22 14:08:31,496   DEBUG  [#9DF0]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 14:08:31,498   DEBUG  [#9DF0]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-673'}
2021-11-22 14:08:31,498   DEBUG  [#9DF0]  C: RUN 'CALL dbms.routing.getRoutingTable($context, $database)' {'context': {'address': 'localhost:7687'}, 'database': 'graph.db'} {'mode': 'r', 'db': 'system'}
2021-11-22 14:08:31,498   DEBUG  [#9DF0]  C: PULL {'n': -1}
2021-11-22 14:08:31,502   DEBUG  [#9DF0]  S: SUCCESS {'t_first': 1, 'fields': ['ttl', 'servers']}
2021-11-22 14:08:31,502   DEBUG  [#9DF0]  S: RECORD * 1
2021-11-22 14:08:31,502   DEBUG  [#9DF0]  S: SUCCESS {'bookmark': 'FB:kcwQAAAAAAAAAAAAAAAAAAAAAReQ', 'type': 's', 't_last': 0, 'db': 'system'}
2021-11-22 14:08:31,502   DEBUG  [#9DF0]  C: RESET
2021-11-22 14:08:31,503   DEBUG  [#9DF0]  S: SUCCESS {}
2021-11-22 14:08:31,503   DEBUG  [#0000]  S: <ROUTING> table=RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=7771.9700232, ttl=300)
2021-11-22 14:08:31,503   DEBUG  [#0000]  C: <UPDATE ROUTING TABLE> address=ResolvedIPv4Address(('127.0.0.1', 7687)) (RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=7771.9700232, ttl=300))
2021-11-22 14:08:31,503   DEBUG  [#9DF0]  C: GOODBYE
2021-11-22 14:08:31,504   DEBUG  [#9DF0]  C: <CLOSE>
2021-11-22 14:08:31,504   DEBUG  [#0000]  C: <ROUTING AGED> database=None
2021-11-22 14:08:31,504   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=7771.9583181 perf_time=7771.9704816
2021-11-22 14:08:31,504   DEBUG  [#0000]  C: <ROUTING AGED> database=graph.db
2021-11-22 14:08:31,504   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=7771.9700232 perf_time=7771.9706872
2021-11-22 14:08:31,504   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=7771.9583181, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=7771.9700232, ttl=300)}
2021-11-22 14:08:31,504   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 14:08:31,504   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 14:08:31,504   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 14:08:31,505   DEBUG  [#9DF6]  C: <MAGIC> 0x6060B017
2021-11-22 14:08:31,505   DEBUG  [#9DF6]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 14:08:31,506   DEBUG  [#9DF6]  S: <HANDSHAKE> 0x00000204
2021-11-22 14:08:31,506   DEBUG  [#9DF6]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 14:08:31,508   DEBUG  [#9DF6]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-674'}
2021-11-22 14:08:31,508   DEBUG  [#9DF6]  C: BEGIN {'db': 'graph.db'}
2021-11-22 14:08:31,508   DEBUG  [#9DF6]  C: RUN 'MATCH (node_1:type1{Name:$node_1_name})                -[node_relation:Has_State]->(node_2:type1)                    RETURN properties(node_relation) ORDER BY node_relation.To DESC' {'node_1_name': 'testname6'} {}
2021-11-22 14:08:31,509   DEBUG  [#9DF6]  C: PULL {'n': 1000}
2021-11-22 14:08:31,511   DEBUG  [#9DF6]  S: SUCCESS {}
2021-11-22 14:08:31,511   DEBUG  [#9DF6]  S: SUCCESS {'t_first': 0, 'fields': ['properties(node_relation)'], 'qid': 0}
2021-11-22 14:08:31,511   DEBUG  [#9DF6]  S: RECORD * 1
2021-11-22 14:08:31,511   DEBUG  [#9DF6]  S: RECORD * 1
2021-11-22 14:08:31,511   DEBUG  [#9DF6]  S: RECORD * 1
2021-11-22 14:08:31,511   DEBUG  [#9DF6]  S: SUCCESS {'type': 'r', 't_last': 1, 'db': 'graph.db'}
2021-11-22 14:08:31,511   DEBUG  [#9DF6]  C: COMMIT
2021-11-22 14:08:31,512   DEBUG  [#9DF6]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDVJA='}
2021-11-22 14:08:31,513   DEBUG  [#9DF6]  C: RESET
2021-11-22 14:08:31,513   DEBUG  [#9DF6]  S: SUCCESS {}
2021-11-22 14:08:31,520   DEBUG  [#9DF6]  C: GOODBYE
2021-11-22 14:08:31,521   DEBUG  [#9DF6]  C: <CLOSE>
2021-11-22 14:08:57,055   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:08:57,055   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 14:08:57,055   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:08:57,055   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 14:08:57,055   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:08:57,055   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 14:08:57,055   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:08:57,055   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 14:08:57,055   DEBUG  Attempting to update routing table from IPv4Address(('localhost', 7687))
2021-11-22 14:08:57,055   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 14:08:57,056   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 14:08:57,058   DEBUG  [#9E12]  C: <MAGIC> 0x6060B017
2021-11-22 14:08:57,058   DEBUG  [#9E12]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 14:08:57,059   DEBUG  [#9E12]  S: <HANDSHAKE> 0x00000204
2021-11-22 14:08:57,059   DEBUG  [#9E12]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 14:08:57,062   DEBUG  [#9E12]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-678'}
2021-11-22 14:08:57,062   DEBUG  [#9E12]  C: RUN 'CALL dbms.routing.getRoutingTable($context, $database)' {'context': {'address': 'localhost:7687'}, 'database': 'graph.db'} {'mode': 'r', 'db': 'system'}
2021-11-22 14:08:57,062   DEBUG  [#9E12]  C: PULL {'n': -1}
2021-11-22 14:08:57,065   DEBUG  [#9E12]  S: SUCCESS {'t_first': 1, 'fields': ['ttl', 'servers']}
2021-11-22 14:08:57,065   DEBUG  [#9E12]  S: RECORD * 1
2021-11-22 14:08:57,065   DEBUG  [#9E12]  S: SUCCESS {'bookmark': 'FB:kcwQAAAAAAAAAAAAAAAAAAAAAReQ', 'type': 's', 't_last': 0, 'db': 'system'}
2021-11-22 14:08:57,065   DEBUG  [#9E12]  C: RESET
2021-11-22 14:08:57,067   DEBUG  [#9E12]  S: SUCCESS {}
2021-11-22 14:08:57,067   DEBUG  [#0000]  S: <ROUTING> table=RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=7797.5335628, ttl=300)
2021-11-22 14:08:57,067   DEBUG  [#0000]  C: <UPDATE ROUTING TABLE> address=ResolvedIPv4Address(('127.0.0.1', 7687)) (RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=7797.5335628, ttl=300))
2021-11-22 14:08:57,067   DEBUG  [#9E12]  C: GOODBYE
2021-11-22 14:08:57,067   DEBUG  [#9E12]  C: <CLOSE>
2021-11-22 14:08:57,067   DEBUG  [#0000]  C: <ROUTING AGED> database=None
2021-11-22 14:08:57,067   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=7797.5210918 perf_time=7797.533978
2021-11-22 14:08:57,067   DEBUG  [#0000]  C: <ROUTING AGED> database=graph.db
2021-11-22 14:08:57,067   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=7797.5335628 perf_time=7797.5340832
2021-11-22 14:08:57,067   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=7797.5210918, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=7797.5335628, ttl=300)}
2021-11-22 14:08:57,067   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 14:08:57,068   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 14:08:57,068   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 14:08:57,068   DEBUG  [#9E18]  C: <MAGIC> 0x6060B017
2021-11-22 14:08:57,068   DEBUG  [#9E18]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 14:08:57,069   DEBUG  [#9E18]  S: <HANDSHAKE> 0x00000204
2021-11-22 14:08:57,069   DEBUG  [#9E18]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 14:08:57,072   DEBUG  [#9E18]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-679'}
2021-11-22 14:08:57,072   DEBUG  [#9E18]  C: BEGIN {'db': 'graph.db'}
2021-11-22 14:08:57,072   DEBUG  [#9E18]  C: RUN 'MATCH (node_1:type1{Name:$node_1_name})                -[node_relation:Has_State]->(node_2:type1)                    RETURN properties(node_relation) ORDER BY node_relation.To DESC' {'node_1_name': 'testname6'} {}
2021-11-22 14:08:57,072   DEBUG  [#9E18]  C: PULL {'n': 1000}
2021-11-22 14:08:57,073   DEBUG  [#9E18]  S: SUCCESS {}
2021-11-22 14:08:57,078   DEBUG  [#9E18]  S: SUCCESS {'t_first': 3, 'fields': ['properties(node_relation)'], 'qid': 0}
2021-11-22 14:08:57,078   DEBUG  [#9E18]  S: RECORD * 1
2021-11-22 14:08:57,078   DEBUG  [#9E18]  S: RECORD * 1
2021-11-22 14:08:57,078   DEBUG  [#9E18]  S: RECORD * 1
2021-11-22 14:08:57,079   DEBUG  [#9E18]  S: SUCCESS {'type': 'r', 't_last': 0, 'db': 'graph.db'}
2021-11-22 14:08:57,079   DEBUG  [#9E18]  C: COMMIT
2021-11-22 14:08:57,080   DEBUG  [#9E18]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDVJA='}
2021-11-22 14:08:57,080   DEBUG  [#9E18]  C: RESET
2021-11-22 14:08:57,081   DEBUG  [#9E18]  S: SUCCESS {}
2021-11-22 14:08:57,089   DEBUG  [#9E18]  C: GOODBYE
2021-11-22 14:08:57,089   DEBUG  [#9E18]  C: <CLOSE>
2021-11-22 14:09:13,578   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:09:13,578   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 14:09:13,578   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:09:13,578   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 14:09:13,578   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:09:13,578   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 14:09:13,578   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:09:13,578   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 14:09:13,578   DEBUG  Attempting to update routing table from IPv4Address(('localhost', 7687))
2021-11-22 14:09:13,578   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 14:09:13,579   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 14:09:13,581   DEBUG  [#9E20]  C: <MAGIC> 0x6060B017
2021-11-22 14:09:13,581   DEBUG  [#9E20]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 14:09:13,582   DEBUG  [#9E20]  S: <HANDSHAKE> 0x00000204
2021-11-22 14:09:13,582   DEBUG  [#9E20]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 14:09:13,584   DEBUG  [#9E20]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-680'}
2021-11-22 14:09:13,584   DEBUG  [#9E20]  C: RUN 'CALL dbms.routing.getRoutingTable($context, $database)' {'context': {'address': 'localhost:7687'}, 'database': 'graph.db'} {'mode': 'r', 'db': 'system'}
2021-11-22 14:09:13,584   DEBUG  [#9E20]  C: PULL {'n': -1}
2021-11-22 14:09:13,587   DEBUG  [#9E20]  S: SUCCESS {'t_first': 1, 'fields': ['ttl', 'servers']}
2021-11-22 14:09:13,588   DEBUG  [#9E20]  S: RECORD * 1
2021-11-22 14:09:13,588   DEBUG  [#9E20]  S: SUCCESS {'bookmark': 'FB:kcwQAAAAAAAAAAAAAAAAAAAAAReQ', 'type': 's', 't_last': 1, 'db': 'system'}
2021-11-22 14:09:13,588   DEBUG  [#9E20]  C: RESET
2021-11-22 14:09:13,589   DEBUG  [#9E20]  S: SUCCESS {}
2021-11-22 14:09:13,589   DEBUG  [#0000]  S: <ROUTING> table=RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=7814.0557727, ttl=300)
2021-11-22 14:09:13,589   DEBUG  [#0000]  C: <UPDATE ROUTING TABLE> address=ResolvedIPv4Address(('127.0.0.1', 7687)) (RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=7814.0557727, ttl=300))
2021-11-22 14:09:13,589   DEBUG  [#9E20]  C: GOODBYE
2021-11-22 14:09:13,589   DEBUG  [#9E20]  C: <CLOSE>
2021-11-22 14:09:13,589   DEBUG  [#0000]  C: <ROUTING AGED> database=None
2021-11-22 14:09:13,589   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=7814.0440643 perf_time=7814.056183
2021-11-22 14:09:13,589   DEBUG  [#0000]  C: <ROUTING AGED> database=graph.db
2021-11-22 14:09:13,589   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=7814.0557727 perf_time=7814.056269
2021-11-22 14:09:13,590   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=7814.0440643, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=7814.0557727, ttl=300)}
2021-11-22 14:09:13,590   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 14:09:13,590   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 14:09:13,590   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 14:09:13,590   DEBUG  [#9E26]  C: <MAGIC> 0x6060B017
2021-11-22 14:09:13,590   DEBUG  [#9E26]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 14:09:13,592   DEBUG  [#9E26]  S: <HANDSHAKE> 0x00000204
2021-11-22 14:09:13,592   DEBUG  [#9E26]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 14:09:13,594   DEBUG  [#9E26]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-681'}
2021-11-22 14:09:13,594   DEBUG  [#9E26]  C: BEGIN {'db': 'graph.db'}
2021-11-22 14:09:13,594   DEBUG  [#9E26]  C: RUN 'MATCH (node_1:type1{Name:$node_1_name})                -[node_relation:Has_State]->(node_2:type1)                    RETURN properties(node_relation) ORDER BY node_relation.To DESC' {'node_1_name': 'testname6'} {}
2021-11-22 14:09:13,594   DEBUG  [#9E26]  C: PULL {'n': 1000}
2021-11-22 14:09:13,597   DEBUG  [#9E26]  S: SUCCESS {}
2021-11-22 14:09:13,597   DEBUG  [#9E26]  S: SUCCESS {'t_first': 0, 'fields': ['properties(node_relation)'], 'qid': 0}
2021-11-22 14:09:13,597   DEBUG  [#9E26]  S: RECORD * 1
2021-11-22 14:09:13,597   DEBUG  [#9E26]  S: RECORD * 1
2021-11-22 14:09:13,597   DEBUG  [#9E26]  S: RECORD * 1
2021-11-22 14:09:13,597   DEBUG  [#9E26]  S: SUCCESS {'type': 'r', 't_last': 1, 'db': 'graph.db'}
2021-11-22 14:09:13,597   DEBUG  [#9E26]  C: COMMIT
2021-11-22 14:09:13,599   DEBUG  [#9E26]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDVJA='}
2021-11-22 14:09:13,599   DEBUG  [#9E26]  C: RESET
2021-11-22 14:09:13,600   DEBUG  [#9E26]  S: SUCCESS {}
2021-11-22 14:09:13,606   DEBUG  [#9E26]  C: GOODBYE
2021-11-22 14:09:13,606   DEBUG  [#9E26]  C: <CLOSE>
2021-11-22 14:15:59,247   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:15:59,247   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 14:15:59,247   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:15:59,247   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 14:15:59,247   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:15:59,248   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 14:15:59,248   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:15:59,248   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 14:15:59,248   DEBUG  Attempting to update routing table from IPv4Address(('localhost', 7687))
2021-11-22 14:15:59,248   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 14:15:59,249   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 14:15:59,250   DEBUG  [#9EBC]  C: <MAGIC> 0x6060B017
2021-11-22 14:15:59,250   DEBUG  [#9EBC]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 14:15:59,251   DEBUG  [#9EBC]  S: <HANDSHAKE> 0x00000204
2021-11-22 14:15:59,252   DEBUG  [#9EBC]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 14:15:59,254   DEBUG  [#9EBC]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-703'}
2021-11-22 14:15:59,254   DEBUG  [#9EBC]  C: RUN 'CALL dbms.routing.getRoutingTable($context, $database)' {'context': {'address': 'localhost:7687'}, 'database': 'graph.db'} {'mode': 'r', 'db': 'system'}
2021-11-22 14:15:59,255   DEBUG  [#9EBC]  C: PULL {'n': -1}
2021-11-22 14:15:59,258   DEBUG  [#9EBC]  S: SUCCESS {'t_first': 2, 'fields': ['ttl', 'servers']}
2021-11-22 14:15:59,258   DEBUG  [#9EBC]  S: RECORD * 1
2021-11-22 14:15:59,258   DEBUG  [#9EBC]  S: SUCCESS {'bookmark': 'FB:kcwQAAAAAAAAAAAAAAAAAAAAAReQ', 'type': 's', 't_last': 0, 'db': 'system'}
2021-11-22 14:15:59,258   DEBUG  [#9EBC]  C: RESET
2021-11-22 14:15:59,260   DEBUG  [#9EBC]  S: SUCCESS {}
2021-11-22 14:15:59,260   DEBUG  [#0000]  S: <ROUTING> table=RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=8219.726541, ttl=300)
2021-11-22 14:15:59,260   DEBUG  [#0000]  C: <UPDATE ROUTING TABLE> address=ResolvedIPv4Address(('127.0.0.1', 7687)) (RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=8219.726541, ttl=300))
2021-11-22 14:15:59,260   DEBUG  [#9EBC]  C: GOODBYE
2021-11-22 14:15:59,260   DEBUG  [#9EBC]  C: <CLOSE>
2021-11-22 14:15:59,260   DEBUG  [#0000]  C: <ROUTING AGED> database=None
2021-11-22 14:15:59,260   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=8219.7135853 perf_time=8219.7269289
2021-11-22 14:15:59,260   DEBUG  [#0000]  C: <ROUTING AGED> database=graph.db
2021-11-22 14:15:59,260   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=8219.726541 perf_time=8219.7270256
2021-11-22 14:15:59,260   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=8219.7135853, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=8219.726541, ttl=300)}
2021-11-22 14:15:59,260   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 14:15:59,261   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 14:15:59,261   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 14:15:59,261   DEBUG  [#9EC2]  C: <MAGIC> 0x6060B017
2021-11-22 14:15:59,261   DEBUG  [#9EC2]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 14:15:59,262   DEBUG  [#9EC2]  S: <HANDSHAKE> 0x00000204
2021-11-22 14:15:59,262   DEBUG  [#9EC2]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 14:15:59,264   DEBUG  [#9EC2]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-704'}
2021-11-22 14:15:59,265   DEBUG  [#9EC2]  C: BEGIN {'db': 'graph.db'}
2021-11-22 14:15:59,265   DEBUG  [#9EC2]  C: RUN 'MATCH (node_1:type1{Name:$node_1_name})                -[node_relation:Has_State]->(node_2:type1)                    RETURN properties(node_relation) ORDER BY node_relation.To DESC' {'node_1_name': 'testname6'} {}
2021-11-22 14:15:59,265   DEBUG  [#9EC2]  C: PULL {'n': 1000}
2021-11-22 14:15:59,268   DEBUG  [#9EC2]  S: SUCCESS {}
2021-11-22 14:15:59,268   DEBUG  [#9EC2]  S: SUCCESS {'t_first': 1, 'fields': ['properties(node_relation)'], 'qid': 0}
2021-11-22 14:15:59,268   DEBUG  [#9EC2]  S: RECORD * 1
2021-11-22 14:15:59,268   DEBUG  [#9EC2]  S: RECORD * 1
2021-11-22 14:15:59,269   DEBUG  [#9EC2]  S: RECORD * 1
2021-11-22 14:15:59,269   DEBUG  [#9EC2]  S: SUCCESS {'type': 'r', 't_last': 1, 'db': 'graph.db'}
2021-11-22 14:15:59,269   DEBUG  [#9EC2]  C: COMMIT
2021-11-22 14:15:59,270   DEBUG  [#9EC2]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDVJA='}
2021-11-22 14:15:59,270   DEBUG  [#9EC2]  C: RESET
2021-11-22 14:15:59,271   DEBUG  [#9EC2]  S: SUCCESS {}
2021-11-22 14:15:59,272   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:15:59,272   DEBUG  [#0000]  C: <ROUTING> Table expired=False
2021-11-22 14:15:59,272   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:15:59,272   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=True
2021-11-22 14:15:59,272   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=8219.7135853, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=8219.726541, ttl=300)}
2021-11-22 14:15:59,272   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 14:15:59,272   DEBUG  [#9EC2]  C: BEGIN {'db': 'graph.db'}
2021-11-22 14:15:59,272   DEBUG  [#9EC2]  C: RUN "MATCH(node_1:type1)<-[r1:Has_State]-(node_2:type1)             WHERE r1.To is null AND node_1.Name ='testname6_State'             RETURN properties(node_1)" {} {}
2021-11-22 14:15:59,272   DEBUG  [#9EC2]  C: PULL {'n': 1000}
2021-11-22 14:15:59,276   DEBUG  [#9EC2]  S: SUCCESS {}
2021-11-22 14:15:59,276   DEBUG  [#9EC2]  S: SUCCESS {'t_first': 1, 'fields': ['properties(node_1)'], 'qid': 0}
2021-11-22 14:15:59,277   DEBUG  [#9EC2]  S: RECORD * 1
2021-11-22 14:15:59,277   DEBUG  [#9EC2]  S: SUCCESS {'type': 'r', 't_last': 1, 'db': 'graph.db'}
2021-11-22 14:15:59,277   DEBUG  [#9EC2]  C: COMMIT
2021-11-22 14:15:59,278   DEBUG  [#9EC2]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDVJA='}
2021-11-22 14:15:59,278   DEBUG  [#9EC2]  C: RESET
2021-11-22 14:15:59,279   DEBUG  [#9EC2]  S: SUCCESS {}
2021-11-22 14:15:59,280   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:15:59,280   DEBUG  [#0000]  C: <ROUTING> Table expired=False
2021-11-22 14:15:59,280   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:15:59,280   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=True
2021-11-22 14:15:59,280   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=8219.7135853, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=8219.726541, ttl=300)}
2021-11-22 14:15:59,280   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 14:15:59,280   DEBUG  [#9EC2]  C: BEGIN {'db': 'graph.db'}
2021-11-22 14:15:59,280   DEBUG  [#9EC2]  C: RUN "MATCH(node_1:type1)<-[r1:Has_State]-(node_2:type1)             WHERE r1.To is 2021-11-22 12:46:38.180722 AND node_1.Name ='testname6_State'             RETURN properties(node_1)" {} {}
2021-11-22 14:15:59,280   DEBUG  [#9EC2]  C: PULL {'n': 1000}
2021-11-22 14:15:59,287   DEBUG  [#9EC2]  S: SUCCESS {}
2021-11-22 14:15:59,287   DEBUG  [#9EC2]  S: FAILURE {'code': 'Neo.ClientError.Statement.SyntaxError', 'message': 'Invalid input \'2021\': expected "null" or "NOT" (line 1, column 79 (offset: 78))\n"MATCH(node_1:type1)<-[r1:Has_State]-(node_2:type1)             WHERE r1.To is 2021-11-22 12:46:38.180722 AND node_1.Name =\'testname6_State\'             RETURN properties(node_1)"\n                                                                               ^'}
2021-11-22 14:15:59,287   DEBUG  [#9EC2]  C: RESET
2021-11-22 14:15:59,287   DEBUG  [#9EC2]  S: IGNORED
2021-11-22 14:15:59,289   DEBUG  [#9EC2]  S: SUCCESS {}
2021-11-22 14:15:59,300   DEBUG  [#9EC2]  C: GOODBYE
2021-11-22 14:15:59,300   DEBUG  [#9EC2]  C: <CLOSE>
2021-11-22 14:18:11,570   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:18:11,570   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 14:18:11,570   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:18:11,570   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 14:18:11,570   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:18:11,570   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 14:18:11,570   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:18:11,570   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 14:18:11,570   DEBUG  Attempting to update routing table from IPv4Address(('localhost', 7687))
2021-11-22 14:18:11,570   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 14:18:11,572   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 14:18:11,573   DEBUG  [#9EFE]  C: <MAGIC> 0x6060B017
2021-11-22 14:18:11,573   DEBUG  [#9EFE]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 14:18:11,574   DEBUG  [#9EFE]  S: <HANDSHAKE> 0x00000204
2021-11-22 14:18:11,574   DEBUG  [#9EFE]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 14:18:11,576   DEBUG  [#9EFE]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-711'}
2021-11-22 14:18:11,576   DEBUG  [#9EFE]  C: RUN 'CALL dbms.routing.getRoutingTable($context, $database)' {'context': {'address': 'localhost:7687'}, 'database': 'graph.db'} {'mode': 'r', 'db': 'system'}
2021-11-22 14:18:11,576   DEBUG  [#9EFE]  C: PULL {'n': -1}
2021-11-22 14:18:11,580   DEBUG  [#9EFE]  S: SUCCESS {'t_first': 1, 'fields': ['ttl', 'servers']}
2021-11-22 14:18:11,580   DEBUG  [#9EFE]  S: RECORD * 1
2021-11-22 14:18:11,580   DEBUG  [#9EFE]  S: SUCCESS {'bookmark': 'FB:kcwQAAAAAAAAAAAAAAAAAAAAAReQ', 'type': 's', 't_last': 1, 'db': 'system'}
2021-11-22 14:18:11,580   DEBUG  [#9EFE]  C: RESET
2021-11-22 14:18:11,581   DEBUG  [#9EFE]  S: SUCCESS {}
2021-11-22 14:18:11,582   DEBUG  [#0000]  S: <ROUTING> table=RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=8352.0484478, ttl=300)
2021-11-22 14:18:11,582   DEBUG  [#0000]  C: <UPDATE ROUTING TABLE> address=ResolvedIPv4Address(('127.0.0.1', 7687)) (RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=8352.0484478, ttl=300))
2021-11-22 14:18:11,582   DEBUG  [#9EFE]  C: GOODBYE
2021-11-22 14:18:11,582   DEBUG  [#9EFE]  C: <CLOSE>
2021-11-22 14:18:11,582   DEBUG  [#0000]  C: <ROUTING AGED> database=None
2021-11-22 14:18:11,582   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=8352.0363724 perf_time=8352.0488582
2021-11-22 14:18:11,582   DEBUG  [#0000]  C: <ROUTING AGED> database=graph.db
2021-11-22 14:18:11,582   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=8352.0484478 perf_time=8352.0489893
2021-11-22 14:18:11,582   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=8352.0363724, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=8352.0484478, ttl=300)}
2021-11-22 14:18:11,582   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 14:18:11,582   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 14:18:11,583   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 14:18:11,583   DEBUG  [#9F04]  C: <MAGIC> 0x6060B017
2021-11-22 14:18:11,583   DEBUG  [#9F04]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 14:18:11,584   DEBUG  [#9F04]  S: <HANDSHAKE> 0x00000204
2021-11-22 14:18:11,584   DEBUG  [#9F04]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 14:18:11,586   DEBUG  [#9F04]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-712'}
2021-11-22 14:18:11,586   DEBUG  [#9F04]  C: BEGIN {'db': 'graph.db'}
2021-11-22 14:18:11,587   DEBUG  [#9F04]  C: RUN 'MATCH (node_1:type1{Name:$node_1_name})                -[node_relation:Has_State]->(node_2:type1)                    RETURN properties(node_relation) ORDER BY node_relation.To DESC' {'node_1_name': 'testname6'} {}
2021-11-22 14:18:11,587   DEBUG  [#9F04]  C: PULL {'n': 1000}
2021-11-22 14:18:11,589   DEBUG  [#9F04]  S: SUCCESS {}
2021-11-22 14:18:11,589   DEBUG  [#9F04]  S: SUCCESS {'t_first': 1, 'fields': ['properties(node_relation)'], 'qid': 0}
2021-11-22 14:18:11,589   DEBUG  [#9F04]  S: RECORD * 1
2021-11-22 14:18:11,589   DEBUG  [#9F04]  S: RECORD * 1
2021-11-22 14:18:11,590   DEBUG  [#9F04]  S: RECORD * 1
2021-11-22 14:18:11,590   DEBUG  [#9F04]  S: SUCCESS {'type': 'r', 't_last': 0, 'db': 'graph.db'}
2021-11-22 14:18:11,590   DEBUG  [#9F04]  C: COMMIT
2021-11-22 14:18:11,591   DEBUG  [#9F04]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDVJA='}
2021-11-22 14:18:11,591   DEBUG  [#9F04]  C: RESET
2021-11-22 14:18:11,592   DEBUG  [#9F04]  S: SUCCESS {}
2021-11-22 14:18:11,592   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:18:11,592   DEBUG  [#0000]  C: <ROUTING> Table expired=False
2021-11-22 14:18:11,592   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:18:11,592   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=True
2021-11-22 14:18:11,593   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=8352.0363724, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=8352.0484478, ttl=300)}
2021-11-22 14:18:11,593   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 14:18:11,593   DEBUG  [#9F04]  C: BEGIN {'db': 'graph.db'}
2021-11-22 14:18:11,593   DEBUG  [#9F04]  C: RUN "MATCH(node_1:type1)<-[r1:Has_State]-(node_2:type1)             WHERE (r1.To is nullOR r1.To = null) AND node_1.Name ='testname6_State'             RETURN properties(node_1)" {} {}
2021-11-22 14:18:11,593   DEBUG  [#9F04]  C: PULL {'n': 1000}
2021-11-22 14:18:11,596   DEBUG  [#9F04]  S: SUCCESS {}
2021-11-22 14:18:11,596   DEBUG  [#9F04]  S: FAILURE {'code': 'Neo.ClientError.Statement.SyntaxError', 'message': 'Invalid input \'nullOR\': expected "null" or "NOT" (line 1, column 80 (offset: 79))\n"MATCH(node_1:type1)<-[r1:Has_State]-(node_2:type1)             WHERE (r1.To is nullOR r1.To = null) AND node_1.Name =\'testname6_State\'             RETURN properties(node_1)"\n                                                                                ^'}
2021-11-22 14:18:11,596   DEBUG  [#9F04]  C: RESET
2021-11-22 14:18:11,596   DEBUG  [#9F04]  S: IGNORED
2021-11-22 14:18:11,597   DEBUG  [#9F04]  S: SUCCESS {}
2021-11-22 14:18:11,607   DEBUG  [#9F04]  C: GOODBYE
2021-11-22 14:18:11,608   DEBUG  [#9F04]  C: <CLOSE>
2021-11-22 14:18:18,813   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:18:18,813   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 14:18:18,813   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:18:18,813   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 14:18:18,813   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:18:18,813   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 14:18:18,813   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:18:18,813   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 14:18:18,813   DEBUG  Attempting to update routing table from IPv4Address(('localhost', 7687))
2021-11-22 14:18:18,813   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 14:18:18,814   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 14:18:18,815   DEBUG  [#9F0A]  C: <MAGIC> 0x6060B017
2021-11-22 14:18:18,815   DEBUG  [#9F0A]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 14:18:18,816   DEBUG  [#9F0A]  S: <HANDSHAKE> 0x00000204
2021-11-22 14:18:18,817   DEBUG  [#9F0A]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 14:18:18,819   DEBUG  [#9F0A]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-713'}
2021-11-22 14:18:18,819   DEBUG  [#9F0A]  C: RUN 'CALL dbms.routing.getRoutingTable($context, $database)' {'context': {'address': 'localhost:7687'}, 'database': 'graph.db'} {'mode': 'r', 'db': 'system'}
2021-11-22 14:18:18,819   DEBUG  [#9F0A]  C: PULL {'n': -1}
2021-11-22 14:18:18,823   DEBUG  [#9F0A]  S: SUCCESS {'t_first': 1, 'fields': ['ttl', 'servers']}
2021-11-22 14:18:18,823   DEBUG  [#9F0A]  S: RECORD * 1
2021-11-22 14:18:18,823   DEBUG  [#9F0A]  S: SUCCESS {'bookmark': 'FB:kcwQAAAAAAAAAAAAAAAAAAAAAReQ', 'type': 's', 't_last': 1, 'db': 'system'}
2021-11-22 14:18:18,823   DEBUG  [#9F0A]  C: RESET
2021-11-22 14:18:18,824   DEBUG  [#9F0A]  S: SUCCESS {}
2021-11-22 14:18:18,824   DEBUG  [#0000]  S: <ROUTING> table=RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=8359.2908755, ttl=300)
2021-11-22 14:18:18,824   DEBUG  [#0000]  C: <UPDATE ROUTING TABLE> address=ResolvedIPv4Address(('127.0.0.1', 7687)) (RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=8359.2908755, ttl=300))
2021-11-22 14:18:18,824   DEBUG  [#9F0A]  C: GOODBYE
2021-11-22 14:18:18,824   DEBUG  [#9F0A]  C: <CLOSE>
2021-11-22 14:18:18,824   DEBUG  [#0000]  C: <ROUTING AGED> database=None
2021-11-22 14:18:18,825   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=8359.2790985 perf_time=8359.2913187
2021-11-22 14:18:18,825   DEBUG  [#0000]  C: <ROUTING AGED> database=graph.db
2021-11-22 14:18:18,825   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=8359.2908755 perf_time=8359.2914364
2021-11-22 14:18:18,825   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=8359.2790985, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=8359.2908755, ttl=300)}
2021-11-22 14:18:18,825   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 14:18:18,825   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 14:18:18,825   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 14:18:18,825   DEBUG  [#9F10]  C: <MAGIC> 0x6060B017
2021-11-22 14:18:18,825   DEBUG  [#9F10]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 14:18:18,826   DEBUG  [#9F10]  S: <HANDSHAKE> 0x00000204
2021-11-22 14:18:18,827   DEBUG  [#9F10]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 14:18:18,828   DEBUG  [#9F10]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-714'}
2021-11-22 14:18:18,828   DEBUG  [#9F10]  C: BEGIN {'db': 'graph.db'}
2021-11-22 14:18:18,829   DEBUG  [#9F10]  C: RUN 'MATCH (node_1:type1{Name:$node_1_name})                -[node_relation:Has_State]->(node_2:type1)                    RETURN properties(node_relation) ORDER BY node_relation.To DESC' {'node_1_name': 'testname6'} {}
2021-11-22 14:18:18,829   DEBUG  [#9F10]  C: PULL {'n': 1000}
2021-11-22 14:18:18,831   DEBUG  [#9F10]  S: SUCCESS {}
2021-11-22 14:18:18,831   DEBUG  [#9F10]  S: SUCCESS {'t_first': 1, 'fields': ['properties(node_relation)'], 'qid': 0}
2021-11-22 14:18:18,831   DEBUG  [#9F10]  S: RECORD * 1
2021-11-22 14:18:18,831   DEBUG  [#9F10]  S: RECORD * 1
2021-11-22 14:18:18,832   DEBUG  [#9F10]  S: RECORD * 1
2021-11-22 14:18:18,832   DEBUG  [#9F10]  S: SUCCESS {'type': 'r', 't_last': 0, 'db': 'graph.db'}
2021-11-22 14:18:18,832   DEBUG  [#9F10]  C: COMMIT
2021-11-22 14:18:18,833   DEBUG  [#9F10]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDVJA='}
2021-11-22 14:18:18,833   DEBUG  [#9F10]  C: RESET
2021-11-22 14:18:18,834   DEBUG  [#9F10]  S: SUCCESS {}
2021-11-22 14:18:18,834   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:18:18,834   DEBUG  [#0000]  C: <ROUTING> Table expired=False
2021-11-22 14:18:18,834   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:18:18,834   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=True
2021-11-22 14:18:18,834   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=8359.2790985, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=8359.2908755, ttl=300)}
2021-11-22 14:18:18,834   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 14:18:18,834   DEBUG  [#9F10]  C: BEGIN {'db': 'graph.db'}
2021-11-22 14:18:18,835   DEBUG  [#9F10]  C: RUN "MATCH(node_1:type1)<-[r1:Has_State]-(node_2:type1)             WHERE (r1.To is null OR r1.To = null) AND node_1.Name ='testname6_State'             RETURN properties(node_1)" {} {}
2021-11-22 14:18:18,835   DEBUG  [#9F10]  C: PULL {'n': 1000}
2021-11-22 14:18:18,911   DEBUG  [#9F10]  S: SUCCESS {}
2021-11-22 14:18:18,911   DEBUG  [#9F10]  S: SUCCESS {'t_first': 73, 'fields': ['properties(node_1)'], 'qid': 0}
2021-11-22 14:18:18,911   DEBUG  [#9F10]  S: RECORD * 1
2021-11-22 14:18:18,911   DEBUG  [#9F10]  S: SUCCESS {'type': 'r', 't_last': 2, 'db': 'graph.db'}
2021-11-22 14:18:18,911   DEBUG  [#9F10]  C: COMMIT
2021-11-22 14:18:18,912   DEBUG  [#9F10]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDVJA='}
2021-11-22 14:18:18,912   DEBUG  [#9F10]  C: RESET
2021-11-22 14:18:18,913   DEBUG  [#9F10]  S: SUCCESS {}
2021-11-22 14:18:18,914   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:18:18,914   DEBUG  [#0000]  C: <ROUTING> Table expired=False
2021-11-22 14:18:18,914   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:18:18,914   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=True
2021-11-22 14:18:18,914   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=8359.2790985, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=8359.2908755, ttl=300)}
2021-11-22 14:18:18,914   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 14:18:18,914   DEBUG  [#9F10]  C: BEGIN {'db': 'graph.db'}
2021-11-22 14:18:18,914   DEBUG  [#9F10]  C: RUN "MATCH(node_1:type1)<-[r1:Has_State]-(node_2:type1)             WHERE (r1.To is 2021-11-22 12:46:38.180722 OR r1.To = 2021-11-22 12:46:38.180722) AND node_1.Name ='testname6_State'             RETURN properties(node_1)" {} {}
2021-11-22 14:18:18,914   DEBUG  [#9F10]  C: PULL {'n': 1000}
2021-11-22 14:18:18,918   DEBUG  [#9F10]  S: SUCCESS {}
2021-11-22 14:18:18,918   DEBUG  [#9F10]  S: FAILURE {'code': 'Neo.ClientError.Statement.SyntaxError', 'message': 'Invalid input \'2021\': expected "null" or "NOT" (line 1, column 80 (offset: 79))\n"MATCH(node_1:type1)<-[r1:Has_State]-(node_2:type1)             WHERE (r1.To is 2021-11-22 12:46:38.180722 OR r1.To = 2021-11-22 12:46:38.180722) AND node_1.Name =\'testname6_State\'             RETURN properties(node_1)"\n                                                                                ^'}
2021-11-22 14:18:18,918   DEBUG  [#9F10]  C: RESET
2021-11-22 14:18:18,918   DEBUG  [#9F10]  S: IGNORED
2021-11-22 14:18:18,919   DEBUG  [#9F10]  S: SUCCESS {}
2021-11-22 14:18:18,930   DEBUG  [#9F10]  C: GOODBYE
2021-11-22 14:18:18,930   DEBUG  [#9F10]  C: <CLOSE>
2021-11-22 14:20:43,477   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:20:43,477   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 14:20:43,477   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:20:43,477   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 14:20:43,477   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:20:43,477   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 14:20:43,477   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:20:43,477   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 14:20:43,477   DEBUG  Attempting to update routing table from IPv4Address(('localhost', 7687))
2021-11-22 14:20:43,477   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 14:20:43,479   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 14:20:43,480   DEBUG  [#9F54]  C: <MAGIC> 0x6060B017
2021-11-22 14:20:43,480   DEBUG  [#9F54]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 14:20:43,481   DEBUG  [#9F54]  S: <HANDSHAKE> 0x00000204
2021-11-22 14:20:43,481   DEBUG  [#9F54]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 14:20:43,483   DEBUG  [#9F54]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-724'}
2021-11-22 14:20:43,484   DEBUG  [#9F54]  C: RUN 'CALL dbms.routing.getRoutingTable($context, $database)' {'context': {'address': 'localhost:7687'}, 'database': 'graph.db'} {'mode': 'r', 'db': 'system'}
2021-11-22 14:20:43,484   DEBUG  [#9F54]  C: PULL {'n': -1}
2021-11-22 14:20:43,487   DEBUG  [#9F54]  S: SUCCESS {'t_first': 2, 'fields': ['ttl', 'servers']}
2021-11-22 14:20:43,488   DEBUG  [#9F54]  S: RECORD * 1
2021-11-22 14:20:43,488   DEBUG  [#9F54]  S: SUCCESS {'bookmark': 'FB:kcwQAAAAAAAAAAAAAAAAAAAAAReQ', 'type': 's', 't_last': 1, 'db': 'system'}
2021-11-22 14:20:43,488   DEBUG  [#9F54]  C: RESET
2021-11-22 14:20:43,489   DEBUG  [#9F54]  S: SUCCESS {}
2021-11-22 14:20:43,489   DEBUG  [#0000]  S: <ROUTING> table=RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=8503.9558126, ttl=300)
2021-11-22 14:20:43,489   DEBUG  [#0000]  C: <UPDATE ROUTING TABLE> address=ResolvedIPv4Address(('127.0.0.1', 7687)) (RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=8503.9558126, ttl=300))
2021-11-22 14:20:43,489   DEBUG  [#9F54]  C: GOODBYE
2021-11-22 14:20:43,489   DEBUG  [#9F54]  C: <CLOSE>
2021-11-22 14:20:43,490   DEBUG  [#0000]  C: <ROUTING AGED> database=None
2021-11-22 14:20:43,490   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=8503.9432113 perf_time=8503.9565051
2021-11-22 14:20:43,490   DEBUG  [#0000]  C: <ROUTING AGED> database=graph.db
2021-11-22 14:20:43,490   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=8503.9558126 perf_time=8503.956748
2021-11-22 14:20:43,490   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=8503.9432113, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=8503.9558126, ttl=300)}
2021-11-22 14:20:43,490   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 14:20:43,490   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 14:20:43,491   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 14:20:43,491   DEBUG  [#9F5A]  C: <MAGIC> 0x6060B017
2021-11-22 14:20:43,491   DEBUG  [#9F5A]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 14:20:43,493   DEBUG  [#9F5A]  S: <HANDSHAKE> 0x00000204
2021-11-22 14:20:43,493   DEBUG  [#9F5A]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 14:20:43,495   DEBUG  [#9F5A]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-725'}
2021-11-22 14:20:43,495   DEBUG  [#9F5A]  C: BEGIN {'db': 'graph.db'}
2021-11-22 14:20:43,495   DEBUG  [#9F5A]  C: RUN 'MATCH (node_1:type1{Name:$node_1_name})                -[node_relation:Has_State]->(node_2:type1)                    RETURN properties(node_relation) ORDER BY node_relation.To DESC' {'node_1_name': 'testname6'} {}
2021-11-22 14:20:43,495   DEBUG  [#9F5A]  C: PULL {'n': 1000}
2021-11-22 14:20:43,498   DEBUG  [#9F5A]  S: SUCCESS {}
2021-11-22 14:20:43,498   DEBUG  [#9F5A]  S: SUCCESS {'t_first': 0, 'fields': ['properties(node_relation)'], 'qid': 0}
2021-11-22 14:20:43,498   DEBUG  [#9F5A]  S: RECORD * 1
2021-11-22 14:20:43,498   DEBUG  [#9F5A]  S: RECORD * 1
2021-11-22 14:20:43,498   DEBUG  [#9F5A]  S: RECORD * 1
2021-11-22 14:20:43,498   DEBUG  [#9F5A]  S: SUCCESS {'type': 'r', 't_last': 1, 'db': 'graph.db'}
2021-11-22 14:20:43,499   DEBUG  [#9F5A]  C: COMMIT
2021-11-22 14:20:43,500   DEBUG  [#9F5A]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDVJA='}
2021-11-22 14:20:43,500   DEBUG  [#9F5A]  C: RESET
2021-11-22 14:20:43,501   DEBUG  [#9F5A]  S: SUCCESS {}
2021-11-22 14:20:43,502   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:20:43,502   DEBUG  [#0000]  C: <ROUTING> Table expired=False
2021-11-22 14:20:43,502   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:20:43,502   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=True
2021-11-22 14:20:43,502   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=8503.9432113, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=8503.9558126, ttl=300)}
2021-11-22 14:20:43,502   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 14:20:43,502   DEBUG  [#9F5A]  C: BEGIN {'db': 'graph.db'}
2021-11-22 14:20:43,502   DEBUG  [#9F5A]  C: RUN "MATCH(node_1:type1)<-[r1:Has_State]-(node_2:type1)                WHERE r1.To is null AND node_1.Name ='testname6_State'                RETURN properties(node_1)" {} {}
2021-11-22 14:20:43,502   DEBUG  [#9F5A]  C: PULL {'n': 1000}
2021-11-22 14:20:43,519   DEBUG  [#9F5A]  S: SUCCESS {}
2021-11-22 14:20:43,520   DEBUG  [#9F5A]  S: SUCCESS {'t_first': 15, 'fields': ['properties(node_1)'], 'qid': 0}
2021-11-22 14:20:43,520   DEBUG  [#9F5A]  S: RECORD * 1
2021-11-22 14:20:43,520   DEBUG  [#9F5A]  S: SUCCESS {'type': 'r', 't_last': 1, 'db': 'graph.db'}
2021-11-22 14:20:43,520   DEBUG  [#9F5A]  C: COMMIT
2021-11-22 14:20:43,521   DEBUG  [#9F5A]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDVJA='}
2021-11-22 14:20:43,521   DEBUG  [#9F5A]  C: RESET
2021-11-22 14:20:43,523   DEBUG  [#9F5A]  S: SUCCESS {}
2021-11-22 14:20:43,523   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:20:43,523   DEBUG  [#0000]  C: <ROUTING> Table expired=False
2021-11-22 14:20:43,523   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:20:43,523   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=True
2021-11-22 14:20:43,523   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=8503.9432113, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=8503.9558126, ttl=300)}
2021-11-22 14:20:43,523   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 14:20:43,523   DEBUG  [#9F5A]  C: BEGIN {'db': 'graph.db'}
2021-11-22 14:20:43,523   DEBUG  [#9F5A]  C: RUN "MATCH(node_1:type1)<-[r1:Has_State]-(node_2:type1)                WHERE r1.To =2021-11-22 12:46:38.180722 AND node_1.Name ='testname6_State'                RETURN properties(node_1)" {} {}
2021-11-22 14:20:43,523   DEBUG  [#9F5A]  C: PULL {'n': 1000}
2021-11-22 14:20:43,539   DEBUG  [#9F5A]  S: SUCCESS {}
2021-11-22 14:20:43,539   DEBUG  [#9F5A]  S: FAILURE {'code': 'Neo.ClientError.Statement.SyntaxError', 'message': 'Invalid input \'1\': expected whitespace, comment, \'.\', node labels or rel types, \'[\', \'^\', \'*\', \'/\', \'%\', \'+\', \'-\', "=~", IN, STARTS, ENDS, CONTAINS, IS, \'=\', \'~\', "<>", "!=", \'<\', \'>\', "<=", ">=", AND, XOR, OR, FROM GRAPH, USE GRAPH, CONSTRUCT, LOAD CSV, START, MATCH, UNWIND, MERGE, CREATE UNIQUE, CREATE, SET, DELETE, REMOVE, FOREACH, WITH, CALL, RETURN, UNION, \';\' or end of input (line 1, column 91 (offset: 90))\n"MATCH(node_1:type1)<-[r1:Has_State]-(node_2:type1)                WHERE r1.To =2021-11-22 12:46:38.180722 AND node_1.Name =\'testname6_State\'                RETURN properties(node_1)"\n                                                                                           ^'}
2021-11-22 14:20:43,539   DEBUG  [#9F5A]  C: RESET
2021-11-22 14:20:43,539   DEBUG  [#9F5A]  S: IGNORED
2021-11-22 14:20:43,540   DEBUG  [#9F5A]  S: SUCCESS {}
2021-11-22 14:20:43,553   DEBUG  [#9F5A]  C: GOODBYE
2021-11-22 14:20:43,553   DEBUG  [#9F5A]  C: <CLOSE>
2021-11-22 14:21:50,595   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:21:50,596   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 14:21:50,596   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:21:50,596   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 14:21:50,596   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:21:50,596   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 14:21:50,596   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:21:50,596   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 14:21:50,596   DEBUG  Attempting to update routing table from IPv4Address(('localhost', 7687))
2021-11-22 14:21:50,596   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 14:21:50,597   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 14:21:50,598   DEBUG  [#9F88]  C: <MAGIC> 0x6060B017
2021-11-22 14:21:50,599   DEBUG  [#9F88]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 14:21:50,600   DEBUG  [#9F88]  S: <HANDSHAKE> 0x00000204
2021-11-22 14:21:50,600   DEBUG  [#9F88]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 14:21:50,602   DEBUG  [#9F88]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-732'}
2021-11-22 14:21:50,602   DEBUG  [#9F88]  C: RUN 'CALL dbms.routing.getRoutingTable($context, $database)' {'context': {'address': 'localhost:7687'}, 'database': 'graph.db'} {'mode': 'r', 'db': 'system'}
2021-11-22 14:21:50,602   DEBUG  [#9F88]  C: PULL {'n': -1}
2021-11-22 14:21:50,606   DEBUG  [#9F88]  S: SUCCESS {'t_first': 1, 'fields': ['ttl', 'servers']}
2021-11-22 14:21:50,606   DEBUG  [#9F88]  S: RECORD * 1
2021-11-22 14:21:50,606   DEBUG  [#9F88]  S: SUCCESS {'bookmark': 'FB:kcwQAAAAAAAAAAAAAAAAAAAAAReQ', 'type': 's', 't_last': 1, 'db': 'system'}
2021-11-22 14:21:50,606   DEBUG  [#9F88]  C: RESET
2021-11-22 14:21:50,607   DEBUG  [#9F88]  S: SUCCESS {}
2021-11-22 14:21:50,608   DEBUG  [#0000]  S: <ROUTING> table=RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=8571.0743418, ttl=300)
2021-11-22 14:21:50,608   DEBUG  [#0000]  C: <UPDATE ROUTING TABLE> address=ResolvedIPv4Address(('127.0.0.1', 7687)) (RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=8571.0743418, ttl=300))
2021-11-22 14:21:50,608   DEBUG  [#9F88]  C: GOODBYE
2021-11-22 14:21:50,608   DEBUG  [#9F88]  C: <CLOSE>
2021-11-22 14:21:50,608   DEBUG  [#0000]  C: <ROUTING AGED> database=None
2021-11-22 14:21:50,608   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=8571.0621386 perf_time=8571.0748009
2021-11-22 14:21:50,608   DEBUG  [#0000]  C: <ROUTING AGED> database=graph.db
2021-11-22 14:21:50,608   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=8571.0743418 perf_time=8571.0749809
2021-11-22 14:21:50,608   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=8571.0621386, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=8571.0743418, ttl=300)}
2021-11-22 14:21:50,608   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 14:21:50,608   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 14:21:50,609   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 14:21:50,609   DEBUG  [#9F8E]  C: <MAGIC> 0x6060B017
2021-11-22 14:21:50,609   DEBUG  [#9F8E]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 14:21:50,611   DEBUG  [#9F8E]  S: <HANDSHAKE> 0x00000204
2021-11-22 14:21:50,611   DEBUG  [#9F8E]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 14:21:50,613   DEBUG  [#9F8E]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-733'}
2021-11-22 14:21:50,613   DEBUG  [#9F8E]  C: BEGIN {'db': 'graph.db'}
2021-11-22 14:21:50,614   DEBUG  [#9F8E]  C: RUN 'MATCH (node_1:type1{Name:$node_1_name})                -[node_relation:Has_State]->(node_2:type1)                    RETURN properties(node_relation) ORDER BY node_relation.To DESC' {'node_1_name': 'testname6'} {}
2021-11-22 14:21:50,614   DEBUG  [#9F8E]  C: PULL {'n': 1000}
2021-11-22 14:21:50,617   DEBUG  [#9F8E]  S: SUCCESS {}
2021-11-22 14:21:50,617   DEBUG  [#9F8E]  S: SUCCESS {'t_first': 0, 'fields': ['properties(node_relation)'], 'qid': 0}
2021-11-22 14:21:50,617   DEBUG  [#9F8E]  S: RECORD * 1
2021-11-22 14:21:50,617   DEBUG  [#9F8E]  S: RECORD * 1
2021-11-22 14:21:50,617   DEBUG  [#9F8E]  S: RECORD * 1
2021-11-22 14:21:50,618   DEBUG  [#9F8E]  S: SUCCESS {'type': 'r', 't_last': 1, 'db': 'graph.db'}
2021-11-22 14:21:50,618   DEBUG  [#9F8E]  C: COMMIT
2021-11-22 14:21:50,619   DEBUG  [#9F8E]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDVJA='}
2021-11-22 14:21:50,619   DEBUG  [#9F8E]  C: RESET
2021-11-22 14:21:50,620   DEBUG  [#9F8E]  S: SUCCESS {}
2021-11-22 14:21:50,620   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:21:50,620   DEBUG  [#0000]  C: <ROUTING> Table expired=False
2021-11-22 14:21:50,620   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:21:50,620   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=True
2021-11-22 14:21:50,620   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=8571.0621386, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=8571.0743418, ttl=300)}
2021-11-22 14:21:50,620   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 14:21:50,620   DEBUG  [#9F8E]  C: BEGIN {'db': 'graph.db'}
2021-11-22 14:21:50,620   DEBUG  [#9F8E]  C: RUN "MATCH(node_1:type1)<-[r1:Has_State]-(node_2:type1)                WHERE r1.To is null AND node_1.Name ='testname6_State'                RETURN properties(node_1)" {} {}
2021-11-22 14:21:50,621   DEBUG  [#9F8E]  C: PULL {'n': 1000}
2021-11-22 14:21:50,624   DEBUG  [#9F8E]  S: SUCCESS {}
2021-11-22 14:21:50,624   DEBUG  [#9F8E]  S: SUCCESS {'t_first': 0, 'fields': ['properties(node_1)'], 'qid': 0}
2021-11-22 14:21:50,624   DEBUG  [#9F8E]  S: RECORD * 1
2021-11-22 14:21:50,624   DEBUG  [#9F8E]  S: SUCCESS {'type': 'r', 't_last': 1, 'db': 'graph.db'}
2021-11-22 14:21:50,624   DEBUG  [#9F8E]  C: COMMIT
2021-11-22 14:21:50,627   DEBUG  [#9F8E]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDVJA='}
2021-11-22 14:21:50,627   DEBUG  [#9F8E]  C: RESET
2021-11-22 14:21:50,628   DEBUG  [#9F8E]  S: SUCCESS {}
2021-11-22 14:21:50,629   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:21:50,629   DEBUG  [#0000]  C: <ROUTING> Table expired=False
2021-11-22 14:21:50,629   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:21:50,629   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=True
2021-11-22 14:21:50,629   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=8571.0621386, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=8571.0743418, ttl=300)}
2021-11-22 14:21:50,629   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 14:21:50,629   DEBUG  [#9F8E]  C: BEGIN {'db': 'graph.db'}
2021-11-22 14:21:50,629   DEBUG  [#9F8E]  C: RUN "MATCH(node_1:type1)<-[r1:Has_State]-(node_2:type1)                WHERE r1.To =2021-11-22 12:46:38.180722 AND node_1.Name ='testname6_State'                RETURN properties(node_1)" {} {}
2021-11-22 14:21:50,629   DEBUG  [#9F8E]  C: PULL {'n': 1000}
2021-11-22 14:21:50,639   DEBUG  [#9F8E]  S: SUCCESS {}
2021-11-22 14:21:50,639   DEBUG  [#9F8E]  S: FAILURE {'code': 'Neo.ClientError.Statement.SyntaxError', 'message': 'Invalid input \'1\': expected whitespace, comment, \'.\', node labels or rel types, \'[\', \'^\', \'*\', \'/\', \'%\', \'+\', \'-\', "=~", IN, STARTS, ENDS, CONTAINS, IS, \'=\', \'~\', "<>", "!=", \'<\', \'>\', "<=", ">=", AND, XOR, OR, FROM GRAPH, USE GRAPH, CONSTRUCT, LOAD CSV, START, MATCH, UNWIND, MERGE, CREATE UNIQUE, CREATE, SET, DELETE, REMOVE, FOREACH, WITH, CALL, RETURN, UNION, \';\' or end of input (line 1, column 91 (offset: 90))\n"MATCH(node_1:type1)<-[r1:Has_State]-(node_2:type1)                WHERE r1.To =2021-11-22 12:46:38.180722 AND node_1.Name =\'testname6_State\'                RETURN properties(node_1)"\n                                                                                           ^'}
2021-11-22 14:21:50,639   DEBUG  [#9F8E]  C: RESET
2021-11-22 14:21:50,640   DEBUG  [#9F8E]  S: IGNORED
2021-11-22 14:21:50,641   DEBUG  [#9F8E]  S: SUCCESS {}
2021-11-22 14:21:50,656   DEBUG  [#9F8E]  C: GOODBYE
2021-11-22 14:21:50,656   DEBUG  [#9F8E]  C: <CLOSE>
2021-11-22 14:22:19,741   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:22:19,741   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 14:22:19,741   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:22:19,741   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 14:22:19,741   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:22:19,741   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 14:22:19,742   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:22:19,742   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 14:22:19,742   DEBUG  Attempting to update routing table from IPv4Address(('localhost', 7687))
2021-11-22 14:22:19,742   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 14:22:19,743   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 14:22:19,744   DEBUG  [#9F98]  C: <MAGIC> 0x6060B017
2021-11-22 14:22:19,744   DEBUG  [#9F98]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 14:22:19,745   DEBUG  [#9F98]  S: <HANDSHAKE> 0x00000204
2021-11-22 14:22:19,745   DEBUG  [#9F98]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 14:22:19,747   DEBUG  [#9F98]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-734'}
2021-11-22 14:22:19,747   DEBUG  [#9F98]  C: RUN 'CALL dbms.routing.getRoutingTable($context, $database)' {'context': {'address': 'localhost:7687'}, 'database': 'graph.db'} {'mode': 'r', 'db': 'system'}
2021-11-22 14:22:19,748   DEBUG  [#9F98]  C: PULL {'n': -1}
2021-11-22 14:22:19,751   DEBUG  [#9F98]  S: SUCCESS {'t_first': 2, 'fields': ['ttl', 'servers']}
2021-11-22 14:22:19,751   DEBUG  [#9F98]  S: RECORD * 1
2021-11-22 14:22:19,751   DEBUG  [#9F98]  S: SUCCESS {'bookmark': 'FB:kcwQAAAAAAAAAAAAAAAAAAAAAReQ', 'type': 's', 't_last': 0, 'db': 'system'}
2021-11-22 14:22:19,751   DEBUG  [#9F98]  C: RESET
2021-11-22 14:22:19,752   DEBUG  [#9F98]  S: SUCCESS {}
2021-11-22 14:22:19,753   DEBUG  [#0000]  S: <ROUTING> table=RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=8600.2193821, ttl=300)
2021-11-22 14:22:19,753   DEBUG  [#0000]  C: <UPDATE ROUTING TABLE> address=ResolvedIPv4Address(('127.0.0.1', 7687)) (RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=8600.2193821, ttl=300))
2021-11-22 14:22:19,753   DEBUG  [#9F98]  C: GOODBYE
2021-11-22 14:22:19,753   DEBUG  [#9F98]  C: <CLOSE>
2021-11-22 14:22:19,753   DEBUG  [#0000]  C: <ROUTING AGED> database=None
2021-11-22 14:22:19,753   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=8600.2075623 perf_time=8600.2199409
2021-11-22 14:22:19,753   DEBUG  [#0000]  C: <ROUTING AGED> database=graph.db
2021-11-22 14:22:19,753   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=8600.2193821 perf_time=8600.2200528
2021-11-22 14:22:19,753   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=8600.2075623, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=8600.2193821, ttl=300)}
2021-11-22 14:22:19,753   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 14:22:19,753   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 14:22:19,754   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 14:22:19,754   DEBUG  [#9F9E]  C: <MAGIC> 0x6060B017
2021-11-22 14:22:19,754   DEBUG  [#9F9E]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 14:22:19,755   DEBUG  [#9F9E]  S: <HANDSHAKE> 0x00000204
2021-11-22 14:22:19,755   DEBUG  [#9F9E]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 14:22:19,757   DEBUG  [#9F9E]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-735'}
2021-11-22 14:22:19,757   DEBUG  [#9F9E]  C: BEGIN {'db': 'graph.db'}
2021-11-22 14:22:19,758   DEBUG  [#9F9E]  C: RUN 'MATCH (node_1:type1{Name:$node_1_name})                -[node_relation:Has_State]->(node_2:type1)                    RETURN properties(node_relation) ORDER BY node_relation.To DESC' {'node_1_name': 'testname6'} {}
2021-11-22 14:22:19,758   DEBUG  [#9F9E]  C: PULL {'n': 1000}
2021-11-22 14:22:19,760   DEBUG  [#9F9E]  S: SUCCESS {}
2021-11-22 14:22:19,760   DEBUG  [#9F9E]  S: SUCCESS {'t_first': 1, 'fields': ['properties(node_relation)'], 'qid': 0}
2021-11-22 14:22:19,760   DEBUG  [#9F9E]  S: RECORD * 1
2021-11-22 14:22:19,761   DEBUG  [#9F9E]  S: RECORD * 1
2021-11-22 14:22:19,761   DEBUG  [#9F9E]  S: RECORD * 1
2021-11-22 14:22:19,761   DEBUG  [#9F9E]  S: SUCCESS {'type': 'r', 't_last': 0, 'db': 'graph.db'}
2021-11-22 14:22:19,761   DEBUG  [#9F9E]  C: COMMIT
2021-11-22 14:22:19,762   DEBUG  [#9F9E]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDVJA='}
2021-11-22 14:22:19,762   DEBUG  [#9F9E]  C: RESET
2021-11-22 14:22:19,763   DEBUG  [#9F9E]  S: SUCCESS {}
2021-11-22 14:22:19,764   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:22:19,764   DEBUG  [#0000]  C: <ROUTING> Table expired=False
2021-11-22 14:22:19,764   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:22:19,764   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=True
2021-11-22 14:22:19,764   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=8600.2075623, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=8600.2193821, ttl=300)}
2021-11-22 14:22:19,764   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 14:22:19,764   DEBUG  [#9F9E]  C: BEGIN {'db': 'graph.db'}
2021-11-22 14:22:19,764   DEBUG  [#9F9E]  C: RUN "MATCH(node_1:type1)<-[r1:Has_State]-(node_2:type1)                WHERE r1.To is null AND node_1.Name ='testname6_State'                RETURN properties(node_1)" {} {}
2021-11-22 14:22:19,764   DEBUG  [#9F9E]  C: PULL {'n': 1000}
2021-11-22 14:22:19,767   DEBUG  [#9F9E]  S: SUCCESS {}
2021-11-22 14:22:19,767   DEBUG  [#9F9E]  S: SUCCESS {'t_first': 1, 'fields': ['properties(node_1)'], 'qid': 0}
2021-11-22 14:22:19,767   DEBUG  [#9F9E]  S: RECORD * 1
2021-11-22 14:22:19,767   DEBUG  [#9F9E]  S: SUCCESS {'type': 'r', 't_last': 0, 'db': 'graph.db'}
2021-11-22 14:22:19,768   DEBUG  [#9F9E]  C: COMMIT
2021-11-22 14:22:19,769   DEBUG  [#9F9E]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDVJA='}
2021-11-22 14:22:19,769   DEBUG  [#9F9E]  C: RESET
2021-11-22 14:22:19,770   DEBUG  [#9F9E]  S: SUCCESS {}
2021-11-22 14:22:19,771   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:22:19,771   DEBUG  [#0000]  C: <ROUTING> Table expired=False
2021-11-22 14:22:19,771   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:22:19,771   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=True
2021-11-22 14:22:19,771   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=8600.2075623, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=8600.2193821, ttl=300)}
2021-11-22 14:22:19,771   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 14:22:19,771   DEBUG  [#9F9E]  C: BEGIN {'db': 'graph.db'}
2021-11-22 14:22:19,771   DEBUG  [#9F9E]  C: RUN "MATCH(node_1:type1)<-[r1:Has_State]-(node_2:type1)                WHERE r1.To ='2021-11-22 12:46:38.180722' AND node_1.Name ='testname6_State'                RETURN properties(node_1)" {} {}
2021-11-22 14:22:19,771   DEBUG  [#9F9E]  C: PULL {'n': 1000}
2021-11-22 14:22:19,812   DEBUG  [#9F9E]  S: SUCCESS {}
2021-11-22 14:22:19,812   DEBUG  [#9F9E]  S: SUCCESS {'t_first': 39, 'fields': ['properties(node_1)'], 'qid': 0}
2021-11-22 14:22:19,812   DEBUG  [#9F9E]  S: RECORD * 1
2021-11-22 14:22:19,812   DEBUG  [#9F9E]  S: SUCCESS {'type': 'r', 't_last': 0, 'db': 'graph.db'}
2021-11-22 14:22:19,813   DEBUG  [#9F9E]  C: COMMIT
2021-11-22 14:22:19,822   DEBUG  [#9F9E]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDVJA='}
2021-11-22 14:22:19,822   DEBUG  [#9F9E]  C: RESET
2021-11-22 14:22:19,824   DEBUG  [#9F9E]  S: SUCCESS {}
2021-11-22 14:22:19,832   DEBUG  [#9F9E]  C: GOODBYE
2021-11-22 14:22:19,833   DEBUG  [#9F9E]  C: <CLOSE>
2021-11-22 14:40:05,476   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:40:05,476   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 14:40:05,477   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:40:05,477   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 14:40:05,477   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:40:05,477   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 14:40:05,477   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:40:05,477   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 14:40:05,477   DEBUG  Attempting to update routing table from IPv4Address(('localhost', 7687))
2021-11-22 14:40:05,477   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 14:40:05,479   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 14:40:05,481   DEBUG  [#A24C]  C: <MAGIC> 0x6060B017
2021-11-22 14:40:05,481   DEBUG  [#A24C]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 14:40:05,482   DEBUG  [#A24C]  S: <HANDSHAKE> 0x00000204
2021-11-22 14:40:05,482   DEBUG  [#A24C]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 14:40:05,484   DEBUG  [#A24C]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-841'}
2021-11-22 14:40:05,484   DEBUG  [#A24C]  C: RUN 'CALL dbms.routing.getRoutingTable($context, $database)' {'context': {'address': 'localhost:7687'}, 'database': 'graph.db'} {'mode': 'r', 'db': 'system'}
2021-11-22 14:40:05,484   DEBUG  [#A24C]  C: PULL {'n': -1}
2021-11-22 14:40:05,488   DEBUG  [#A24C]  S: SUCCESS {'t_first': 2, 'fields': ['ttl', 'servers']}
2021-11-22 14:40:05,488   DEBUG  [#A24C]  S: RECORD * 1
2021-11-22 14:40:05,488   DEBUG  [#A24C]  S: SUCCESS {'bookmark': 'FB:kcwQAAAAAAAAAAAAAAAAAAAAAReQ', 'type': 's', 't_last': 0, 'db': 'system'}
2021-11-22 14:40:05,488   DEBUG  [#A24C]  C: RESET
2021-11-22 14:40:05,489   DEBUG  [#A24C]  S: SUCCESS {}
2021-11-22 14:40:05,489   DEBUG  [#0000]  S: <ROUTING> table=RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=9665.9561491, ttl=300)
2021-11-22 14:40:05,490   DEBUG  [#0000]  C: <UPDATE ROUTING TABLE> address=ResolvedIPv4Address(('127.0.0.1', 7687)) (RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=9665.9561491, ttl=300))
2021-11-22 14:40:05,490   DEBUG  [#A24C]  C: GOODBYE
2021-11-22 14:40:05,490   DEBUG  [#A24C]  C: <CLOSE>
2021-11-22 14:40:05,490   DEBUG  [#0000]  C: <ROUTING AGED> database=None
2021-11-22 14:40:05,490   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=9665.9428196 perf_time=9665.9567496
2021-11-22 14:40:05,490   DEBUG  [#0000]  C: <ROUTING AGED> database=graph.db
2021-11-22 14:40:05,490   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=9665.9561491 perf_time=9665.9569137
2021-11-22 14:40:05,490   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=9665.9428196, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=9665.9561491, ttl=300)}
2021-11-22 14:40:05,490   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 14:40:05,490   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 14:40:05,491   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 14:40:05,491   DEBUG  [#A252]  C: <MAGIC> 0x6060B017
2021-11-22 14:40:05,491   DEBUG  [#A252]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 14:40:05,493   DEBUG  [#A252]  S: <HANDSHAKE> 0x00000204
2021-11-22 14:40:05,493   DEBUG  [#A252]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 14:40:05,495   DEBUG  [#A252]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-842'}
2021-11-22 14:40:05,495   DEBUG  [#A252]  C: BEGIN {'db': 'graph.db'}
2021-11-22 14:40:05,495   DEBUG  [#A252]  C: RUN 'MATCH (node_1:type1{Name:$node_1_name})                -[node_relation:Has_State]->(node_2:type1)                    RETURN properties(node_relation) ORDER BY node_relation.To DESC' {'node_1_name': 'testname6'} {}
2021-11-22 14:40:05,495   DEBUG  [#A252]  C: PULL {'n': 1000}
2021-11-22 14:40:05,497   DEBUG  [#A252]  S: SUCCESS {}
2021-11-22 14:40:05,498   DEBUG  [#A252]  S: SUCCESS {'t_first': 1, 'fields': ['properties(node_relation)'], 'qid': 0}
2021-11-22 14:40:05,498   DEBUG  [#A252]  S: RECORD * 1
2021-11-22 14:40:05,498   DEBUG  [#A252]  S: RECORD * 1
2021-11-22 14:40:05,498   DEBUG  [#A252]  S: RECORD * 1
2021-11-22 14:40:05,498   DEBUG  [#A252]  S: SUCCESS {'type': 'r', 't_last': 1, 'db': 'graph.db'}
2021-11-22 14:40:05,498   DEBUG  [#A252]  C: COMMIT
2021-11-22 14:40:05,499   DEBUG  [#A252]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDVJA='}
2021-11-22 14:40:05,499   DEBUG  [#A252]  C: RESET
2021-11-22 14:40:05,500   DEBUG  [#A252]  S: SUCCESS {}
2021-11-22 14:40:05,501   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:40:05,501   DEBUG  [#0000]  C: <ROUTING> Table expired=False
2021-11-22 14:40:05,501   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:40:05,501   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=True
2021-11-22 14:40:05,501   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=9665.9428196, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=9665.9561491, ttl=300)}
2021-11-22 14:40:05,501   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 14:40:05,501   DEBUG  [#A252]  C: BEGIN {'db': 'graph.db'}
2021-11-22 14:40:05,501   DEBUG  [#A252]  C: RUN "MATCH(node_1:type1)<-[r1:Has_State]-(node_2:type1)                WHERE r1.To is null AND node_1.Name ='testname6_State'                RETURN properties(node_1)" {} {}
2021-11-22 14:40:05,501   DEBUG  [#A252]  C: PULL {'n': 1000}
2021-11-22 14:40:05,503   DEBUG  [#A252]  S: SUCCESS {}
2021-11-22 14:40:05,504   DEBUG  [#A252]  S: SUCCESS {'t_first': 0, 'fields': ['properties(node_1)'], 'qid': 0}
2021-11-22 14:40:05,504   DEBUG  [#A252]  S: RECORD * 1
2021-11-22 14:40:05,504   DEBUG  [#A252]  S: SUCCESS {'type': 'r', 't_last': 1, 'db': 'graph.db'}
2021-11-22 14:40:05,504   DEBUG  [#A252]  C: COMMIT
2021-11-22 14:40:05,505   DEBUG  [#A252]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDVJA='}
2021-11-22 14:40:05,505   DEBUG  [#A252]  C: RESET
2021-11-22 14:40:05,507   DEBUG  [#A252]  S: SUCCESS {}
2021-11-22 14:40:05,507   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:40:05,507   DEBUG  [#0000]  C: <ROUTING> Table expired=False
2021-11-22 14:40:05,507   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:40:05,507   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=True
2021-11-22 14:40:05,507   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=9665.9428196, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=9665.9561491, ttl=300)}
2021-11-22 14:40:05,508   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 14:40:05,508   DEBUG  [#A252]  C: BEGIN {'db': 'graph.db'}
2021-11-22 14:40:05,508   DEBUG  [#A252]  C: RUN "MATCH(node_1:type1)<-[r1:Has_State]-(node_2:type1)                WHERE r1.To ='2021-11-22 12:46:38.180722' AND node_1.Name ='testname6_State'                RETURN properties(node_1)" {} {}
2021-11-22 14:40:05,508   DEBUG  [#A252]  C: PULL {'n': 1000}
2021-11-22 14:40:05,510   DEBUG  [#A252]  S: SUCCESS {}
2021-11-22 14:40:05,511   DEBUG  [#A252]  S: SUCCESS {'t_first': 0, 'fields': ['properties(node_1)'], 'qid': 0}
2021-11-22 14:40:05,511   DEBUG  [#A252]  S: RECORD * 1
2021-11-22 14:40:05,511   DEBUG  [#A252]  S: SUCCESS {'type': 'r', 't_last': 1, 'db': 'graph.db'}
2021-11-22 14:40:05,511   DEBUG  [#A252]  C: COMMIT
2021-11-22 14:40:05,512   DEBUG  [#A252]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDVJA='}
2021-11-22 14:40:05,513   DEBUG  [#A252]  C: RESET
2021-11-22 14:40:05,514   DEBUG  [#A252]  S: SUCCESS {}
2021-11-22 14:40:05,524   DEBUG  [#A252]  C: GOODBYE
2021-11-22 14:40:05,524   DEBUG  [#A252]  C: <CLOSE>
2021-11-22 14:40:17,829   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:40:17,829   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 14:40:17,830   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:40:17,830   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 14:40:17,830   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:40:17,830   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 14:40:17,830   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:40:17,830   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 14:40:17,830   DEBUG  Attempting to update routing table from IPv4Address(('localhost', 7687))
2021-11-22 14:40:17,830   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 14:40:17,831   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 14:40:17,833   DEBUG  [#A25A]  C: <MAGIC> 0x6060B017
2021-11-22 14:40:17,833   DEBUG  [#A25A]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 14:40:17,834   DEBUG  [#A25A]  S: <HANDSHAKE> 0x00000204
2021-11-22 14:40:17,834   DEBUG  [#A25A]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 14:40:17,837   DEBUG  [#A25A]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-843'}
2021-11-22 14:40:17,837   DEBUG  [#A25A]  C: RUN 'CALL dbms.routing.getRoutingTable($context, $database)' {'context': {'address': 'localhost:7687'}, 'database': 'graph.db'} {'mode': 'r', 'db': 'system'}
2021-11-22 14:40:17,838   DEBUG  [#A25A]  C: PULL {'n': -1}
2021-11-22 14:40:17,841   DEBUG  [#A25A]  S: SUCCESS {'t_first': 2, 'fields': ['ttl', 'servers']}
2021-11-22 14:40:17,841   DEBUG  [#A25A]  S: RECORD * 1
2021-11-22 14:40:17,841   DEBUG  [#A25A]  S: SUCCESS {'bookmark': 'FB:kcwQAAAAAAAAAAAAAAAAAAAAAReQ', 'type': 's', 't_last': 0, 'db': 'system'}
2021-11-22 14:40:17,841   DEBUG  [#A25A]  C: RESET
2021-11-22 14:40:17,842   DEBUG  [#A25A]  S: SUCCESS {}
2021-11-22 14:40:17,842   DEBUG  [#0000]  S: <ROUTING> table=RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=9678.309173, ttl=300)
2021-11-22 14:40:17,842   DEBUG  [#0000]  C: <UPDATE ROUTING TABLE> address=ResolvedIPv4Address(('127.0.0.1', 7687)) (RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=9678.309173, ttl=300))
2021-11-22 14:40:17,843   DEBUG  [#A25A]  C: GOODBYE
2021-11-22 14:40:17,843   DEBUG  [#A25A]  C: <CLOSE>
2021-11-22 14:40:17,843   DEBUG  [#0000]  C: <ROUTING AGED> database=None
2021-11-22 14:40:17,843   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=9678.2958651 perf_time=9678.3095513
2021-11-22 14:40:17,843   DEBUG  [#0000]  C: <ROUTING AGED> database=graph.db
2021-11-22 14:40:17,843   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=9678.309173 perf_time=9678.3096353
2021-11-22 14:40:17,843   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=9678.2958651, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=9678.309173, ttl=300)}
2021-11-22 14:40:17,843   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 14:40:17,843   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 14:40:17,843   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 14:40:17,843   DEBUG  [#A260]  C: <MAGIC> 0x6060B017
2021-11-22 14:40:17,843   DEBUG  [#A260]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 14:40:17,845   DEBUG  [#A260]  S: <HANDSHAKE> 0x00000204
2021-11-22 14:40:17,845   DEBUG  [#A260]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 14:40:17,847   DEBUG  [#A260]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-844'}
2021-11-22 14:40:17,847   DEBUG  [#A260]  C: BEGIN {'db': 'graph.db'}
2021-11-22 14:40:17,847   DEBUG  [#A260]  C: RUN "MATCH (node_1:type1{Name:$node_1_name})            -[node_relation:Has_State]-> (node_2:type1{prop1:'temp34',prop2:'temp2',Name:'testname6_State'})             WHERE node_relation.To IS NULL             RETURN count(node_1) as exist" {'node_1_name': 'testname6'} {}
2021-11-22 14:40:17,847   DEBUG  [#A260]  C: PULL {'n': 1000}
2021-11-22 14:40:17,850   DEBUG  [#A260]  S: SUCCESS {}
2021-11-22 14:40:17,851   DEBUG  [#A260]  S: SUCCESS {'t_first': 1, 'fields': ['exist'], 'qid': 0}
2021-11-22 14:40:17,851   DEBUG  [#A260]  S: RECORD * 1
2021-11-22 14:40:17,851   DEBUG  [#A260]  S: SUCCESS {'type': 'r', 't_last': 1, 'db': 'graph.db'}
2021-11-22 14:40:17,851   DEBUG  [#A260]  C: COMMIT
2021-11-22 14:40:17,852   DEBUG  [#A260]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDVJA='}
2021-11-22 14:40:17,852   DEBUG  [#A260]  C: RESET
2021-11-22 14:40:17,853   DEBUG  [#A260]  S: SUCCESS {}
2021-11-22 14:40:17,853    INFO  Node testname6 is up to date
2021-11-22 14:40:17,854   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:40:17,854   DEBUG  [#0000]  C: <ROUTING> Table expired=False
2021-11-22 14:40:17,854   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:40:17,854   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=True
2021-11-22 14:40:17,854   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=9678.2958651, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=9678.309173, ttl=300)}
2021-11-22 14:40:17,854   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 14:40:17,854   DEBUG  [#A260]  C: BEGIN {'db': 'graph.db'}
2021-11-22 14:40:17,854   DEBUG  [#A260]  C: RUN 'MATCH (node_1:type1{Name:$node_1_name})                -[node_relation:Has_State]->(node_2:type1)                    RETURN properties(node_relation) ORDER BY node_relation.To DESC' {'node_1_name': 'testname6'} {}
2021-11-22 14:40:17,854   DEBUG  [#A260]  C: PULL {'n': 1000}
2021-11-22 14:40:17,856   DEBUG  [#A260]  S: SUCCESS {}
2021-11-22 14:40:17,857   DEBUG  [#A260]  S: SUCCESS {'t_first': 0, 'fields': ['properties(node_relation)'], 'qid': 0}
2021-11-22 14:40:17,857   DEBUG  [#A260]  S: RECORD * 1
2021-11-22 14:40:17,857   DEBUG  [#A260]  S: RECORD * 1
2021-11-22 14:40:17,857   DEBUG  [#A260]  S: RECORD * 1
2021-11-22 14:40:17,857   DEBUG  [#A260]  S: SUCCESS {'type': 'r', 't_last': 1, 'db': 'graph.db'}
2021-11-22 14:40:17,857   DEBUG  [#A260]  C: COMMIT
2021-11-22 14:40:17,858   DEBUG  [#A260]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDVJA='}
2021-11-22 14:40:17,859   DEBUG  [#A260]  C: RESET
2021-11-22 14:40:17,860   DEBUG  [#A260]  S: SUCCESS {}
2021-11-22 14:40:17,860   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:40:17,860   DEBUG  [#0000]  C: <ROUTING> Table expired=False
2021-11-22 14:40:17,860   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:40:17,860   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=True
2021-11-22 14:40:17,860   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=9678.2958651, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=9678.309173, ttl=300)}
2021-11-22 14:40:17,860   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 14:40:17,860   DEBUG  [#A260]  C: BEGIN {'db': 'graph.db'}
2021-11-22 14:40:17,860   DEBUG  [#A260]  C: RUN "MATCH(node_1:type1)<-[r1:Has_State]-(node_2:type1)                WHERE r1.To is null AND node_1.Name ='testname6_State'                RETURN properties(node_1)" {} {}
2021-11-22 14:40:17,861   DEBUG  [#A260]  C: PULL {'n': 1000}
2021-11-22 14:40:17,863   DEBUG  [#A260]  S: SUCCESS {}
2021-11-22 14:40:17,863   DEBUG  [#A260]  S: SUCCESS {'t_first': 1, 'fields': ['properties(node_1)'], 'qid': 0}
2021-11-22 14:40:17,863   DEBUG  [#A260]  S: RECORD * 1
2021-11-22 14:40:17,863   DEBUG  [#A260]  S: SUCCESS {'type': 'r', 't_last': 0, 'db': 'graph.db'}
2021-11-22 14:40:17,863   DEBUG  [#A260]  C: COMMIT
2021-11-22 14:40:17,865   DEBUG  [#A260]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDVJA='}
2021-11-22 14:40:17,865   DEBUG  [#A260]  C: RESET
2021-11-22 14:40:17,866   DEBUG  [#A260]  S: SUCCESS {}
2021-11-22 14:40:17,866   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:40:17,866   DEBUG  [#0000]  C: <ROUTING> Table expired=False
2021-11-22 14:40:17,866   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:40:17,866   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=True
2021-11-22 14:40:17,866   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=9678.2958651, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=9678.309173, ttl=300)}
2021-11-22 14:40:17,866   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 14:40:17,866   DEBUG  [#A260]  C: BEGIN {'db': 'graph.db'}
2021-11-22 14:40:17,867   DEBUG  [#A260]  C: RUN "MATCH(node_1:type1)<-[r1:Has_State]-(node_2:type1)                WHERE r1.To ='2021-11-22 12:46:38.180722' AND node_1.Name ='testname6_State'                RETURN properties(node_1)" {} {}
2021-11-22 14:40:17,867   DEBUG  [#A260]  C: PULL {'n': 1000}
2021-11-22 14:40:17,869   DEBUG  [#A260]  S: SUCCESS {}
2021-11-22 14:40:17,869   DEBUG  [#A260]  S: SUCCESS {'t_first': 1, 'fields': ['properties(node_1)'], 'qid': 0}
2021-11-22 14:40:17,869   DEBUG  [#A260]  S: RECORD * 1
2021-11-22 14:40:17,869   DEBUG  [#A260]  S: SUCCESS {'type': 'r', 't_last': 0, 'db': 'graph.db'}
2021-11-22 14:40:17,869   DEBUG  [#A260]  C: COMMIT
2021-11-22 14:40:17,871   DEBUG  [#A260]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDVJA='}
2021-11-22 14:40:17,871   DEBUG  [#A260]  C: RESET
2021-11-22 14:40:17,872   DEBUG  [#A260]  S: SUCCESS {}
2021-11-22 14:40:17,881   DEBUG  [#A260]  C: GOODBYE
2021-11-22 14:40:17,881   DEBUG  [#A260]  C: <CLOSE>
2021-11-22 14:40:27,813   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:40:27,813   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 14:40:27,813   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:40:27,813   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 14:40:27,813   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:40:27,813   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 14:40:27,814   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:40:27,814   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 14:40:27,814   DEBUG  Attempting to update routing table from IPv4Address(('localhost', 7687))
2021-11-22 14:40:27,814   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 14:40:27,815   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 14:40:27,816   DEBUG  [#A268]  C: <MAGIC> 0x6060B017
2021-11-22 14:40:27,816   DEBUG  [#A268]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 14:40:27,817   DEBUG  [#A268]  S: <HANDSHAKE> 0x00000204
2021-11-22 14:40:27,817   DEBUG  [#A268]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 14:40:27,820   DEBUG  [#A268]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-845'}
2021-11-22 14:40:27,820   DEBUG  [#A268]  C: RUN 'CALL dbms.routing.getRoutingTable($context, $database)' {'context': {'address': 'localhost:7687'}, 'database': 'graph.db'} {'mode': 'r', 'db': 'system'}
2021-11-22 14:40:27,820   DEBUG  [#A268]  C: PULL {'n': -1}
2021-11-22 14:40:27,824   DEBUG  [#A268]  S: SUCCESS {'t_first': 2, 'fields': ['ttl', 'servers']}
2021-11-22 14:40:27,824   DEBUG  [#A268]  S: RECORD * 1
2021-11-22 14:40:27,824   DEBUG  [#A268]  S: SUCCESS {'bookmark': 'FB:kcwQAAAAAAAAAAAAAAAAAAAAAReQ', 'type': 's', 't_last': 1, 'db': 'system'}
2021-11-22 14:40:27,824   DEBUG  [#A268]  C: RESET
2021-11-22 14:40:27,825   DEBUG  [#A268]  S: SUCCESS {}
2021-11-22 14:40:27,825   DEBUG  [#0000]  S: <ROUTING> table=RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=9688.2920184, ttl=300)
2021-11-22 14:40:27,825   DEBUG  [#0000]  C: <UPDATE ROUTING TABLE> address=ResolvedIPv4Address(('127.0.0.1', 7687)) (RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=9688.2920184, ttl=300))
2021-11-22 14:40:27,825   DEBUG  [#A268]  C: GOODBYE
2021-11-22 14:40:27,826   DEBUG  [#A268]  C: <CLOSE>
2021-11-22 14:40:27,826   DEBUG  [#0000]  C: <ROUTING AGED> database=None
2021-11-22 14:40:27,826   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=9688.2796638 perf_time=9688.2924541
2021-11-22 14:40:27,826   DEBUG  [#0000]  C: <ROUTING AGED> database=graph.db
2021-11-22 14:40:27,826   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=9688.2920184 perf_time=9688.2925434
2021-11-22 14:40:27,826   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=9688.2796638, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=9688.2920184, ttl=300)}
2021-11-22 14:40:27,826   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 14:40:27,826   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 14:40:27,826   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 14:40:27,826   DEBUG  [#A26E]  C: <MAGIC> 0x6060B017
2021-11-22 14:40:27,826   DEBUG  [#A26E]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 14:40:27,828   DEBUG  [#A26E]  S: <HANDSHAKE> 0x00000204
2021-11-22 14:40:27,828   DEBUG  [#A26E]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 14:40:27,830   DEBUG  [#A26E]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-846'}
2021-11-22 14:40:27,830   DEBUG  [#A26E]  C: BEGIN {'db': 'graph.db'}
2021-11-22 14:40:27,831   DEBUG  [#A26E]  C: RUN "MATCH (node_1:type1{Name:$node_1_name})            -[node_relation:Has_State]-> (node_2:type1{prop1:'temp345',prop2:'temp2',Name:'testname6_State'})             WHERE node_relation.To IS NULL             RETURN count(node_1) as exist" {'node_1_name': 'testname6'} {}
2021-11-22 14:40:27,831   DEBUG  [#A26E]  C: PULL {'n': 1000}
2021-11-22 14:40:27,889   DEBUG  [#A26E]  S: SUCCESS {}
2021-11-22 14:40:27,889   DEBUG  [#A26E]  S: SUCCESS {'t_first': 57, 'fields': ['exist'], 'qid': 0}
2021-11-22 14:40:27,889   DEBUG  [#A26E]  S: RECORD * 1
2021-11-22 14:40:27,889   DEBUG  [#A26E]  S: SUCCESS {'type': 'r', 't_last': 0, 'db': 'graph.db'}
2021-11-22 14:40:27,890   DEBUG  [#A26E]  C: COMMIT
2021-11-22 14:40:27,891   DEBUG  [#A26E]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDVJA='}
2021-11-22 14:40:27,891   DEBUG  [#A26E]  C: RESET
2021-11-22 14:40:27,892   DEBUG  [#A26E]  S: SUCCESS {}
2021-11-22 14:40:27,892   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:40:27,892   DEBUG  [#0000]  C: <ROUTING> Table expired=False
2021-11-22 14:40:27,892   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:40:27,892   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=True
2021-11-22 14:40:27,892   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=9688.2796638, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=9688.2920184, ttl=300)}
2021-11-22 14:40:27,892   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 14:40:27,892   DEBUG  [#A26E]  C: BEGIN {'db': 'graph.db', 'bookmarks': ['FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDVJA=']}
2021-11-22 14:40:27,893   DEBUG  [#A26E]  C: RUN 'MATCH (node_1:type1{Name:$node_1_name})             RETURN count(node_1) as exist' {'node_1_name': 'testname6'} {}
2021-11-22 14:40:27,893   DEBUG  [#A26E]  C: PULL {'n': 1000}
2021-11-22 14:40:27,895   DEBUG  [#A26E]  S: SUCCESS {}
2021-11-22 14:40:27,895   DEBUG  [#A26E]  S: SUCCESS {'t_first': 1, 'fields': ['exist'], 'qid': 0}
2021-11-22 14:40:27,895   DEBUG  [#A26E]  S: RECORD * 1
2021-11-22 14:40:27,895   DEBUG  [#A26E]  S: SUCCESS {'type': 'r', 't_last': 0, 'db': 'graph.db'}
2021-11-22 14:40:27,895   DEBUG  [#A26E]  C: COMMIT
2021-11-22 14:40:27,897   DEBUG  [#A26E]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDVJA='}
2021-11-22 14:40:27,897   DEBUG  [#A26E]  C: RESET
2021-11-22 14:40:27,898   DEBUG  [#A26E]  S: SUCCESS {}
2021-11-22 14:40:27,898   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:40:27,898   DEBUG  [#0000]  C: <ROUTING> Table expired=False
2021-11-22 14:40:27,898   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:40:27,898   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=True
2021-11-22 14:40:27,898   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=9688.2796638, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=9688.2920184, ttl=300)}
2021-11-22 14:40:27,898   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 14:40:27,898   DEBUG  [#A26E]  C: BEGIN {'db': 'graph.db', 'bookmarks': ['FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDVJA=']}
2021-11-22 14:40:27,898   DEBUG  [#A26E]  C: RUN 'MATCH (node_1:type1{Name:$node_1_name})            -[node_relation:Has_State]-> (node_2:type1{Name:$node_1_name_state})             WHERE node_relation.To IS NULL              SET node_relation +={To:$fromDate}' {'node_1_name': 'testname6', 'node_1_name_state': 'testname6_State', 'fromDate': '2021-11-22 14:40:27.898772'} {}
2021-11-22 14:40:27,899   DEBUG  [#A26E]  C: PULL {'n': 1000}
2021-11-22 14:40:27,928   DEBUG  [#A26E]  S: SUCCESS {}
2021-11-22 14:40:27,928   DEBUG  [#A26E]  S: SUCCESS {'t_first': 28, 'fields': [], 'qid': 0}
2021-11-22 14:40:27,928   DEBUG  [#A26E]  C: RUN "MATCH (node_1:type1{Name:$node_1_name})            CREATE (node_2:type1 {prop1:'temp345',prop2:'temp2',Name:'testname6_State'})            CREATE (node_1)-[node_relation:Has_State {From:$fromDate}]->(node_2)            RETURN node_2" {'node_1_name': 'testname6', 'fromDate': '2021-11-22 14:40:27.928631'} {}
2021-11-22 14:40:27,928   DEBUG  [#A26E]  C: PULL {'n': 1000}
2021-11-22 14:40:27,929   DEBUG  [#A26E]  S: SUCCESS {'stats': {'properties-set': 1}, 'type': 'w', 't_last': 0, 'db': 'graph.db'}
2021-11-22 14:40:27,953   DEBUG  [#A26E]  S: SUCCESS {'t_first': 21, 'fields': ['node_2'], 'qid': 1}
2021-11-22 14:40:27,954   DEBUG  [#A26E]  S: RECORD * 1
2021-11-22 14:40:27,954   DEBUG  [#A26E]  S: SUCCESS {'stats': {'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 4}, 'type': 'rw', 't_last': 3, 'db': 'graph.db'}
2021-11-22 14:40:27,954   DEBUG  [#A26E]  C: COMMIT
2021-11-22 14:40:27,964   DEBUG  [#A26E]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDVZA='}
2021-11-22 14:40:27,964   DEBUG  [#A26E]  C: RESET
2021-11-22 14:40:27,965   DEBUG  [#A26E]  S: SUCCESS {}
2021-11-22 14:40:27,965    INFO  Node testname6 got an updated version
2021-11-22 14:40:27,966   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:40:27,966   DEBUG  [#0000]  C: <ROUTING> Table expired=False
2021-11-22 14:40:27,966   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:40:27,966   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=True
2021-11-22 14:40:27,966   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=9688.2796638, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=9688.2920184, ttl=300)}
2021-11-22 14:40:27,966   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 14:40:27,966   DEBUG  [#A26E]  C: BEGIN {'db': 'graph.db'}
2021-11-22 14:40:27,966   DEBUG  [#A26E]  C: RUN 'MATCH (node_1:type1{Name:$node_1_name})                -[node_relation:Has_State]->(node_2:type1)                    RETURN properties(node_relation) ORDER BY node_relation.To DESC' {'node_1_name': 'testname6'} {}
2021-11-22 14:40:27,966   DEBUG  [#A26E]  C: PULL {'n': 1000}
2021-11-22 14:40:27,969   DEBUG  [#A26E]  S: SUCCESS {}
2021-11-22 14:40:27,969   DEBUG  [#A26E]  S: SUCCESS {'t_first': 1, 'fields': ['properties(node_relation)'], 'qid': 0}
2021-11-22 14:40:27,969   DEBUG  [#A26E]  S: RECORD * 1
2021-11-22 14:40:27,970   DEBUG  [#A26E]  S: RECORD * 1
2021-11-22 14:40:27,970   DEBUG  [#A26E]  S: RECORD * 1
2021-11-22 14:40:27,970   DEBUG  [#A26E]  S: RECORD * 1
2021-11-22 14:40:27,970   DEBUG  [#A26E]  S: SUCCESS {'type': 'r', 't_last': 0, 'db': 'graph.db'}
2021-11-22 14:40:27,970   DEBUG  [#A26E]  C: COMMIT
2021-11-22 14:40:27,971   DEBUG  [#A26E]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDVZA='}
2021-11-22 14:40:27,971   DEBUG  [#A26E]  C: RESET
2021-11-22 14:40:27,972   DEBUG  [#A26E]  S: SUCCESS {}
2021-11-22 14:40:27,973   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:40:27,973   DEBUG  [#0000]  C: <ROUTING> Table expired=False
2021-11-22 14:40:27,973   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:40:27,973   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=True
2021-11-22 14:40:27,973   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=9688.2796638, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=9688.2920184, ttl=300)}
2021-11-22 14:40:27,973   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 14:40:27,973   DEBUG  [#A26E]  C: BEGIN {'db': 'graph.db'}
2021-11-22 14:40:27,973   DEBUG  [#A26E]  C: RUN "MATCH(node_1:type1)<-[r1:Has_State]-(node_2:type1)                WHERE r1.To is null AND node_1.Name ='testname6_State'                RETURN properties(node_1)" {} {}
2021-11-22 14:40:27,973   DEBUG  [#A26E]  C: PULL {'n': 1000}
2021-11-22 14:40:27,976   DEBUG  [#A26E]  S: SUCCESS {}
2021-11-22 14:40:27,976   DEBUG  [#A26E]  S: SUCCESS {'t_first': 0, 'fields': ['properties(node_1)'], 'qid': 0}
2021-11-22 14:40:27,976   DEBUG  [#A26E]  S: RECORD * 1
2021-11-22 14:40:27,976   DEBUG  [#A26E]  S: SUCCESS {'type': 'r', 't_last': 1, 'db': 'graph.db'}
2021-11-22 14:40:27,976   DEBUG  [#A26E]  C: COMMIT
2021-11-22 14:40:27,977   DEBUG  [#A26E]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDVZA='}
2021-11-22 14:40:27,977   DEBUG  [#A26E]  C: RESET
2021-11-22 14:40:27,978   DEBUG  [#A26E]  S: SUCCESS {}
2021-11-22 14:40:27,978   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:40:27,978   DEBUG  [#0000]  C: <ROUTING> Table expired=False
2021-11-22 14:40:27,978   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:40:27,978   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=True
2021-11-22 14:40:27,979   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=9688.2796638, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=9688.2920184, ttl=300)}
2021-11-22 14:40:27,979   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 14:40:27,979   DEBUG  [#A26E]  C: BEGIN {'db': 'graph.db'}
2021-11-22 14:40:27,979   DEBUG  [#A26E]  C: RUN "MATCH(node_1:type1)<-[r1:Has_State]-(node_2:type1)                WHERE r1.To ='2021-11-22 12:46:38.180722' AND node_1.Name ='testname6_State'                RETURN properties(node_1)" {} {}
2021-11-22 14:40:27,979   DEBUG  [#A26E]  C: PULL {'n': 1000}
2021-11-22 14:40:27,981   DEBUG  [#A26E]  S: SUCCESS {}
2021-11-22 14:40:27,982   DEBUG  [#A26E]  S: SUCCESS {'t_first': 0, 'fields': ['properties(node_1)'], 'qid': 0}
2021-11-22 14:40:27,982   DEBUG  [#A26E]  S: RECORD * 1
2021-11-22 14:40:27,982   DEBUG  [#A26E]  S: SUCCESS {'type': 'r', 't_last': 1, 'db': 'graph.db'}
2021-11-22 14:40:27,982   DEBUG  [#A26E]  C: COMMIT
2021-11-22 14:40:27,983   DEBUG  [#A26E]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDVZA='}
2021-11-22 14:40:27,983   DEBUG  [#A26E]  C: RESET
2021-11-22 14:40:27,985   DEBUG  [#A26E]  S: SUCCESS {}
2021-11-22 14:40:27,993   DEBUG  [#A26E]  C: GOODBYE
2021-11-22 14:40:27,993   DEBUG  [#A26E]  C: <CLOSE>
2021-11-22 14:41:08,647   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:41:08,647   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 14:41:08,647   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:41:08,647   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 14:41:08,647   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:41:08,647   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 14:41:08,647   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:41:08,647   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 14:41:08,647   DEBUG  Attempting to update routing table from IPv4Address(('localhost', 7687))
2021-11-22 14:41:08,647   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 14:41:08,649   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 14:41:08,650   DEBUG  [#A28A]  C: <MAGIC> 0x6060B017
2021-11-22 14:41:08,650   DEBUG  [#A28A]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 14:41:08,651   DEBUG  [#A28A]  S: <HANDSHAKE> 0x00000204
2021-11-22 14:41:08,651   DEBUG  [#A28A]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 14:41:08,654   DEBUG  [#A28A]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-850'}
2021-11-22 14:41:08,654   DEBUG  [#A28A]  C: RUN 'CALL dbms.routing.getRoutingTable($context, $database)' {'context': {'address': 'localhost:7687'}, 'database': 'graph.db'} {'mode': 'r', 'db': 'system'}
2021-11-22 14:41:08,655   DEBUG  [#A28A]  C: PULL {'n': -1}
2021-11-22 14:41:08,658   DEBUG  [#A28A]  S: SUCCESS {'t_first': 2, 'fields': ['ttl', 'servers']}
2021-11-22 14:41:08,658   DEBUG  [#A28A]  S: RECORD * 1
2021-11-22 14:41:08,658   DEBUG  [#A28A]  S: SUCCESS {'bookmark': 'FB:kcwQAAAAAAAAAAAAAAAAAAAAAReQ', 'type': 's', 't_last': 0, 'db': 'system'}
2021-11-22 14:41:08,658   DEBUG  [#A28A]  C: RESET
2021-11-22 14:41:08,660   DEBUG  [#A28A]  S: SUCCESS {}
2021-11-22 14:41:08,660   DEBUG  [#0000]  S: <ROUTING> table=RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=9729.1264545, ttl=300)
2021-11-22 14:41:08,660   DEBUG  [#0000]  C: <UPDATE ROUTING TABLE> address=ResolvedIPv4Address(('127.0.0.1', 7687)) (RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=9729.1264545, ttl=300))
2021-11-22 14:41:08,660   DEBUG  [#A28A]  C: GOODBYE
2021-11-22 14:41:08,660   DEBUG  [#A28A]  C: <CLOSE>
2021-11-22 14:41:08,660   DEBUG  [#0000]  C: <ROUTING AGED> database=None
2021-11-22 14:41:08,660   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=9729.1135494 perf_time=9729.1268708
2021-11-22 14:41:08,660   DEBUG  [#0000]  C: <ROUTING AGED> database=graph.db
2021-11-22 14:41:08,660   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=9729.1264545 perf_time=9729.1269894
2021-11-22 14:41:08,660   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=9729.1135494, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=9729.1264545, ttl=300)}
2021-11-22 14:41:08,660   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 14:41:08,660   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 14:41:08,661   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 14:41:08,661   DEBUG  [#A290]  C: <MAGIC> 0x6060B017
2021-11-22 14:41:08,661   DEBUG  [#A290]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 14:41:08,662   DEBUG  [#A290]  S: <HANDSHAKE> 0x00000204
2021-11-22 14:41:08,662   DEBUG  [#A290]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 14:41:08,664   DEBUG  [#A290]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-851'}
2021-11-22 14:41:08,664   DEBUG  [#A290]  C: BEGIN {'db': 'graph.db'}
2021-11-22 14:41:08,665   DEBUG  [#A290]  C: RUN "MATCH (node_1:type1{Name:$node_1_name})            -[node_relation:Has_Docs]-> (node_2:type1{prop1:'temp345',prop2:'temp2',Name:'testname6_State'})             WHERE node_relation.To IS NULL             RETURN count(node_1) as exist" {'node_1_name': 'testname6'} {}
2021-11-22 14:41:08,665   DEBUG  [#A290]  C: PULL {'n': 1000}
2021-11-22 14:41:08,709   DEBUG  [#A290]  S: SUCCESS {}
2021-11-22 14:41:08,709   DEBUG  [#A290]  S: SUCCESS {'t_first': 41, 'fields': ['exist'], 'qid': 0}
2021-11-22 14:41:08,709   DEBUG  [#A290]  S: RECORD * 1
2021-11-22 14:41:08,710   DEBUG  [#A290]  S: SUCCESS {'type': 'r', 't_last': 1, 'db': 'graph.db'}
2021-11-22 14:41:08,710   DEBUG  [#A290]  C: COMMIT
2021-11-22 14:41:08,712   DEBUG  [#A290]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDVZA='}
2021-11-22 14:41:08,712   DEBUG  [#A290]  C: RESET
2021-11-22 14:41:08,714   DEBUG  [#A290]  S: SUCCESS {}
2021-11-22 14:41:08,714   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:41:08,715   DEBUG  [#0000]  C: <ROUTING> Table expired=False
2021-11-22 14:41:08,715   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:41:08,715   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=True
2021-11-22 14:41:08,715   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=9729.1135494, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=9729.1264545, ttl=300)}
2021-11-22 14:41:08,715   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 14:41:08,715   DEBUG  [#A290]  C: BEGIN {'db': 'graph.db', 'bookmarks': ['FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDVZA=']}
2021-11-22 14:41:08,715   DEBUG  [#A290]  C: RUN 'MATCH (node_1:type1{Name:$node_1_name})             RETURN count(node_1) as exist' {'node_1_name': 'testname6'} {}
2021-11-22 14:41:08,715   DEBUG  [#A290]  C: PULL {'n': 1000}
2021-11-22 14:41:08,717   DEBUG  [#A290]  S: SUCCESS {}
2021-11-22 14:41:08,717   DEBUG  [#A290]  S: SUCCESS {'t_first': 0, 'fields': ['exist'], 'qid': 0}
2021-11-22 14:41:08,717   DEBUG  [#A290]  S: RECORD * 1
2021-11-22 14:41:08,718   DEBUG  [#A290]  S: SUCCESS {'type': 'r', 't_last': 1, 'db': 'graph.db'}
2021-11-22 14:41:08,718   DEBUG  [#A290]  C: COMMIT
2021-11-22 14:41:08,719   DEBUG  [#A290]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDVZA='}
2021-11-22 14:41:08,719   DEBUG  [#A290]  C: RESET
2021-11-22 14:41:08,720   DEBUG  [#A290]  S: SUCCESS {}
2021-11-22 14:41:08,720   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:41:08,720   DEBUG  [#0000]  C: <ROUTING> Table expired=False
2021-11-22 14:41:08,720   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:41:08,720   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=True
2021-11-22 14:41:08,720   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=9729.1135494, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=9729.1264545, ttl=300)}
2021-11-22 14:41:08,720   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 14:41:08,720   DEBUG  [#A290]  C: BEGIN {'db': 'graph.db', 'bookmarks': ['FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDVZA=']}
2021-11-22 14:41:08,721   DEBUG  [#A290]  C: RUN 'MATCH (node_1:type1{Name:$node_1_name})            -[node_relation:Has_Docs]-> (node_2:type1{Name:$node_1_name_state})             WHERE node_relation.To IS NULL              SET node_relation +={To:$fromDate}' {'node_1_name': 'testname6', 'node_1_name_state': 'testname6_State', 'fromDate': '2021-11-22 14:41:08.720788'} {}
2021-11-22 14:41:08,721   DEBUG  [#A290]  C: PULL {'n': 1000}
2021-11-22 14:41:08,751   DEBUG  [#A290]  S: SUCCESS {}
2021-11-22 14:41:08,751   DEBUG  [#A290]  S: SUCCESS {'t_first': 29, 'fields': [], 'qid': 0}
2021-11-22 14:41:08,752   DEBUG  [#A290]  C: RUN "MATCH (node_1:type1{Name:$node_1_name})            CREATE (node_2:type1 {prop1:'temp345',prop2:'temp2',Name:'testname6_State'})            CREATE (node_1)-[node_relation:Has_Docs {From:$fromDate}]->(node_2)            RETURN node_2" {'node_1_name': 'testname6', 'fromDate': '2021-11-22 14:41:08.751943'} {}
2021-11-22 14:41:08,752   DEBUG  [#A290]  C: PULL {'n': 1000}
2021-11-22 14:41:08,752   DEBUG  [#A290]  S: SUCCESS {'type': 'w', 't_last': 0, 'db': 'graph.db'}
2021-11-22 14:41:08,808   DEBUG  [#A290]  S: SUCCESS {'t_first': 23, 'fields': ['node_2'], 'qid': 1}
2021-11-22 14:41:08,808   DEBUG  [#A290]  S: RECORD * 1
2021-11-22 14:41:08,808   DEBUG  [#A290]  S: SUCCESS {'stats': {'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 4}, 'type': 'rw', 't_last': 32, 'db': 'graph.db'}
2021-11-22 14:41:08,808   DEBUG  [#A290]  C: COMMIT
2021-11-22 14:41:08,814   DEBUG  [#A290]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDV5A='}
2021-11-22 14:41:08,815   DEBUG  [#A290]  C: RESET
2021-11-22 14:41:08,816   DEBUG  [#A290]  S: SUCCESS {}
2021-11-22 14:41:08,816    INFO  Node testname6 got an updated version
2021-11-22 14:41:08,816   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:41:08,816   DEBUG  [#0000]  C: <ROUTING> Table expired=False
2021-11-22 14:41:08,816   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:41:08,816   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=True
2021-11-22 14:41:08,816   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=9729.1135494, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=9729.1264545, ttl=300)}
2021-11-22 14:41:08,816   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 14:41:08,816   DEBUG  [#A290]  C: BEGIN {'db': 'graph.db'}
2021-11-22 14:41:08,816   DEBUG  [#A290]  C: RUN 'MATCH (node_1:type1{Name:$node_1_name})                -[node_relation:Has_State]->(node_2:type1)                    RETURN properties(node_relation) ORDER BY node_relation.To DESC' {'node_1_name': 'testname6'} {}
2021-11-22 14:41:08,817   DEBUG  [#A290]  C: PULL {'n': 1000}
2021-11-22 14:41:08,844   DEBUG  [#A290]  S: SUCCESS {}
2021-11-22 14:41:08,845   DEBUG  [#A290]  S: SUCCESS {'t_first': 26, 'fields': ['properties(node_relation)'], 'qid': 0}
2021-11-22 14:41:08,845   DEBUG  [#A290]  S: RECORD * 1
2021-11-22 14:41:08,845   DEBUG  [#A290]  S: RECORD * 1
2021-11-22 14:41:08,846   DEBUG  [#A290]  S: RECORD * 1
2021-11-22 14:41:08,846   DEBUG  [#A290]  S: RECORD * 1
2021-11-22 14:41:08,846   DEBUG  [#A290]  S: SUCCESS {'type': 'r', 't_last': 0, 'db': 'graph.db'}
2021-11-22 14:41:08,846   DEBUG  [#A290]  C: COMMIT
2021-11-22 14:41:08,848   DEBUG  [#A290]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDV5A='}
2021-11-22 14:41:08,849   DEBUG  [#A290]  C: RESET
2021-11-22 14:41:08,850   DEBUG  [#A290]  S: SUCCESS {}
2021-11-22 14:41:08,850   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:41:08,850   DEBUG  [#0000]  C: <ROUTING> Table expired=False
2021-11-22 14:41:08,850   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:41:08,850   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=True
2021-11-22 14:41:08,850   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=9729.1135494, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=9729.1264545, ttl=300)}
2021-11-22 14:41:08,850   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 14:41:08,850   DEBUG  [#A290]  C: BEGIN {'db': 'graph.db'}
2021-11-22 14:41:08,851   DEBUG  [#A290]  C: RUN "MATCH(node_1:type1)<-[r1:Has_State]-(node_2:type1)                WHERE r1.To is null AND node_1.Name ='testname6_State'                RETURN properties(node_1)" {} {}
2021-11-22 14:41:08,851   DEBUG  [#A290]  C: PULL {'n': 1000}
2021-11-22 14:41:08,877   DEBUG  [#A290]  S: SUCCESS {}
2021-11-22 14:41:08,878   DEBUG  [#A290]  S: SUCCESS {'t_first': 24, 'fields': ['properties(node_1)'], 'qid': 0}
2021-11-22 14:41:08,878   DEBUG  [#A290]  S: RECORD * 1
2021-11-22 14:41:08,879   DEBUG  [#A290]  S: SUCCESS {'type': 'r', 't_last': 1, 'db': 'graph.db'}
2021-11-22 14:41:08,879   DEBUG  [#A290]  C: COMMIT
2021-11-22 14:41:08,882   DEBUG  [#A290]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDV5A='}
2021-11-22 14:41:08,882   DEBUG  [#A290]  C: RESET
2021-11-22 14:41:08,884   DEBUG  [#A290]  S: SUCCESS {}
2021-11-22 14:41:08,884   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:41:08,884   DEBUG  [#0000]  C: <ROUTING> Table expired=False
2021-11-22 14:41:08,884   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:41:08,884   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=True
2021-11-22 14:41:08,884   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=9729.1135494, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=9729.1264545, ttl=300)}
2021-11-22 14:41:08,885   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 14:41:08,885   DEBUG  [#A290]  C: BEGIN {'db': 'graph.db'}
2021-11-22 14:41:08,885   DEBUG  [#A290]  C: RUN "MATCH(node_1:type1)<-[r1:Has_State]-(node_2:type1)                WHERE r1.To ='2021-11-22 12:46:38.180722' AND node_1.Name ='testname6_State'                RETURN properties(node_1)" {} {}
2021-11-22 14:41:08,885   DEBUG  [#A290]  C: PULL {'n': 1000}
2021-11-22 14:41:08,908   DEBUG  [#A290]  S: SUCCESS {}
2021-11-22 14:41:08,908   DEBUG  [#A290]  S: SUCCESS {'t_first': 21, 'fields': ['properties(node_1)'], 'qid': 0}
2021-11-22 14:41:08,909   DEBUG  [#A290]  S: RECORD * 1
2021-11-22 14:41:08,909   DEBUG  [#A290]  S: SUCCESS {'type': 'r', 't_last': 1, 'db': 'graph.db'}
2021-11-22 14:41:08,909   DEBUG  [#A290]  C: COMMIT
2021-11-22 14:41:08,910   DEBUG  [#A290]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDV5A='}
2021-11-22 14:41:08,910   DEBUG  [#A290]  C: RESET
2021-11-22 14:41:08,912   DEBUG  [#A290]  S: SUCCESS {}
2021-11-22 14:41:08,923   DEBUG  [#A290]  C: GOODBYE
2021-11-22 14:41:08,923   DEBUG  [#A290]  C: <CLOSE>
2021-11-22 14:41:50,989   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:41:50,990   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 14:41:50,990   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:41:50,990   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 14:41:50,990   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:41:50,990   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 14:41:50,990   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:41:50,990   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 14:41:50,990   DEBUG  Attempting to update routing table from IPv4Address(('localhost', 7687))
2021-11-22 14:41:50,990   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 14:41:50,992   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 14:41:50,993   DEBUG  [#A2D6]  C: <MAGIC> 0x6060B017
2021-11-22 14:41:50,993   DEBUG  [#A2D6]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 14:41:50,994   DEBUG  [#A2D6]  S: <HANDSHAKE> 0x00000204
2021-11-22 14:41:50,994   DEBUG  [#A2D6]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 14:41:50,997   DEBUG  [#A2D6]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-862'}
2021-11-22 14:41:50,997   DEBUG  [#A2D6]  C: RUN 'CALL dbms.routing.getRoutingTable($context, $database)' {'context': {'address': 'localhost:7687'}, 'database': 'graph.db'} {'mode': 'r', 'db': 'system'}
2021-11-22 14:41:50,997   DEBUG  [#A2D6]  C: PULL {'n': -1}
2021-11-22 14:41:51,001   DEBUG  [#A2D6]  S: SUCCESS {'t_first': 1, 'fields': ['ttl', 'servers']}
2021-11-22 14:41:51,001   DEBUG  [#A2D6]  S: RECORD * 1
2021-11-22 14:41:51,001   DEBUG  [#A2D6]  S: SUCCESS {'bookmark': 'FB:kcwQAAAAAAAAAAAAAAAAAAAAAReQ', 'type': 's', 't_last': 0, 'db': 'system'}
2021-11-22 14:41:51,001   DEBUG  [#A2D6]  C: RESET
2021-11-22 14:41:51,002   DEBUG  [#A2D6]  S: SUCCESS {}
2021-11-22 14:41:51,002   DEBUG  [#0000]  S: <ROUTING> table=RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=9771.469244, ttl=300)
2021-11-22 14:41:51,003   DEBUG  [#0000]  C: <UPDATE ROUTING TABLE> address=ResolvedIPv4Address(('127.0.0.1', 7687)) (RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=9771.469244, ttl=300))
2021-11-22 14:41:51,003   DEBUG  [#A2D6]  C: GOODBYE
2021-11-22 14:41:51,003   DEBUG  [#A2D6]  C: <CLOSE>
2021-11-22 14:41:51,003   DEBUG  [#0000]  C: <ROUTING AGED> database=None
2021-11-22 14:41:51,003   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=9771.4557808 perf_time=9771.4698962
2021-11-22 14:41:51,003   DEBUG  [#0000]  C: <ROUTING AGED> database=graph.db
2021-11-22 14:41:51,003   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=9771.469244 perf_time=9771.4701003
2021-11-22 14:41:51,003   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=9771.4557808, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=9771.469244, ttl=300)}
2021-11-22 14:41:51,003   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 14:41:51,004   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 14:41:51,004   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 14:41:51,004   DEBUG  [#A2DC]  C: <MAGIC> 0x6060B017
2021-11-22 14:41:51,004   DEBUG  [#A2DC]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 14:41:51,006   DEBUG  [#A2DC]  S: <HANDSHAKE> 0x00000204
2021-11-22 14:41:51,006   DEBUG  [#A2DC]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 14:41:51,008   DEBUG  [#A2DC]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-863'}
2021-11-22 14:41:51,008   DEBUG  [#A2DC]  C: BEGIN {'db': 'graph.db'}
2021-11-22 14:41:51,009   DEBUG  [#A2DC]  C: RUN "MATCH (node_1:type1{Name:$node_1_name})            -[node_relation:Has_Docs]-> (node_2:type1{prop1:'temp335',prop2:'temp2',Name:'testname6_State'})             WHERE node_relation.To IS NULL             RETURN count(node_1) as exist" {'node_1_name': 'testname6'} {}
2021-11-22 14:41:51,009   DEBUG  [#A2DC]  C: PULL {'n': 1000}
2021-11-22 14:41:51,076   DEBUG  [#A2DC]  S: SUCCESS {}
2021-11-22 14:41:51,076   DEBUG  [#A2DC]  S: SUCCESS {'t_first': 65, 'fields': ['exist'], 'qid': 0}
2021-11-22 14:41:51,076   DEBUG  [#A2DC]  S: RECORD * 1
2021-11-22 14:41:51,076   DEBUG  [#A2DC]  S: SUCCESS {'type': 'r', 't_last': 0, 'db': 'graph.db'}
2021-11-22 14:41:51,076   DEBUG  [#A2DC]  C: COMMIT
2021-11-22 14:41:51,078   DEBUG  [#A2DC]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDV5A='}
2021-11-22 14:41:51,078   DEBUG  [#A2DC]  C: RESET
2021-11-22 14:41:51,079   DEBUG  [#A2DC]  S: SUCCESS {}
2021-11-22 14:41:51,079   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:41:51,079   DEBUG  [#0000]  C: <ROUTING> Table expired=False
2021-11-22 14:41:51,079   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:41:51,079   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=True
2021-11-22 14:41:51,079   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=9771.4557808, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=9771.469244, ttl=300)}
2021-11-22 14:41:51,079   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 14:41:51,079   DEBUG  [#A2DC]  C: BEGIN {'db': 'graph.db', 'bookmarks': ['FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDV5A=']}
2021-11-22 14:41:51,079   DEBUG  [#A2DC]  C: RUN 'MATCH (node_1:type1{Name:$node_1_name})             RETURN count(node_1) as exist' {'node_1_name': 'testname6'} {}
2021-11-22 14:41:51,079   DEBUG  [#A2DC]  C: PULL {'n': 1000}
2021-11-22 14:41:51,092   DEBUG  [#A2DC]  S: SUCCESS {}
2021-11-22 14:41:51,092   DEBUG  [#A2DC]  S: SUCCESS {'t_first': 11, 'fields': ['exist'], 'qid': 0}
2021-11-22 14:41:51,092   DEBUG  [#A2DC]  S: RECORD * 1
2021-11-22 14:41:51,092   DEBUG  [#A2DC]  S: SUCCESS {'type': 'r', 't_last': 0, 'db': 'graph.db'}
2021-11-22 14:41:51,092   DEBUG  [#A2DC]  C: COMMIT
2021-11-22 14:41:51,093   DEBUG  [#A2DC]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDV5A='}
2021-11-22 14:41:51,093   DEBUG  [#A2DC]  C: RESET
2021-11-22 14:41:51,094   DEBUG  [#A2DC]  S: SUCCESS {}
2021-11-22 14:41:51,094   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:41:51,094   DEBUG  [#0000]  C: <ROUTING> Table expired=False
2021-11-22 14:41:51,094   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:41:51,094   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=True
2021-11-22 14:41:51,095   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=9771.4557808, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=9771.469244, ttl=300)}
2021-11-22 14:41:51,095   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 14:41:51,095   DEBUG  [#A2DC]  C: BEGIN {'db': 'graph.db', 'bookmarks': ['FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDV5A=']}
2021-11-22 14:41:51,095   DEBUG  [#A2DC]  C: RUN 'MATCH (node_1:type1{Name:$node_1_name})            -[node_relation:Has_Docs]-> (node_2:type1{Name:$node_1_name_state})             WHERE node_relation.To IS NULL              SET node_relation +={To:$fromDate}' {'node_1_name': 'testname6', 'node_1_name_state': 'testname6_State', 'fromDate': '2021-11-22 14:41:51.095266'} {}
2021-11-22 14:41:51,095   DEBUG  [#A2DC]  C: PULL {'n': 1000}
2021-11-22 14:41:51,115   DEBUG  [#A2DC]  S: SUCCESS {}
2021-11-22 14:41:51,115   DEBUG  [#A2DC]  S: SUCCESS {'t_first': 18, 'fields': [], 'qid': 0}
2021-11-22 14:41:51,115   DEBUG  [#A2DC]  C: RUN "MATCH (node_1:type1{Name:$node_1_name})            CREATE (node_2:type1 {prop1:'temp335',prop2:'temp2',Name:'testname6_State'})            CREATE (node_1)-[node_relation:Has_Docs {From:$fromDate}]->(node_2)            RETURN node_2" {'node_1_name': 'testname6', 'fromDate': '2021-11-22 14:41:51.115740'} {}
2021-11-22 14:41:51,115   DEBUG  [#A2DC]  C: PULL {'n': 1000}
2021-11-22 14:41:51,116   DEBUG  [#A2DC]  S: SUCCESS {'stats': {'properties-set': 1}, 'type': 'w', 't_last': 0, 'db': 'graph.db'}
2021-11-22 14:41:51,137   DEBUG  [#A2DC]  S: SUCCESS {'t_first': 19, 'fields': ['node_2'], 'qid': 1}
2021-11-22 14:41:51,137   DEBUG  [#A2DC]  S: RECORD * 1
2021-11-22 14:41:51,138   DEBUG  [#A2DC]  S: SUCCESS {'stats': {'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 4}, 'type': 'rw', 't_last': 2, 'db': 'graph.db'}
2021-11-22 14:41:51,138   DEBUG  [#A2DC]  C: COMMIT
2021-11-22 14:41:51,147   DEBUG  [#A2DC]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDWJA='}
2021-11-22 14:41:51,147   DEBUG  [#A2DC]  C: RESET
2021-11-22 14:41:51,148   DEBUG  [#A2DC]  S: SUCCESS {}
2021-11-22 14:41:51,149    INFO  Node testname6 got an updated version
2021-11-22 14:41:51,149   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:41:51,149   DEBUG  [#0000]  C: <ROUTING> Table expired=False
2021-11-22 14:41:51,149   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:41:51,149   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=True
2021-11-22 14:41:51,149   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=9771.4557808, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=9771.469244, ttl=300)}
2021-11-22 14:41:51,149   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 14:41:51,149   DEBUG  [#A2DC]  C: BEGIN {'db': 'graph.db'}
2021-11-22 14:41:51,149   DEBUG  [#A2DC]  C: RUN 'MATCH (node_1:type1{Name:$node_1_name})                -[node_relation:Has_State]->(node_2:type1)                    RETURN properties(node_relation) ORDER BY node_relation.To DESC' {'node_1_name': 'testname6'} {}
2021-11-22 14:41:51,149   DEBUG  [#A2DC]  C: PULL {'n': 1000}
2021-11-22 14:41:51,151   DEBUG  [#A2DC]  S: SUCCESS {}
2021-11-22 14:41:51,152   DEBUG  [#A2DC]  S: SUCCESS {'t_first': 0, 'fields': ['properties(node_relation)'], 'qid': 0}
2021-11-22 14:41:51,152   DEBUG  [#A2DC]  S: RECORD * 1
2021-11-22 14:41:51,152   DEBUG  [#A2DC]  S: RECORD * 1
2021-11-22 14:41:51,152   DEBUG  [#A2DC]  S: RECORD * 1
2021-11-22 14:41:51,152   DEBUG  [#A2DC]  S: RECORD * 1
2021-11-22 14:41:51,152   DEBUG  [#A2DC]  S: SUCCESS {'type': 'r', 't_last': 1, 'db': 'graph.db'}
2021-11-22 14:41:51,152   DEBUG  [#A2DC]  C: COMMIT
2021-11-22 14:41:51,153   DEBUG  [#A2DC]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDWJA='}
2021-11-22 14:41:51,153   DEBUG  [#A2DC]  C: RESET
2021-11-22 14:41:51,154   DEBUG  [#A2DC]  S: SUCCESS {}
2021-11-22 14:41:51,154   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:41:51,154   DEBUG  [#0000]  C: <ROUTING> Table expired=False
2021-11-22 14:41:51,154   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:41:51,154   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=True
2021-11-22 14:41:51,155   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=9771.4557808, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=9771.469244, ttl=300)}
2021-11-22 14:41:51,155   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 14:41:51,155   DEBUG  [#A2DC]  C: BEGIN {'db': 'graph.db'}
2021-11-22 14:41:51,155   DEBUG  [#A2DC]  C: RUN "MATCH(node_1:type1)<-[r1:Has_State]-(node_2:type1)                WHERE r1.To is null AND node_1.Name ='testname6_State'                RETURN properties(node_1)" {} {}
2021-11-22 14:41:51,155   DEBUG  [#A2DC]  C: PULL {'n': 1000}
2021-11-22 14:41:51,157   DEBUG  [#A2DC]  S: SUCCESS {}
2021-11-22 14:41:51,158   DEBUG  [#A2DC]  S: SUCCESS {'t_first': 1, 'fields': ['properties(node_1)'], 'qid': 0}
2021-11-22 14:41:51,158   DEBUG  [#A2DC]  S: RECORD * 1
2021-11-22 14:41:51,158   DEBUG  [#A2DC]  S: SUCCESS {'type': 'r', 't_last': 1, 'db': 'graph.db'}
2021-11-22 14:41:51,158   DEBUG  [#A2DC]  C: COMMIT
2021-11-22 14:41:51,159   DEBUG  [#A2DC]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDWJA='}
2021-11-22 14:41:51,159   DEBUG  [#A2DC]  C: RESET
2021-11-22 14:41:51,160   DEBUG  [#A2DC]  S: SUCCESS {}
2021-11-22 14:41:51,160   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 14:41:51,161   DEBUG  [#0000]  C: <ROUTING> Table expired=False
2021-11-22 14:41:51,161   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 14:41:51,161   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=True
2021-11-22 14:41:51,161   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=9771.4557808, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=9771.469244, ttl=300)}
2021-11-22 14:41:51,161   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 14:41:51,161   DEBUG  [#A2DC]  C: BEGIN {'db': 'graph.db'}
2021-11-22 14:41:51,161   DEBUG  [#A2DC]  C: RUN "MATCH(node_1:type1)<-[r1:Has_State]-(node_2:type1)                WHERE r1.To ='2021-11-22 12:46:38.180722' AND node_1.Name ='testname6_State'                RETURN properties(node_1)" {} {}
2021-11-22 14:41:51,161   DEBUG  [#A2DC]  C: PULL {'n': 1000}
2021-11-22 14:41:51,163   DEBUG  [#A2DC]  S: SUCCESS {}
2021-11-22 14:41:51,163   DEBUG  [#A2DC]  S: SUCCESS {'t_first': 1, 'fields': ['properties(node_1)'], 'qid': 0}
2021-11-22 14:41:51,163   DEBUG  [#A2DC]  S: RECORD * 1
2021-11-22 14:41:51,164   DEBUG  [#A2DC]  S: SUCCESS {'type': 'r', 't_last': 1, 'db': 'graph.db'}
2021-11-22 14:41:51,164   DEBUG  [#A2DC]  C: COMMIT
2021-11-22 14:41:51,165   DEBUG  [#A2DC]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDWJA='}
2021-11-22 14:41:51,165   DEBUG  [#A2DC]  C: RESET
2021-11-22 14:41:51,166   DEBUG  [#A2DC]  S: SUCCESS {}
2021-11-22 14:41:51,172   DEBUG  [#A2DC]  C: GOODBYE
2021-11-22 14:41:51,172   DEBUG  [#A2DC]  C: <CLOSE>
2021-11-22 16:24:25,270   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 16:24:25,271   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 16:24:25,272   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 16:24:25,272   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 16:24:25,272   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 16:24:25,272   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 16:24:25,272   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 16:24:25,273   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 16:24:25,273   DEBUG  Attempting to update routing table from IPv4Address(('localhost', 7687))
2021-11-22 16:24:25,273   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 16:24:25,278   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 16:24:25,282   DEBUG  [#ABDA]  C: <MAGIC> 0x6060B017
2021-11-22 16:24:25,283   DEBUG  [#ABDA]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 16:24:25,284   DEBUG  [#ABDA]  S: <HANDSHAKE> 0x00000204
2021-11-22 16:24:25,284   DEBUG  [#ABDA]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 16:24:25,288   DEBUG  [#ABDA]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-1227'}
2021-11-22 16:24:25,288   DEBUG  [#ABDA]  C: RUN 'CALL dbms.routing.getRoutingTable($context, $database)' {'context': {'address': 'localhost:7687'}, 'database': 'graph.db'} {'mode': 'r', 'db': 'system'}
2021-11-22 16:24:25,288   DEBUG  [#ABDA]  C: PULL {'n': -1}
2021-11-22 16:24:25,292   DEBUG  [#ABDA]  S: SUCCESS {'t_first': 2, 'fields': ['ttl', 'servers']}
2021-11-22 16:24:25,293   DEBUG  [#ABDA]  S: RECORD * 1
2021-11-22 16:24:25,293   DEBUG  [#ABDA]  S: SUCCESS {'bookmark': 'FB:kcwQAAAAAAAAAAAAAAAAAAAAAReQ', 'type': 's', 't_last': 1, 'db': 'system'}
2021-11-22 16:24:25,293   DEBUG  [#ABDA]  C: RESET
2021-11-22 16:24:25,294   DEBUG  [#ABDA]  S: SUCCESS {}
2021-11-22 16:24:25,295   DEBUG  [#0000]  S: <ROUTING> table=RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=15925.7616424, ttl=300)
2021-11-22 16:24:25,295   DEBUG  [#0000]  C: <UPDATE ROUTING TABLE> address=ResolvedIPv4Address(('127.0.0.1', 7687)) (RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=15925.7616424, ttl=300))
2021-11-22 16:24:25,295   DEBUG  [#ABDA]  C: GOODBYE
2021-11-22 16:24:25,295   DEBUG  [#ABDA]  C: <CLOSE>
2021-11-22 16:24:25,295   DEBUG  [#0000]  C: <ROUTING AGED> database=None
2021-11-22 16:24:25,295   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=15925.7356266 perf_time=15925.7621995
2021-11-22 16:24:25,295   DEBUG  [#0000]  C: <ROUTING AGED> database=graph.db
2021-11-22 16:24:25,296   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=15925.7616424 perf_time=15925.7623371
2021-11-22 16:24:25,296   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=15925.7356266, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=15925.7616424, ttl=300)}
2021-11-22 16:24:25,296   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 16:24:25,296   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 16:24:25,296   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 16:24:25,296   DEBUG  [#ABE0]  C: <MAGIC> 0x6060B017
2021-11-22 16:24:25,296   DEBUG  [#ABE0]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 16:24:25,298   DEBUG  [#ABE0]  S: <HANDSHAKE> 0x00000204
2021-11-22 16:24:25,298   DEBUG  [#ABE0]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 16:24:25,300   DEBUG  [#ABE0]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-1228'}
2021-11-22 16:24:25,300   DEBUG  [#ABE0]  C: BEGIN {'db': 'graph.db'}
2021-11-22 16:24:25,300   DEBUG  [#ABE0]  C: RUN "MATCH (node_1:type1{Name:$node_1_name})            -[node_relation:Has_Docs]-> (node_2:type1{prop1:'temp335',prop2:'temp2',Name:'testname_State'})             WHERE node_relation.To IS NULL             RETURN count(node_1) as exist" {'node_1_name': 'testname'} {}
2021-11-22 16:24:25,300   DEBUG  [#ABE0]  C: PULL {'n': 1000}
2021-11-22 16:24:25,813   DEBUG  [#ABE0]  S: SUCCESS {}
2021-11-22 16:24:25,813   DEBUG  [#ABE0]  S: SUCCESS {'t_first': 504, 'fields': ['exist'], 'qid': 0}
2021-11-22 16:24:25,813   DEBUG  [#ABE0]  S: RECORD * 1
2021-11-22 16:24:25,813   DEBUG  [#ABE0]  S: SUCCESS {'type': 'r', 't_last': 7, 'db': 'graph.db'}
2021-11-22 16:24:25,813   DEBUG  [#ABE0]  C: COMMIT
2021-11-22 16:24:25,815   DEBUG  [#ABE0]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDWJA='}
2021-11-22 16:24:25,815   DEBUG  [#ABE0]  C: RESET
2021-11-22 16:24:25,816   DEBUG  [#ABE0]  S: SUCCESS {}
2021-11-22 16:24:25,816   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 16:24:25,816   DEBUG  [#0000]  C: <ROUTING> Table expired=False
2021-11-22 16:24:25,816   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 16:24:25,816   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=True
2021-11-22 16:24:25,816   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=15925.7356266, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=15925.7616424, ttl=300)}
2021-11-22 16:24:25,816   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 16:24:25,816   DEBUG  [#ABE0]  C: BEGIN {'db': 'graph.db', 'bookmarks': ['FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDWJA=']}
2021-11-22 16:24:25,816   DEBUG  [#ABE0]  C: RUN 'MATCH (node_1:type1{Name:$node_1_name})             RETURN count(node_1) as exist' {'node_1_name': 'testname'} {}
2021-11-22 16:24:25,816   DEBUG  [#ABE0]  C: PULL {'n': 1000}
2021-11-22 16:24:25,822   DEBUG  [#ABE0]  S: SUCCESS {}
2021-11-22 16:24:25,823   DEBUG  [#ABE0]  S: SUCCESS {'t_first': 2, 'fields': ['exist'], 'qid': 0}
2021-11-22 16:24:25,823   DEBUG  [#ABE0]  S: RECORD * 1
2021-11-22 16:24:25,823   DEBUG  [#ABE0]  S: SUCCESS {'type': 'r', 't_last': 1, 'db': 'graph.db'}
2021-11-22 16:24:25,823   DEBUG  [#ABE0]  C: COMMIT
2021-11-22 16:24:25,824   DEBUG  [#ABE0]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDWJA='}
2021-11-22 16:24:25,824   DEBUG  [#ABE0]  C: RESET
2021-11-22 16:24:25,825   DEBUG  [#ABE0]  S: SUCCESS {}
2021-11-22 16:24:25,825   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 16:24:25,826   DEBUG  [#0000]  C: <ROUTING> Table expired=False
2021-11-22 16:24:25,826   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 16:24:25,826   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=True
2021-11-22 16:24:25,826   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=15925.7356266, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=15925.7616424, ttl=300)}
2021-11-22 16:24:25,826   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 16:24:25,826   DEBUG  [#ABE0]  C: BEGIN {'db': 'graph.db', 'bookmarks': ['FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDWJA=']}
2021-11-22 16:24:25,826   DEBUG  [#ABE0]  C: RUN 'MATCH (node_1:type1{Name:$node_1_name})            -[node_relation:Has_Docs]-> (node_2:type1{Name:$node_1_name_state})             WHERE node_relation.To IS NULL              SET node_relation +={To:$fromDate}' {'node_1_name': 'testname', 'node_1_name_state': 'testname_State', 'fromDate': '2021-11-22 16:24:25.826712'} {}
2021-11-22 16:24:25,826   DEBUG  [#ABE0]  C: PULL {'n': 1000}
2021-11-22 16:24:25,893   DEBUG  [#ABE0]  S: SUCCESS {}
2021-11-22 16:24:25,893   DEBUG  [#ABE0]  S: SUCCESS {'t_first': 66, 'fields': [], 'qid': 0}
2021-11-22 16:24:25,894   DEBUG  [#ABE0]  C: RUN "MATCH (node_1:type1{Name:$node_1_name})            CREATE (node_2:type1 {prop1:'temp335',prop2:'temp2',Name:'testname_State'})            CREATE (node_1)-[node_relation:Has_Docs {From:$fromDate}]->(node_2)            RETURN node_2" {'node_1_name': 'testname', 'fromDate': '2021-11-22 16:24:25.894076'} {}
2021-11-22 16:24:25,894   DEBUG  [#ABE0]  C: PULL {'n': 1000}
2021-11-22 16:24:25,894   DEBUG  [#ABE0]  S: SUCCESS {'type': 'w', 't_last': 0, 'db': 'graph.db'}
2021-11-22 16:24:25,986   DEBUG  [#ABE0]  S: SUCCESS {'t_first': 40, 'fields': ['node_2'], 'qid': 1}
2021-11-22 16:24:25,986   DEBUG  [#ABE0]  S: RECORD * 1
2021-11-22 16:24:25,986   DEBUG  [#ABE0]  S: SUCCESS {'stats': {'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 4}, 'type': 'rw', 't_last': 50, 'db': 'graph.db'}
2021-11-22 16:24:25,986   DEBUG  [#ABE0]  C: COMMIT
2021-11-22 16:24:26,063   DEBUG  [#ABE0]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDWZA='}
2021-11-22 16:24:26,063   DEBUG  [#ABE0]  C: RESET
2021-11-22 16:24:26,064   DEBUG  [#ABE0]  S: SUCCESS {}
2021-11-22 16:24:26,064    INFO  Node testname got an updated version
2021-11-22 16:24:26,065   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 16:24:26,065   DEBUG  [#0000]  C: <ROUTING> Table expired=False
2021-11-22 16:24:26,065   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 16:24:26,065   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=True
2021-11-22 16:24:26,065   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=15925.7356266, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=15925.7616424, ttl=300)}
2021-11-22 16:24:26,065   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 16:24:26,065   DEBUG  [#ABE0]  C: BEGIN {'db': 'graph.db'}
2021-11-22 16:24:26,065   DEBUG  [#ABE0]  C: RUN 'MATCH(node_1:type1{Name:$node_1_name_state})<-[r1:Has_State]-(node_2:type1{Name:$node_1_name})             DETACH DELETE node_1, node_2' {'node_1_name': 'testname', 'node_1_name_state': 'testname_State'} {}
2021-11-22 16:24:26,065   DEBUG  [#ABE0]  C: PULL {'n': 1000}
2021-11-22 16:24:26,197   DEBUG  [#ABE0]  S: SUCCESS {}
2021-11-22 16:24:26,198   DEBUG  [#ABE0]  S: SUCCESS {'t_first': 130, 'fields': [], 'qid': 0}
2021-11-22 16:24:26,198   DEBUG  [#ABE0]  S: SUCCESS {'stats': {'nodes-deleted': 3, 'relationships-deleted': 3}, 'type': 'w', 't_last': 0, 'db': 'graph.db'}
2021-11-22 16:24:26,198   DEBUG  [#ABE0]  C: COMMIT
2021-11-22 16:24:26,318   DEBUG  [#ABE0]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDWpA='}
2021-11-22 16:24:26,319   DEBUG  [#ABE0]  C: RESET
2021-11-22 16:24:26,320   DEBUG  [#ABE0]  S: SUCCESS {}
2021-11-22 16:24:26,320    INFO  Node testname and all its versions have been deleted 
2021-11-22 16:24:26,329   DEBUG  [#ABE0]  C: GOODBYE
2021-11-22 16:24:26,329   DEBUG  [#ABE0]  C: <CLOSE>
2021-11-22 16:26:02,999   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 16:26:02,999   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 16:26:02,999   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 16:26:02,999   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 16:26:02,999   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 16:26:02,999   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 16:26:02,999   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 16:26:02,999   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 16:26:02,999   DEBUG  Attempting to update routing table from IPv4Address(('localhost', 7687))
2021-11-22 16:26:02,999   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 16:26:03,001   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 16:26:03,002   DEBUG  [#AC5E]  C: <MAGIC> 0x6060B017
2021-11-22 16:26:03,002   DEBUG  [#AC5E]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 16:26:03,003   DEBUG  [#AC5E]  S: <HANDSHAKE> 0x00000204
2021-11-22 16:26:03,003   DEBUG  [#AC5E]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 16:26:03,005   DEBUG  [#AC5E]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-1248'}
2021-11-22 16:26:03,005   DEBUG  [#AC5E]  C: RUN 'CALL dbms.routing.getRoutingTable($context, $database)' {'context': {'address': 'localhost:7687'}, 'database': 'graph.db'} {'mode': 'r', 'db': 'system'}
2021-11-22 16:26:03,005   DEBUG  [#AC5E]  C: PULL {'n': -1}
2021-11-22 16:26:03,009   DEBUG  [#AC5E]  S: SUCCESS {'t_first': 1, 'fields': ['ttl', 'servers']}
2021-11-22 16:26:03,009   DEBUG  [#AC5E]  S: RECORD * 1
2021-11-22 16:26:03,009   DEBUG  [#AC5E]  S: SUCCESS {'bookmark': 'FB:kcwQAAAAAAAAAAAAAAAAAAAAAReQ', 'type': 's', 't_last': 1, 'db': 'system'}
2021-11-22 16:26:03,009   DEBUG  [#AC5E]  C: RESET
2021-11-22 16:26:03,010   DEBUG  [#AC5E]  S: SUCCESS {}
2021-11-22 16:26:03,010   DEBUG  [#0000]  S: <ROUTING> table=RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=16023.4770626, ttl=300)
2021-11-22 16:26:03,010   DEBUG  [#0000]  C: <UPDATE ROUTING TABLE> address=ResolvedIPv4Address(('127.0.0.1', 7687)) (RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=16023.4770626, ttl=300))
2021-11-22 16:26:03,010   DEBUG  [#AC5E]  C: GOODBYE
2021-11-22 16:26:03,011   DEBUG  [#AC5E]  C: <CLOSE>
2021-11-22 16:26:03,011   DEBUG  [#0000]  C: <ROUTING AGED> database=None
2021-11-22 16:26:03,011   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=16023.4652855 perf_time=16023.4775099
2021-11-22 16:26:03,011   DEBUG  [#0000]  C: <ROUTING AGED> database=graph.db
2021-11-22 16:26:03,011   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=16023.4770626 perf_time=16023.4775893
2021-11-22 16:26:03,011   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=16023.4652855, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=16023.4770626, ttl=300)}
2021-11-22 16:26:03,011   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 16:26:03,011   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 16:26:03,011   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 16:26:03,011   DEBUG  [#AC64]  C: <MAGIC> 0x6060B017
2021-11-22 16:26:03,011   DEBUG  [#AC64]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 16:26:03,013   DEBUG  [#AC64]  S: <HANDSHAKE> 0x00000204
2021-11-22 16:26:03,013   DEBUG  [#AC64]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 16:26:03,016   DEBUG  [#AC64]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-1249'}
2021-11-22 16:26:03,016   DEBUG  [#AC64]  C: BEGIN {'db': 'graph.db'}
2021-11-22 16:26:03,016   DEBUG  [#AC64]  C: RUN "MATCH (node_1:type1{Name:$node_1_name})            -[node_relation:Has_Docs]-> (node_2:type1{prop1:'temp335',prop2:'temp2',Name:'testname2_State'})             WHERE node_relation.To IS NULL             RETURN count(node_1) as exist" {'node_1_name': 'testname2'} {}
2021-11-22 16:26:03,017   DEBUG  [#AC64]  C: PULL {'n': 1000}
2021-11-22 16:26:03,084   DEBUG  [#AC64]  S: SUCCESS {}
2021-11-22 16:26:03,084   DEBUG  [#AC64]  S: SUCCESS {'t_first': 65, 'fields': ['exist'], 'qid': 0}
2021-11-22 16:26:03,084   DEBUG  [#AC64]  S: RECORD * 1
2021-11-22 16:26:03,084   DEBUG  [#AC64]  S: SUCCESS {'type': 'r', 't_last': 1, 'db': 'graph.db'}
2021-11-22 16:26:03,084   DEBUG  [#AC64]  C: COMMIT
2021-11-22 16:26:03,086   DEBUG  [#AC64]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDWpA='}
2021-11-22 16:26:03,086   DEBUG  [#AC64]  C: RESET
2021-11-22 16:26:03,087   DEBUG  [#AC64]  S: SUCCESS {}
2021-11-22 16:26:03,087   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 16:26:03,087   DEBUG  [#0000]  C: <ROUTING> Table expired=False
2021-11-22 16:26:03,087   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 16:26:03,087   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=True
2021-11-22 16:26:03,087   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=16023.4652855, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=16023.4770626, ttl=300)}
2021-11-22 16:26:03,087   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 16:26:03,088   DEBUG  [#AC64]  C: BEGIN {'db': 'graph.db', 'bookmarks': ['FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDWpA=']}
2021-11-22 16:26:03,088   DEBUG  [#AC64]  C: RUN 'MATCH (node_1:type1{Name:$node_1_name})             RETURN count(node_1) as exist' {'node_1_name': 'testname2'} {}
2021-11-22 16:26:03,088   DEBUG  [#AC64]  C: PULL {'n': 1000}
2021-11-22 16:26:03,105   DEBUG  [#AC64]  S: SUCCESS {}
2021-11-22 16:26:03,106   DEBUG  [#AC64]  S: SUCCESS {'t_first': 15, 'fields': ['exist'], 'qid': 0}
2021-11-22 16:26:03,106   DEBUG  [#AC64]  S: RECORD * 1
2021-11-22 16:26:03,106   DEBUG  [#AC64]  S: SUCCESS {'type': 'r', 't_last': 1, 'db': 'graph.db'}
2021-11-22 16:26:03,106   DEBUG  [#AC64]  C: COMMIT
2021-11-22 16:26:03,107   DEBUG  [#AC64]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDWpA='}
2021-11-22 16:26:03,107   DEBUG  [#AC64]  C: RESET
2021-11-22 16:26:03,108   DEBUG  [#AC64]  S: SUCCESS {}
2021-11-22 16:26:03,108   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 16:26:03,108   DEBUG  [#0000]  C: <ROUTING> Table expired=False
2021-11-22 16:26:03,108   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 16:26:03,108   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=True
2021-11-22 16:26:03,108   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=16023.4652855, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=16023.4770626, ttl=300)}
2021-11-22 16:26:03,109   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 16:26:03,109   DEBUG  [#AC64]  C: BEGIN {'db': 'graph.db', 'bookmarks': ['FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDWpA=']}
2021-11-22 16:26:03,109   DEBUG  [#AC64]  C: RUN 'MATCH (node_1:type1{Name:$node_1_name})            -[node_relation:Has_Docs]-> (node_2:type1{Name:$node_1_name_state})             WHERE node_relation.To IS NULL              SET node_relation +={To:$fromDate}' {'node_1_name': 'testname2', 'node_1_name_state': 'testname2_State', 'fromDate': '2021-11-22 16:26:03.109205'} {}
2021-11-22 16:26:03,109   DEBUG  [#AC64]  C: PULL {'n': 1000}
2021-11-22 16:26:03,153   DEBUG  [#AC64]  S: SUCCESS {}
2021-11-22 16:26:03,153   DEBUG  [#AC64]  S: SUCCESS {'t_first': 42, 'fields': [], 'qid': 0}
2021-11-22 16:26:03,153   DEBUG  [#AC64]  C: RUN "MATCH (node_1:type1{Name:$node_1_name})            CREATE (node_2:type1 {prop1:'temp335',prop2:'temp2',Name:'testname2_State'})            CREATE (node_1)-[node_relation:Has_Docs {From:$fromDate}]->(node_2)            RETURN node_2" {'node_1_name': 'testname2', 'fromDate': '2021-11-22 16:26:03.153650'} {}
2021-11-22 16:26:03,153   DEBUG  [#AC64]  C: PULL {'n': 1000}
2021-11-22 16:26:03,154   DEBUG  [#AC64]  S: SUCCESS {'type': 'w', 't_last': 0, 'db': 'graph.db'}
2021-11-22 16:26:03,188   DEBUG  [#AC64]  S: SUCCESS {'t_first': 24, 'fields': ['node_2'], 'qid': 1}
2021-11-22 16:26:03,189   DEBUG  [#AC64]  S: RECORD * 1
2021-11-22 16:26:03,189   DEBUG  [#AC64]  S: SUCCESS {'stats': {'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 4}, 'type': 'rw', 't_last': 10, 'db': 'graph.db'}
2021-11-22 16:26:03,189   DEBUG  [#AC64]  C: COMMIT
2021-11-22 16:26:03,195   DEBUG  [#AC64]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDW5A='}
2021-11-22 16:26:03,195   DEBUG  [#AC64]  C: RESET
2021-11-22 16:26:03,197   DEBUG  [#AC64]  S: SUCCESS {}
2021-11-22 16:26:03,197    INFO  Node testname2 got an updated version
2021-11-22 16:26:03,207   DEBUG  [#AC64]  C: GOODBYE
2021-11-22 16:26:03,207   DEBUG  [#AC64]  C: <CLOSE>
2021-11-22 16:26:40,573   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 16:26:40,574   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 16:26:40,574   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 16:26:40,574   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 16:26:40,574   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 16:26:40,574   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 16:26:40,574   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 16:26:40,574   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 16:26:40,574   DEBUG  Attempting to update routing table from IPv4Address(('localhost', 7687))
2021-11-22 16:26:40,574   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 16:26:40,575   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 16:26:40,576   DEBUG  [#ACA6]  C: <MAGIC> 0x6060B017
2021-11-22 16:26:40,576   DEBUG  [#ACA6]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 16:26:40,577   DEBUG  [#ACA6]  S: <HANDSHAKE> 0x00000204
2021-11-22 16:26:40,577   DEBUG  [#ACA6]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 16:26:40,580   DEBUG  [#ACA6]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-1259'}
2021-11-22 16:26:40,580   DEBUG  [#ACA6]  C: RUN 'CALL dbms.routing.getRoutingTable($context, $database)' {'context': {'address': 'localhost:7687'}, 'database': 'graph.db'} {'mode': 'r', 'db': 'system'}
2021-11-22 16:26:40,580   DEBUG  [#ACA6]  C: PULL {'n': -1}
2021-11-22 16:26:40,584   DEBUG  [#ACA6]  S: SUCCESS {'t_first': 1, 'fields': ['ttl', 'servers']}
2021-11-22 16:26:40,584   DEBUG  [#ACA6]  S: RECORD * 1
2021-11-22 16:26:40,584   DEBUG  [#ACA6]  S: SUCCESS {'bookmark': 'FB:kcwQAAAAAAAAAAAAAAAAAAAAAReQ', 'type': 's', 't_last': 1, 'db': 'system'}
2021-11-22 16:26:40,584   DEBUG  [#ACA6]  C: RESET
2021-11-22 16:26:40,585   DEBUG  [#ACA6]  S: SUCCESS {}
2021-11-22 16:26:40,585   DEBUG  [#0000]  S: <ROUTING> table=RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=16061.0522213, ttl=300)
2021-11-22 16:26:40,586   DEBUG  [#0000]  C: <UPDATE ROUTING TABLE> address=ResolvedIPv4Address(('127.0.0.1', 7687)) (RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=16061.0522213, ttl=300))
2021-11-22 16:26:40,586   DEBUG  [#ACA6]  C: GOODBYE
2021-11-22 16:26:40,586   DEBUG  [#ACA6]  C: <CLOSE>
2021-11-22 16:26:40,586   DEBUG  [#0000]  C: <ROUTING AGED> database=None
2021-11-22 16:26:40,586   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=16061.0398362 perf_time=16061.0526528
2021-11-22 16:26:40,586   DEBUG  [#0000]  C: <ROUTING AGED> database=graph.db
2021-11-22 16:26:40,586   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=16061.0522213 perf_time=16061.0527722
2021-11-22 16:26:40,586   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=16061.0398362, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=16061.0522213, ttl=300)}
2021-11-22 16:26:40,586   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 16:26:40,586   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 16:26:40,586   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 16:26:40,587   DEBUG  [#ACAC]  C: <MAGIC> 0x6060B017
2021-11-22 16:26:40,587   DEBUG  [#ACAC]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 16:26:40,588   DEBUG  [#ACAC]  S: <HANDSHAKE> 0x00000204
2021-11-22 16:26:40,588   DEBUG  [#ACAC]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 16:26:40,590   DEBUG  [#ACAC]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-1260'}
2021-11-22 16:26:40,590   DEBUG  [#ACAC]  C: BEGIN {'db': 'graph.db'}
2021-11-22 16:26:40,591   DEBUG  [#ACAC]  C: RUN "MATCH (node_1:type1{Name:$node_1_name})            -[node_relation:Has_State]-> (node_2:type1{prop1:'temp335',prop2:'temp2',Name:'testname2_State'})             WHERE node_relation.To IS NULL             RETURN count(node_1) as exist" {'node_1_name': 'testname2'} {}
2021-11-22 16:26:40,591   DEBUG  [#ACAC]  C: PULL {'n': 1000}
2021-11-22 16:26:40,630   DEBUG  [#ACAC]  S: SUCCESS {}
2021-11-22 16:26:40,630   DEBUG  [#ACAC]  S: SUCCESS {'t_first': 38, 'fields': ['exist'], 'qid': 0}
2021-11-22 16:26:40,630   DEBUG  [#ACAC]  S: RECORD * 1
2021-11-22 16:26:40,630   DEBUG  [#ACAC]  S: SUCCESS {'type': 'r', 't_last': 0, 'db': 'graph.db'}
2021-11-22 16:26:40,630   DEBUG  [#ACAC]  C: COMMIT
2021-11-22 16:26:40,632   DEBUG  [#ACAC]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDW5A='}
2021-11-22 16:26:40,632   DEBUG  [#ACAC]  C: RESET
2021-11-22 16:26:40,634   DEBUG  [#ACAC]  S: SUCCESS {}
2021-11-22 16:26:40,634   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 16:26:40,634   DEBUG  [#0000]  C: <ROUTING> Table expired=False
2021-11-22 16:26:40,635   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 16:26:40,635   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=True
2021-11-22 16:26:40,635   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=16061.0398362, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=16061.0522213, ttl=300)}
2021-11-22 16:26:40,635   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 16:26:40,635   DEBUG  [#ACAC]  C: BEGIN {'db': 'graph.db', 'bookmarks': ['FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDW5A=']}
2021-11-22 16:26:40,635   DEBUG  [#ACAC]  C: RUN 'MATCH (node_1:type1{Name:$node_1_name})             RETURN count(node_1) as exist' {'node_1_name': 'testname2'} {}
2021-11-22 16:26:40,636   DEBUG  [#ACAC]  C: PULL {'n': 1000}
2021-11-22 16:26:40,648   DEBUG  [#ACAC]  S: SUCCESS {}
2021-11-22 16:26:40,648   DEBUG  [#ACAC]  S: SUCCESS {'t_first': 10, 'fields': ['exist'], 'qid': 0}
2021-11-22 16:26:40,649   DEBUG  [#ACAC]  S: RECORD * 1
2021-11-22 16:26:40,649   DEBUG  [#ACAC]  S: SUCCESS {'type': 'r', 't_last': 0, 'db': 'graph.db'}
2021-11-22 16:26:40,649   DEBUG  [#ACAC]  C: COMMIT
2021-11-22 16:26:40,651   DEBUG  [#ACAC]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDW5A='}
2021-11-22 16:26:40,651   DEBUG  [#ACAC]  C: RESET
2021-11-22 16:26:40,652   DEBUG  [#ACAC]  S: SUCCESS {}
2021-11-22 16:26:40,653   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 16:26:40,653   DEBUG  [#0000]  C: <ROUTING> Table expired=False
2021-11-22 16:26:40,653   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 16:26:40,653   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=True
2021-11-22 16:26:40,653   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=16061.0398362, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=16061.0522213, ttl=300)}
2021-11-22 16:26:40,653   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 16:26:40,653   DEBUG  [#ACAC]  C: BEGIN {'db': 'graph.db', 'bookmarks': ['FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDW5A=']}
2021-11-22 16:26:40,653   DEBUG  [#ACAC]  C: RUN 'MATCH (node_1:type1{Name:$node_1_name})            -[node_relation:Has_State]-> (node_2:type1{Name:$node_1_name_state})             WHERE node_relation.To IS NULL              SET node_relation +={To:$fromDate}' {'node_1_name': 'testname2', 'node_1_name_state': 'testname2_State', 'fromDate': '2021-11-22 16:26:40.653555'} {}
2021-11-22 16:26:40,653   DEBUG  [#ACAC]  C: PULL {'n': 1000}
2021-11-22 16:26:40,675   DEBUG  [#ACAC]  S: SUCCESS {}
2021-11-22 16:26:40,675   DEBUG  [#ACAC]  S: SUCCESS {'t_first': 20, 'fields': [], 'qid': 0}
2021-11-22 16:26:40,675   DEBUG  [#ACAC]  C: RUN "MATCH (node_1:type1{Name:$node_1_name})            CREATE (node_2:type1 {prop1:'temp335',prop2:'temp2',Name:'testname2_State'})            CREATE (node_1)-[node_relation:Has_State {From:$fromDate}]->(node_2)            RETURN node_2" {'node_1_name': 'testname2', 'fromDate': '2021-11-22 16:26:40.675537'} {}
2021-11-22 16:26:40,675   DEBUG  [#ACAC]  C: PULL {'n': 1000}
2021-11-22 16:26:40,675   DEBUG  [#ACAC]  S: SUCCESS {'stats': {'properties-set': 1}, 'type': 'w', 't_last': 0, 'db': 'graph.db'}
2021-11-22 16:26:40,698   DEBUG  [#ACAC]  S: SUCCESS {'t_first': 19, 'fields': ['node_2'], 'qid': 1}
2021-11-22 16:26:40,698   DEBUG  [#ACAC]  S: RECORD * 1
2021-11-22 16:26:40,698   DEBUG  [#ACAC]  S: SUCCESS {'stats': {'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 4}, 'type': 'rw', 't_last': 2, 'db': 'graph.db'}
2021-11-22 16:26:40,698   DEBUG  [#ACAC]  C: COMMIT
2021-11-22 16:26:40,705   DEBUG  [#ACAC]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDXJA='}
2021-11-22 16:26:40,705   DEBUG  [#ACAC]  C: RESET
2021-11-22 16:26:40,707   DEBUG  [#ACAC]  S: SUCCESS {}
2021-11-22 16:26:40,707    INFO  Node testname2 got an updated version
2021-11-22 16:26:40,714   DEBUG  [#ACAC]  C: GOODBYE
2021-11-22 16:26:40,714   DEBUG  [#ACAC]  C: <CLOSE>
2021-11-22 16:27:43,217   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 16:27:43,217   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 16:27:43,217   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 16:27:43,217   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 16:27:43,217   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 16:27:43,217   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 16:27:43,217   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 16:27:43,217   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 16:27:43,217   DEBUG  Attempting to update routing table from IPv4Address(('localhost', 7687))
2021-11-22 16:27:43,217   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 16:27:43,218   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 16:27:43,220   DEBUG  [#AD02]  C: <MAGIC> 0x6060B017
2021-11-22 16:27:43,220   DEBUG  [#AD02]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 16:27:43,220   DEBUG  [#AD02]  S: <HANDSHAKE> 0x00000204
2021-11-22 16:27:43,221   DEBUG  [#AD02]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 16:27:43,223   DEBUG  [#AD02]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-1273'}
2021-11-22 16:27:43,223   DEBUG  [#AD02]  C: RUN 'CALL dbms.routing.getRoutingTable($context, $database)' {'context': {'address': 'localhost:7687'}, 'database': 'graph.db'} {'mode': 'r', 'db': 'system'}
2021-11-22 16:27:43,223   DEBUG  [#AD02]  C: PULL {'n': -1}
2021-11-22 16:27:43,226   DEBUG  [#AD02]  S: SUCCESS {'t_first': 2, 'fields': ['ttl', 'servers']}
2021-11-22 16:27:43,226   DEBUG  [#AD02]  S: RECORD * 1
2021-11-22 16:27:43,226   DEBUG  [#AD02]  S: SUCCESS {'bookmark': 'FB:kcwQAAAAAAAAAAAAAAAAAAAAAReQ', 'type': 's', 't_last': 0, 'db': 'system'}
2021-11-22 16:27:43,226   DEBUG  [#AD02]  C: RESET
2021-11-22 16:27:43,227   DEBUG  [#AD02]  S: SUCCESS {}
2021-11-22 16:27:43,228   DEBUG  [#0000]  S: <ROUTING> table=RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=16123.6944316, ttl=300)
2021-11-22 16:27:43,228   DEBUG  [#0000]  C: <UPDATE ROUTING TABLE> address=ResolvedIPv4Address(('127.0.0.1', 7687)) (RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=16123.6944316, ttl=300))
2021-11-22 16:27:43,228   DEBUG  [#AD02]  C: GOODBYE
2021-11-22 16:27:43,228   DEBUG  [#AD02]  C: <CLOSE>
2021-11-22 16:27:43,228   DEBUG  [#0000]  C: <ROUTING AGED> database=None
2021-11-22 16:27:43,228   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=16123.6832679 perf_time=16123.6949631
2021-11-22 16:27:43,228   DEBUG  [#0000]  C: <ROUTING AGED> database=graph.db
2021-11-22 16:27:43,228   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=16123.6944316 perf_time=16123.6951269
2021-11-22 16:27:43,228   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=16123.6832679, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=16123.6944316, ttl=300)}
2021-11-22 16:27:43,228   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 16:27:43,229   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 16:27:43,229   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 16:27:43,229   DEBUG  [#AD08]  C: <MAGIC> 0x6060B017
2021-11-22 16:27:43,229   DEBUG  [#AD08]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 16:27:43,231   DEBUG  [#AD08]  S: <HANDSHAKE> 0x00000204
2021-11-22 16:27:43,231   DEBUG  [#AD08]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 16:27:43,233   DEBUG  [#AD08]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-1274'}
2021-11-22 16:27:43,233   DEBUG  [#AD08]  C: BEGIN {'db': 'graph.db'}
2021-11-22 16:27:43,234   DEBUG  [#AD08]  C: RUN "MATCH (node_1:type1{Name:$node_1_name})            -[node_relation:Has_State]-> (node_2:type1{prop1:'temp335',prop2:'temp2',Name:'testname2_State'})             WHERE node_relation.To IS NULL             RETURN count(node_1) as exist" {'node_1_name': 'testname2'} {}
2021-11-22 16:27:43,234   DEBUG  [#AD08]  C: PULL {'n': 1000}
2021-11-22 16:27:43,236   DEBUG  [#AD08]  S: SUCCESS {}
2021-11-22 16:27:43,237   DEBUG  [#AD08]  S: SUCCESS {'t_first': 0, 'fields': ['exist'], 'qid': 0}
2021-11-22 16:27:43,237   DEBUG  [#AD08]  S: RECORD * 1
2021-11-22 16:27:43,237   DEBUG  [#AD08]  S: SUCCESS {'type': 'r', 't_last': 1, 'db': 'graph.db'}
2021-11-22 16:27:43,237   DEBUG  [#AD08]  C: COMMIT
2021-11-22 16:27:43,238   DEBUG  [#AD08]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDXJA='}
2021-11-22 16:27:43,238   DEBUG  [#AD08]  C: RESET
2021-11-22 16:27:43,240   DEBUG  [#AD08]  S: SUCCESS {}
2021-11-22 16:27:43,240    INFO  Node testname2 is up to date
2021-11-22 16:27:43,240   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 16:27:43,240   DEBUG  [#0000]  C: <ROUTING> Table expired=False
2021-11-22 16:27:43,240   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 16:27:43,240   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=True
2021-11-22 16:27:43,240   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=16123.6832679, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=16123.6944316, ttl=300)}
2021-11-22 16:27:43,240   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 16:27:43,240   DEBUG  [#AD08]  C: BEGIN {'db': 'graph.db'}
2021-11-22 16:27:43,240   DEBUG  [#AD08]  C: ROLLBACK
2021-11-22 16:27:43,242   DEBUG  [#AD08]  S: SUCCESS {}
2021-11-22 16:27:43,242   DEBUG  [#AD08]  S: SUCCESS {}
2021-11-22 16:27:43,242   DEBUG  [#AD08]  C: RESET
2021-11-22 16:27:43,243   DEBUG  [#AD08]  S: SUCCESS {}
2021-11-22 16:27:43,251   DEBUG  [#AD08]  C: GOODBYE
2021-11-22 16:27:43,251   DEBUG  [#AD08]  C: <CLOSE>
2021-11-22 16:27:55,256   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 16:27:55,256   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 16:27:55,256   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 16:27:55,256   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 16:27:55,256   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 16:27:55,256   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 16:27:55,256   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 16:27:55,256   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 16:27:55,256   DEBUG  Attempting to update routing table from IPv4Address(('localhost', 7687))
2021-11-22 16:27:55,256   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 16:27:55,258   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 16:27:55,259   DEBUG  [#AD10]  C: <MAGIC> 0x6060B017
2021-11-22 16:27:55,259   DEBUG  [#AD10]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 16:27:55,260   DEBUG  [#AD10]  S: <HANDSHAKE> 0x00000204
2021-11-22 16:27:55,260   DEBUG  [#AD10]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 16:27:55,262   DEBUG  [#AD10]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-1275'}
2021-11-22 16:27:55,263   DEBUG  [#AD10]  C: RUN 'CALL dbms.routing.getRoutingTable($context, $database)' {'context': {'address': 'localhost:7687'}, 'database': 'graph.db'} {'mode': 'r', 'db': 'system'}
2021-11-22 16:27:55,263   DEBUG  [#AD10]  C: PULL {'n': -1}
2021-11-22 16:27:55,266   DEBUG  [#AD10]  S: SUCCESS {'t_first': 2, 'fields': ['ttl', 'servers']}
2021-11-22 16:27:55,266   DEBUG  [#AD10]  S: RECORD * 1
2021-11-22 16:27:55,266   DEBUG  [#AD10]  S: SUCCESS {'bookmark': 'FB:kcwQAAAAAAAAAAAAAAAAAAAAAReQ', 'type': 's', 't_last': 0, 'db': 'system'}
2021-11-22 16:27:55,266   DEBUG  [#AD10]  C: RESET
2021-11-22 16:27:55,267   DEBUG  [#AD10]  S: SUCCESS {}
2021-11-22 16:27:55,268   DEBUG  [#0000]  S: <ROUTING> table=RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=16135.7343924, ttl=300)
2021-11-22 16:27:55,268   DEBUG  [#0000]  C: <UPDATE ROUTING TABLE> address=ResolvedIPv4Address(('127.0.0.1', 7687)) (RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=16135.7343924, ttl=300))
2021-11-22 16:27:55,268   DEBUG  [#AD10]  C: GOODBYE
2021-11-22 16:27:55,268   DEBUG  [#AD10]  C: <CLOSE>
2021-11-22 16:27:55,268   DEBUG  [#0000]  C: <ROUTING AGED> database=None
2021-11-22 16:27:55,268   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=16135.7225539 perf_time=16135.7348089
2021-11-22 16:27:55,268   DEBUG  [#0000]  C: <ROUTING AGED> database=graph.db
2021-11-22 16:27:55,268   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=16135.7343924 perf_time=16135.734948
2021-11-22 16:27:55,268   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=16135.7225539, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=16135.7343924, ttl=300)}
2021-11-22 16:27:55,268   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 16:27:55,268   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 16:27:55,268   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 16:27:55,269   DEBUG  [#AD16]  C: <MAGIC> 0x6060B017
2021-11-22 16:27:55,269   DEBUG  [#AD16]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 16:27:55,270   DEBUG  [#AD16]  S: <HANDSHAKE> 0x00000204
2021-11-22 16:27:55,270   DEBUG  [#AD16]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 16:27:55,272   DEBUG  [#AD16]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-1276'}
2021-11-22 16:27:55,272   DEBUG  [#AD16]  C: BEGIN {'db': 'graph.db'}
2021-11-22 16:27:55,273   DEBUG  [#AD16]  C: RUN "MATCH (node_1:type1{Name:$node_1_name})            -[node_relation:Has_State]-> (node_2:type1{prop1:'temp335',prop2:'temp2',Name:'testname2_State'})             WHERE node_relation.To IS NULL             RETURN count(node_1) as exist" {'node_1_name': 'testname2'} {}
2021-11-22 16:27:55,273   DEBUG  [#AD16]  C: PULL {'n': 1000}
2021-11-22 16:27:55,275   DEBUG  [#AD16]  S: SUCCESS {}
2021-11-22 16:27:55,275   DEBUG  [#AD16]  S: SUCCESS {'t_first': 1, 'fields': ['exist'], 'qid': 0}
2021-11-22 16:27:55,275   DEBUG  [#AD16]  S: RECORD * 1
2021-11-22 16:27:55,276   DEBUG  [#AD16]  S: SUCCESS {'type': 'r', 't_last': 0, 'db': 'graph.db'}
2021-11-22 16:27:55,276   DEBUG  [#AD16]  C: COMMIT
2021-11-22 16:27:55,277   DEBUG  [#AD16]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDXJA='}
2021-11-22 16:27:55,277   DEBUG  [#AD16]  C: RESET
2021-11-22 16:27:55,278   DEBUG  [#AD16]  S: SUCCESS {}
2021-11-22 16:27:55,278    INFO  Node testname2 is up to date
2021-11-22 16:27:55,287   DEBUG  [#AD16]  C: GOODBYE
2021-11-22 16:27:55,287   DEBUG  [#AD16]  C: <CLOSE>
2021-11-22 16:28:03,723   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 16:28:03,723   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 16:28:03,723   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 16:28:03,723   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 16:28:03,723   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 16:28:03,724   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 16:28:03,724   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 16:28:03,724   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 16:28:03,724   DEBUG  Attempting to update routing table from IPv4Address(('localhost', 7687))
2021-11-22 16:28:03,724   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 16:28:03,725   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 16:28:03,726   DEBUG  [#AD30]  C: <MAGIC> 0x6060B017
2021-11-22 16:28:03,726   DEBUG  [#AD30]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 16:28:03,727   DEBUG  [#AD30]  S: <HANDSHAKE> 0x00000204
2021-11-22 16:28:03,727   DEBUG  [#AD30]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 16:28:03,729   DEBUG  [#AD30]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-1280'}
2021-11-22 16:28:03,730   DEBUG  [#AD30]  C: RUN 'CALL dbms.routing.getRoutingTable($context, $database)' {'context': {'address': 'localhost:7687'}, 'database': 'graph.db'} {'mode': 'r', 'db': 'system'}
2021-11-22 16:28:03,730   DEBUG  [#AD30]  C: PULL {'n': -1}
2021-11-22 16:28:03,733   DEBUG  [#AD30]  S: SUCCESS {'t_first': 2, 'fields': ['ttl', 'servers']}
2021-11-22 16:28:03,733   DEBUG  [#AD30]  S: RECORD * 1
2021-11-22 16:28:03,733   DEBUG  [#AD30]  S: SUCCESS {'bookmark': 'FB:kcwQAAAAAAAAAAAAAAAAAAAAAReQ', 'type': 's', 't_last': 0, 'db': 'system'}
2021-11-22 16:28:03,733   DEBUG  [#AD30]  C: RESET
2021-11-22 16:28:03,734   DEBUG  [#AD30]  S: SUCCESS {}
2021-11-22 16:28:03,735   DEBUG  [#0000]  S: <ROUTING> table=RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=16144.2014159, ttl=300)
2021-11-22 16:28:03,735   DEBUG  [#0000]  C: <UPDATE ROUTING TABLE> address=ResolvedIPv4Address(('127.0.0.1', 7687)) (RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=16144.2014159, ttl=300))
2021-11-22 16:28:03,735   DEBUG  [#AD30]  C: GOODBYE
2021-11-22 16:28:03,735   DEBUG  [#AD30]  C: <CLOSE>
2021-11-22 16:28:03,735   DEBUG  [#0000]  C: <ROUTING AGED> database=None
2021-11-22 16:28:03,735   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=16144.1895801 perf_time=16144.2019256
2021-11-22 16:28:03,735   DEBUG  [#0000]  C: <ROUTING AGED> database=graph.db
2021-11-22 16:28:03,735   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=16144.2014159 perf_time=16144.2020536
2021-11-22 16:28:03,735   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=16144.1895801, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=16144.2014159, ttl=300)}
2021-11-22 16:28:03,735   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 16:28:03,736   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 16:28:03,736   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 16:28:03,736   DEBUG  [#AD36]  C: <MAGIC> 0x6060B017
2021-11-22 16:28:03,736   DEBUG  [#AD36]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 16:28:03,738   DEBUG  [#AD36]  S: <HANDSHAKE> 0x00000204
2021-11-22 16:28:03,738   DEBUG  [#AD36]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 16:28:03,740   DEBUG  [#AD36]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-1281'}
2021-11-22 16:28:03,740   DEBUG  [#AD36]  C: BEGIN {'db': 'graph.db'}
2021-11-22 16:28:03,740   DEBUG  [#AD36]  C: RUN "MATCH (node_1:type1{Name:$node_1_name})            -[node_relation:Has_State]-> (node_2:type1{prop1:'temp335',prop2:'temp2',Name:'testname2_State'})             WHERE node_relation.To IS NULL             RETURN count(node_1) as exist" {'node_1_name': 'testname2'} {}
2021-11-22 16:28:03,741   DEBUG  [#AD36]  C: PULL {'n': 1000}
2021-11-22 16:28:03,743   DEBUG  [#AD36]  S: SUCCESS {}
2021-11-22 16:28:03,743   DEBUG  [#AD36]  S: SUCCESS {'t_first': 1, 'fields': ['exist'], 'qid': 0}
2021-11-22 16:28:03,743   DEBUG  [#AD36]  S: RECORD * 1
2021-11-22 16:28:03,744   DEBUG  [#AD36]  S: SUCCESS {'type': 'r', 't_last': 0, 'db': 'graph.db'}
2021-11-22 16:28:03,744   DEBUG  [#AD36]  C: COMMIT
2021-11-22 16:28:03,745   DEBUG  [#AD36]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDXJA='}
2021-11-22 16:28:03,745   DEBUG  [#AD36]  C: RESET
2021-11-22 16:28:03,746   DEBUG  [#AD36]  S: SUCCESS {}
2021-11-22 16:28:03,746    INFO  Node testname2 is up to date
2021-11-22 16:28:03,746   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 16:28:03,746   DEBUG  [#0000]  C: <ROUTING> Table expired=False
2021-11-22 16:28:03,747   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 16:28:03,747   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=True
2021-11-22 16:28:03,747   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=16144.1895801, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=16144.2014159, ttl=300)}
2021-11-22 16:28:03,747   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 16:28:03,747   DEBUG  [#AD36]  C: BEGIN {'db': 'graph.db'}
2021-11-22 16:28:03,747   DEBUG  [#AD36]  C: RUN 'MATCH(node_1:type1{Name:$node_1_name_state})<-[r1]-(node_2:type1{Name:$node_1_name})             DETACH DELETE node_1, node_2' {'node_1_name': 'testname2', 'node_1_name_state': 'testname2_State'} {}
2021-11-22 16:28:03,747   DEBUG  [#AD36]  C: PULL {'n': 1000}
2021-11-22 16:28:03,779   DEBUG  [#AD36]  S: SUCCESS {}
2021-11-22 16:28:03,779   DEBUG  [#AD36]  S: SUCCESS {'t_first': 30, 'fields': [], 'qid': 0}
2021-11-22 16:28:03,779   DEBUG  [#AD36]  S: SUCCESS {'stats': {'nodes-deleted': 4, 'relationships-deleted': 3}, 'type': 'w', 't_last': 0, 'db': 'graph.db'}
2021-11-22 16:28:03,779   DEBUG  [#AD36]  C: COMMIT
2021-11-22 16:28:03,788   DEBUG  [#AD36]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDXZA='}
2021-11-22 16:28:03,788   DEBUG  [#AD36]  C: RESET
2021-11-22 16:28:03,789   DEBUG  [#AD36]  S: SUCCESS {}
2021-11-22 16:28:03,790    INFO  Node testname2 and all its versions have been deleted 
2021-11-22 16:28:03,801   DEBUG  [#AD36]  C: GOODBYE
2021-11-22 16:28:03,801   DEBUG  [#AD36]  C: <CLOSE>
2021-11-22 16:40:23,274   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 16:40:23,274   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 16:40:23,274   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 16:40:23,274   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 16:40:23,274   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 16:40:23,274   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 16:40:23,274   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 16:40:23,274   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 16:40:23,274   DEBUG  Attempting to update routing table from IPv4Address(('localhost', 7687))
2021-11-22 16:40:23,274   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 16:40:23,276   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 16:40:23,277   DEBUG  [#AF9C]  C: <MAGIC> 0x6060B017
2021-11-22 16:40:23,277   DEBUG  [#AF9C]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 16:40:23,278   DEBUG  [#AF9C]  S: <HANDSHAKE> 0x00000204
2021-11-22 16:40:23,278   DEBUG  [#AF9C]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 16:40:23,281   DEBUG  [#AF9C]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-1378'}
2021-11-22 16:40:23,281   DEBUG  [#AF9C]  C: RUN 'CALL dbms.routing.getRoutingTable($context, $database)' {'context': {'address': 'localhost:7687'}, 'database': 'graph.db'} {'mode': 'r', 'db': 'system'}
2021-11-22 16:40:23,281   DEBUG  [#AF9C]  C: PULL {'n': -1}
2021-11-22 16:40:23,284   DEBUG  [#AF9C]  S: SUCCESS {'t_first': 1, 'fields': ['ttl', 'servers']}
2021-11-22 16:40:23,284   DEBUG  [#AF9C]  S: RECORD * 1
2021-11-22 16:40:23,284   DEBUG  [#AF9C]  S: SUCCESS {'bookmark': 'FB:kcwQAAAAAAAAAAAAAAAAAAAAAReQ', 'type': 's', 't_last': 0, 'db': 'system'}
2021-11-22 16:40:23,284   DEBUG  [#AF9C]  C: RESET
2021-11-22 16:40:23,285   DEBUG  [#AF9C]  S: SUCCESS {}
2021-11-22 16:40:23,285   DEBUG  [#0000]  S: <ROUTING> table=RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=16883.7520673, ttl=300)
2021-11-22 16:40:23,285   DEBUG  [#0000]  C: <UPDATE ROUTING TABLE> address=ResolvedIPv4Address(('127.0.0.1', 7687)) (RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=16883.7520673, ttl=300))
2021-11-22 16:40:23,285   DEBUG  [#AF9C]  C: GOODBYE
2021-11-22 16:40:23,286   DEBUG  [#AF9C]  C: <CLOSE>
2021-11-22 16:40:23,286   DEBUG  [#0000]  C: <ROUTING AGED> database=None
2021-11-22 16:40:23,286   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=16883.7404088 perf_time=16883.7525128
2021-11-22 16:40:23,286   DEBUG  [#0000]  C: <ROUTING AGED> database=graph.db
2021-11-22 16:40:23,286   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=16883.7520673 perf_time=16883.7526219
2021-11-22 16:40:23,286   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=16883.7404088, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=16883.7520673, ttl=300)}
2021-11-22 16:40:23,286   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 16:40:23,286   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 16:40:23,286   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 16:40:23,286   DEBUG  [#AFA2]  C: <MAGIC> 0x6060B017
2021-11-22 16:40:23,286   DEBUG  [#AFA2]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 16:40:23,289   DEBUG  [#AFA2]  S: <HANDSHAKE> 0x00000204
2021-11-22 16:40:23,289   DEBUG  [#AFA2]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 16:40:23,291   DEBUG  [#AFA2]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-1379'}
2021-11-22 16:40:23,291   DEBUG  [#AFA2]  C: BEGIN {'db': 'graph.db'}
2021-11-22 16:40:23,291   DEBUG  [#AFA2]  C: RUN "MATCH (node_1:type1{Name:$node_1_name})            -[node_relation:Has_Docs]-> (node_2:type1{prop1:'temp335',prop2:'temp2',Name:'testname6_State'})             WHERE node_relation.To IS NULL             RETURN count(node_1) as exist" {'node_1_name': 'testname6'} {}
2021-11-22 16:40:23,291   DEBUG  [#AFA2]  C: PULL {'n': 1000}
2021-11-22 16:40:23,330   DEBUG  [#AFA2]  S: SUCCESS {}
2021-11-22 16:40:23,330   DEBUG  [#AFA2]  S: SUCCESS {'t_first': 37, 'fields': ['exist'], 'qid': 0}
2021-11-22 16:40:23,330   DEBUG  [#AFA2]  S: RECORD * 1
2021-11-22 16:40:23,330   DEBUG  [#AFA2]  S: SUCCESS {'type': 'r', 't_last': 0, 'db': 'graph.db'}
2021-11-22 16:40:23,331   DEBUG  [#AFA2]  C: COMMIT
2021-11-22 16:40:23,333   DEBUG  [#AFA2]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDXZA='}
2021-11-22 16:40:23,333   DEBUG  [#AFA2]  C: RESET
2021-11-22 16:40:23,336   DEBUG  [#AFA2]  S: SUCCESS {}
2021-11-22 16:40:23,336    INFO  Node testname6 is up to date
2021-11-22 16:40:23,336   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 16:40:23,336   DEBUG  [#0000]  C: <ROUTING> Table expired=False
2021-11-22 16:40:23,336   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 16:40:23,336   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=True
2021-11-22 16:40:23,336   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=16883.7404088, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=16883.7520673, ttl=300)}
2021-11-22 16:40:23,336   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 16:40:23,337   DEBUG  [#AFA2]  C: BEGIN {'db': 'graph.db'}
2021-11-22 16:40:23,337   DEBUG  [#AFA2]  C: RUN 'MATCH(node_1:type1{Name:$node_1_name_state})<-[r1:Has_State]-(node_2:type1{Name:$node_1_name})                WHERE r1.To IS NOT null                    DETACH DELETE node_1' {'node_1_name': 'testname6', 'node_1_name_state': 'testname6_State'} {}
2021-11-22 16:40:23,337   DEBUG  [#AFA2]  C: PULL {'n': 1000}
2021-11-22 16:40:23,414   DEBUG  [#AFA2]  S: SUCCESS {}
2021-11-22 16:40:23,415   DEBUG  [#AFA2]  S: SUCCESS {'t_first': 75, 'fields': [], 'qid': 0}
2021-11-22 16:40:23,416   DEBUG  [#AFA2]  S: SUCCESS {'stats': {'nodes-deleted': 3, 'relationships-deleted': 3}, 'type': 'w', 't_last': 0, 'db': 'graph.db'}
2021-11-22 16:40:23,416   DEBUG  [#AFA2]  C: COMMIT
2021-11-22 16:40:23,425   DEBUG  [#AFA2]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDXpA='}
2021-11-22 16:40:23,425   DEBUG  [#AFA2]  C: RESET
2021-11-22 16:40:23,426   DEBUG  [#AFA2]  S: SUCCESS {}
2021-11-22 16:40:23,426    INFO   All previous versions of node testname6 have been deleted 
2021-11-22 16:40:23,434   DEBUG  [#AFA2]  C: GOODBYE
2021-11-22 16:40:23,434   DEBUG  [#AFA2]  C: <CLOSE>
2021-11-22 16:41:23,520   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 16:41:23,520   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 16:41:23,520   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 16:41:23,520   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 16:41:23,520   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 16:41:23,520   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 16:41:23,520   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 16:41:23,520   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 16:41:23,520   DEBUG  Attempting to update routing table from IPv4Address(('localhost', 7687))
2021-11-22 16:41:23,520   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 16:41:23,522   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 16:41:23,523   DEBUG  [#AFF8]  C: <MAGIC> 0x6060B017
2021-11-22 16:41:23,523   DEBUG  [#AFF8]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 16:41:23,524   DEBUG  [#AFF8]  S: <HANDSHAKE> 0x00000204
2021-11-22 16:41:23,524   DEBUG  [#AFF8]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 16:41:23,527   DEBUG  [#AFF8]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-1392'}
2021-11-22 16:41:23,527   DEBUG  [#AFF8]  C: RUN 'CALL dbms.routing.getRoutingTable($context, $database)' {'context': {'address': 'localhost:7687'}, 'database': 'graph.db'} {'mode': 'r', 'db': 'system'}
2021-11-22 16:41:23,527   DEBUG  [#AFF8]  C: PULL {'n': -1}
2021-11-22 16:41:23,531   DEBUG  [#AFF8]  S: SUCCESS {'t_first': 2, 'fields': ['ttl', 'servers']}
2021-11-22 16:41:23,531   DEBUG  [#AFF8]  S: RECORD * 1
2021-11-22 16:41:23,531   DEBUG  [#AFF8]  S: SUCCESS {'bookmark': 'FB:kcwQAAAAAAAAAAAAAAAAAAAAAReQ', 'type': 's', 't_last': 0, 'db': 'system'}
2021-11-22 16:41:23,531   DEBUG  [#AFF8]  C: RESET
2021-11-22 16:41:23,532   DEBUG  [#AFF8]  S: SUCCESS {}
2021-11-22 16:41:23,532   DEBUG  [#0000]  S: <ROUTING> table=RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=16943.999145, ttl=300)
2021-11-22 16:41:23,532   DEBUG  [#0000]  C: <UPDATE ROUTING TABLE> address=ResolvedIPv4Address(('127.0.0.1', 7687)) (RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=16943.999145, ttl=300))
2021-11-22 16:41:23,533   DEBUG  [#AFF8]  C: GOODBYE
2021-11-22 16:41:23,533   DEBUG  [#AFF8]  C: <CLOSE>
2021-11-22 16:41:23,533   DEBUG  [#0000]  C: <ROUTING AGED> database=None
2021-11-22 16:41:23,533   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=16943.9865352 perf_time=16943.9996463
2021-11-22 16:41:23,533   DEBUG  [#0000]  C: <ROUTING AGED> database=graph.db
2021-11-22 16:41:23,533   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=16943.999145 perf_time=16943.9997801
2021-11-22 16:41:23,533   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=16943.9865352, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=16943.999145, ttl=300)}
2021-11-22 16:41:23,533   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 16:41:23,533   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 16:41:23,533   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 16:41:23,534   DEBUG  [#AFFE]  C: <MAGIC> 0x6060B017
2021-11-22 16:41:23,534   DEBUG  [#AFFE]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 16:41:23,539   DEBUG  [#AFFE]  S: <HANDSHAKE> 0x00000204
2021-11-22 16:41:23,539   DEBUG  [#AFFE]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 16:41:23,541   DEBUG  [#AFFE]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-1393'}
2021-11-22 16:41:23,542   DEBUG  [#AFFE]  C: BEGIN {'db': 'graph.db'}
2021-11-22 16:41:23,542   DEBUG  [#AFFE]  C: RUN "MATCH (node_1:type1{Name:$node_1_name})            -[node_relation:Has_Docs]-> (node_2:type1{prop1:'temp335',prop2:'temp2',Name:'testname6_State'})             WHERE node_relation.To IS NULL             RETURN count(node_1) as exist" {'node_1_name': 'testname6'} {}
2021-11-22 16:41:23,542   DEBUG  [#AFFE]  C: PULL {'n': 1000}
2021-11-22 16:41:23,545   DEBUG  [#AFFE]  S: SUCCESS {}
2021-11-22 16:41:23,545   DEBUG  [#AFFE]  S: SUCCESS {'t_first': 1, 'fields': ['exist'], 'qid': 0}
2021-11-22 16:41:23,545   DEBUG  [#AFFE]  S: RECORD * 1
2021-11-22 16:41:23,545   DEBUG  [#AFFE]  S: SUCCESS {'type': 'r', 't_last': 0, 'db': 'graph.db'}
2021-11-22 16:41:23,545   DEBUG  [#AFFE]  C: COMMIT
2021-11-22 16:41:23,547   DEBUG  [#AFFE]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDXpA='}
2021-11-22 16:41:23,547   DEBUG  [#AFFE]  C: RESET
2021-11-22 16:41:23,548   DEBUG  [#AFFE]  S: SUCCESS {}
2021-11-22 16:41:23,548    INFO  Node testname6 is up to date
2021-11-22 16:41:23,548   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 16:41:23,548   DEBUG  [#0000]  C: <ROUTING> Table expired=False
2021-11-22 16:41:23,548   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 16:41:23,548   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=True
2021-11-22 16:41:23,548   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=16943.9865352, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=16943.999145, ttl=300)}
2021-11-22 16:41:23,548   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 16:41:23,548   DEBUG  [#AFFE]  C: BEGIN {'db': 'graph.db'}
2021-11-22 16:41:23,548   DEBUG  [#AFFE]  C: RUN 'MATCH(node_1:type1{Name:$node_1_name_state})<-[r1:Has_Docs]-(node_2:type1{Name:$node_1_name})                WHERE r1.To IS NOT null                    DETACH DELETE node_1' {'node_1_name': 'testname6', 'node_1_name_state': 'testname6_State'} {}
2021-11-22 16:41:23,549   DEBUG  [#AFFE]  C: PULL {'n': 1000}
2021-11-22 16:41:23,581   DEBUG  [#AFFE]  S: SUCCESS {}
2021-11-22 16:41:23,582   DEBUG  [#AFFE]  S: SUCCESS {'t_first': 31, 'fields': [], 'qid': 0}
2021-11-22 16:41:23,582   DEBUG  [#AFFE]  S: SUCCESS {'stats': {'nodes-deleted': 1, 'relationships-deleted': 1}, 'type': 'w', 't_last': 0, 'db': 'graph.db'}
2021-11-22 16:41:23,582   DEBUG  [#AFFE]  C: COMMIT
2021-11-22 16:41:23,587   DEBUG  [#AFFE]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDX5A='}
2021-11-22 16:41:23,587   DEBUG  [#AFFE]  C: RESET
2021-11-22 16:41:23,589   DEBUG  [#AFFE]  S: SUCCESS {}
2021-11-22 16:41:23,589    INFO   All previous versions of node testname6 have been deleted 
2021-11-22 16:41:23,603   DEBUG  [#AFFE]  C: GOODBYE
2021-11-22 16:41:23,604   DEBUG  [#AFFE]  C: <CLOSE>
2021-11-22 17:38:02,185   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 17:38:02,186   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 17:38:02,186   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 17:38:02,186   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 17:38:02,186   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 17:38:02,186   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 17:38:02,186   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 17:38:02,186   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 17:38:02,186   DEBUG  Attempting to update routing table from IPv4Address(('localhost', 7687))
2021-11-22 17:38:02,186   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 17:38:02,187   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 17:38:02,188   DEBUG  [#B558]  C: <MAGIC> 0x6060B017
2021-11-22 17:38:02,188   DEBUG  [#B558]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 17:38:02,189   DEBUG  [#B558]  S: <HANDSHAKE> 0x00000204
2021-11-22 17:38:02,189   DEBUG  [#B558]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 17:38:02,191   DEBUG  [#B558]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-1601'}
2021-11-22 17:38:02,191   DEBUG  [#B558]  C: RUN 'CALL dbms.routing.getRoutingTable($context, $database)' {'context': {'address': 'localhost:7687'}, 'database': 'graph.db'} {'mode': 'r', 'db': 'system'}
2021-11-22 17:38:02,192   DEBUG  [#B558]  C: PULL {'n': -1}
2021-11-22 17:38:02,194   DEBUG  [#B558]  S: SUCCESS {'t_first': 1, 'fields': ['ttl', 'servers']}
2021-11-22 17:38:02,195   DEBUG  [#B558]  S: RECORD * 1
2021-11-22 17:38:02,195   DEBUG  [#B558]  S: SUCCESS {'bookmark': 'FB:kcwQAAAAAAAAAAAAAAAAAAAAAReQ', 'type': 's', 't_last': 1, 'db': 'system'}
2021-11-22 17:38:02,195   DEBUG  [#B558]  C: RESET
2021-11-22 17:38:02,196   DEBUG  [#B558]  S: SUCCESS {}
2021-11-22 17:38:02,196   DEBUG  [#0000]  S: <ROUTING> table=RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=20342.6627264, ttl=300)
2021-11-22 17:38:02,196   DEBUG  [#0000]  C: <UPDATE ROUTING TABLE> address=ResolvedIPv4Address(('127.0.0.1', 7687)) (RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=20342.6627264, ttl=300))
2021-11-22 17:38:02,196   DEBUG  [#B558]  C: GOODBYE
2021-11-22 17:38:02,196   DEBUG  [#B558]  C: <CLOSE>
2021-11-22 17:38:02,196   DEBUG  [#0000]  C: <ROUTING AGED> database=None
2021-11-22 17:38:02,196   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=20342.6514155 perf_time=20342.6632414
2021-11-22 17:38:02,196   DEBUG  [#0000]  C: <ROUTING AGED> database=graph.db
2021-11-22 17:38:02,197   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=20342.6627264 perf_time=20342.6633391
2021-11-22 17:38:02,197   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=20342.6514155, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=20342.6627264, ttl=300)}
2021-11-22 17:38:02,197   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 17:38:02,197   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 17:38:02,197   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 17:38:02,197   DEBUG  [#B55E]  C: <MAGIC> 0x6060B017
2021-11-22 17:38:02,197   DEBUG  [#B55E]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 17:38:02,198   DEBUG  [#B55E]  S: <HANDSHAKE> 0x00000204
2021-11-22 17:38:02,198   DEBUG  [#B55E]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 17:38:02,200   DEBUG  [#B55E]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-1602'}
2021-11-22 17:38:02,200   DEBUG  [#B55E]  C: BEGIN {'db': 'graph.db'}
2021-11-22 17:38:02,200   DEBUG  [#B55E]  C: ROLLBACK
2021-11-22 17:38:02,202   DEBUG  [#B55E]  S: SUCCESS {}
2021-11-22 17:38:02,202   DEBUG  [#B55E]  S: SUCCESS {}
2021-11-22 17:38:02,202   DEBUG  [#B55E]  C: RESET
2021-11-22 17:38:02,203   DEBUG  [#B55E]  S: SUCCESS {}
2021-11-22 17:38:02,212   DEBUG  [#B55E]  C: GOODBYE
2021-11-22 17:38:02,212   DEBUG  [#B55E]  C: <CLOSE>
2021-11-22 17:40:10,515   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 17:40:10,516   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 17:40:10,516   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 17:40:10,516   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 17:40:10,516   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 17:40:10,516   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 17:40:10,516   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 17:40:10,516   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 17:40:10,516   DEBUG  Attempting to update routing table from IPv4Address(('localhost', 7687))
2021-11-22 17:40:10,516   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 17:40:10,518   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 17:40:10,520   DEBUG  [#B59A]  C: <MAGIC> 0x6060B017
2021-11-22 17:40:10,520   DEBUG  [#B59A]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 17:40:10,521   DEBUG  [#B59A]  S: <HANDSHAKE> 0x00000204
2021-11-22 17:40:10,521   DEBUG  [#B59A]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 17:40:10,524   DEBUG  [#B59A]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-1609'}
2021-11-22 17:40:10,524   DEBUG  [#B59A]  C: RUN 'CALL dbms.routing.getRoutingTable($context, $database)' {'context': {'address': 'localhost:7687'}, 'database': 'graph.db'} {'mode': 'r', 'db': 'system'}
2021-11-22 17:40:10,524   DEBUG  [#B59A]  C: PULL {'n': -1}
2021-11-22 17:40:10,528   DEBUG  [#B59A]  S: SUCCESS {'t_first': 2, 'fields': ['ttl', 'servers']}
2021-11-22 17:40:10,528   DEBUG  [#B59A]  S: RECORD * 1
2021-11-22 17:40:10,528   DEBUG  [#B59A]  S: SUCCESS {'bookmark': 'FB:kcwQAAAAAAAAAAAAAAAAAAAAAReQ', 'type': 's', 't_last': 0, 'db': 'system'}
2021-11-22 17:40:10,528   DEBUG  [#B59A]  C: RESET
2021-11-22 17:40:10,530   DEBUG  [#B59A]  S: SUCCESS {}
2021-11-22 17:40:10,530   DEBUG  [#0000]  S: <ROUTING> table=RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=20470.9966233, ttl=300)
2021-11-22 17:40:10,530   DEBUG  [#0000]  C: <UPDATE ROUTING TABLE> address=ResolvedIPv4Address(('127.0.0.1', 7687)) (RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=20470.9966233, ttl=300))
2021-11-22 17:40:10,530   DEBUG  [#B59A]  C: GOODBYE
2021-11-22 17:40:10,530   DEBUG  [#B59A]  C: <CLOSE>
2021-11-22 17:40:10,530   DEBUG  [#0000]  C: <ROUTING AGED> database=None
2021-11-22 17:40:10,531   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=20470.9820027 perf_time=20470.9973075
2021-11-22 17:40:10,531   DEBUG  [#0000]  C: <ROUTING AGED> database=graph.db
2021-11-22 17:40:10,531   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=20470.9966233 perf_time=20470.9974787
2021-11-22 17:40:10,531   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=20470.9820027, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=20470.9966233, ttl=300)}
2021-11-22 17:40:10,531   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 17:40:10,531   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 17:40:10,531   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 17:40:10,531   DEBUG  [#B5A0]  C: <MAGIC> 0x6060B017
2021-11-22 17:40:10,532   DEBUG  [#B5A0]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 17:40:10,533   DEBUG  [#B5A0]  S: <HANDSHAKE> 0x00000204
2021-11-22 17:40:10,533   DEBUG  [#B5A0]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 17:40:10,536   DEBUG  [#B5A0]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-1610'}
2021-11-22 17:40:10,536   DEBUG  [#B5A0]  C: BEGIN {'db': 'graph.db'}
2021-11-22 17:40:10,536   DEBUG  [#B5A0]  C: RUN "MATCH (node_1:type1{Name:$node_1_name})            -[node_relation:Has_State]-> (node_2:type1{prop1:'temp335',prop2:'temp2',Name:'testname6_State'})             WHERE node_relation.To IS NULL             RETURN count(node_1) as exist" {'node_1_name': 'testname6'} {}
2021-11-22 17:40:10,536   DEBUG  [#B5A0]  C: PULL {'n': 1000}
2021-11-22 17:40:10,595   DEBUG  [#B5A0]  S: SUCCESS {}
2021-11-22 17:40:10,595   DEBUG  [#B5A0]  S: SUCCESS {'t_first': 56, 'fields': ['exist'], 'qid': 0}
2021-11-22 17:40:10,595   DEBUG  [#B5A0]  S: RECORD * 1
2021-11-22 17:40:10,595   DEBUG  [#B5A0]  S: SUCCESS {'type': 'r', 't_last': 1, 'db': 'graph.db'}
2021-11-22 17:40:10,595   DEBUG  [#B5A0]  C: COMMIT
2021-11-22 17:40:10,596   DEBUG  [#B5A0]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDX5A='}
2021-11-22 17:40:10,596   DEBUG  [#B5A0]  C: RESET
2021-11-22 17:40:10,597   DEBUG  [#B5A0]  S: SUCCESS {}
2021-11-22 17:40:10,598   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 17:40:10,598   DEBUG  [#0000]  C: <ROUTING> Table expired=False
2021-11-22 17:40:10,598   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 17:40:10,598   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=True
2021-11-22 17:40:10,598   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=20470.9820027, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=20470.9966233, ttl=300)}
2021-11-22 17:40:10,598   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 17:40:10,598   DEBUG  [#B5A0]  C: BEGIN {'db': 'graph.db', 'bookmarks': ['FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDX5A=']}
2021-11-22 17:40:10,598   DEBUG  [#B5A0]  C: RUN 'MATCH (node_1:type1{Name:$node_1_name})             RETURN count(node_1) as exist' {'node_1_name': 'testname6'} {}
2021-11-22 17:40:10,598   DEBUG  [#B5A0]  C: PULL {'n': 1000}
2021-11-22 17:40:10,611   DEBUG  [#B5A0]  S: SUCCESS {}
2021-11-22 17:40:10,611   DEBUG  [#B5A0]  S: SUCCESS {'t_first': 10, 'fields': ['exist'], 'qid': 0}
2021-11-22 17:40:10,612   DEBUG  [#B5A0]  S: RECORD * 1
2021-11-22 17:40:10,612   DEBUG  [#B5A0]  S: SUCCESS {'type': 'r', 't_last': 1, 'db': 'graph.db'}
2021-11-22 17:40:10,612   DEBUG  [#B5A0]  C: COMMIT
2021-11-22 17:40:10,613   DEBUG  [#B5A0]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDX5A='}
2021-11-22 17:40:10,613   DEBUG  [#B5A0]  C: RESET
2021-11-22 17:40:10,614   DEBUG  [#B5A0]  S: SUCCESS {}
2021-11-22 17:40:10,614   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 17:40:10,615   DEBUG  [#0000]  C: <ROUTING> Table expired=False
2021-11-22 17:40:10,615   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 17:40:10,615   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=True
2021-11-22 17:40:10,615   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=20470.9820027, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=20470.9966233, ttl=300)}
2021-11-22 17:40:10,615   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 17:40:10,615   DEBUG  [#B5A0]  C: BEGIN {'db': 'graph.db', 'bookmarks': ['FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDX5A=']}
2021-11-22 17:40:10,615   DEBUG  [#B5A0]  C: RUN 'MATCH (node_1:type1{Name:$node_1_name})            -[node_relation:Has_State]-> (node_2:type1{Name:$node_1_name_state})             WHERE node_relation.To IS NULL              SET node_relation +={To:$fromDate}' {'node_1_name': 'testname6', 'node_1_name_state': 'testname6_State', 'fromDate': '2021-11-22 17:40:10.615516'} {}
2021-11-22 17:40:10,615   DEBUG  [#B5A0]  C: PULL {'n': 1000}
2021-11-22 17:40:10,639   DEBUG  [#B5A0]  S: SUCCESS {}
2021-11-22 17:40:10,639   DEBUG  [#B5A0]  S: SUCCESS {'t_first': 22, 'fields': [], 'qid': 0}
2021-11-22 17:40:10,639   DEBUG  [#B5A0]  C: RUN "MATCH (node_1:type1{Name:$node_1_name})            CREATE (node_2:type1 {prop1:'temp335',prop2:'temp2',Name:'testname6_State'})            CREATE (node_1)-[node_relation:Has_State {From:$fromDate}]->(node_2)            RETURN node_2" {'node_1_name': 'testname6', 'fromDate': '2021-11-22 17:40:10.639296'} {}
2021-11-22 17:40:10,639   DEBUG  [#B5A0]  C: PULL {'n': 1000}
2021-11-22 17:40:10,639   DEBUG  [#B5A0]  S: SUCCESS {'stats': {'properties-set': 1}, 'type': 'w', 't_last': 0, 'db': 'graph.db'}
2021-11-22 17:40:10,666   DEBUG  [#B5A0]  S: SUCCESS {'t_first': 23, 'fields': ['node_2'], 'qid': 1}
2021-11-22 17:40:10,666   DEBUG  [#B5A0]  S: RECORD * 1
2021-11-22 17:40:10,667   DEBUG  [#B5A0]  S: SUCCESS {'stats': {'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 4}, 'type': 'rw', 't_last': 2, 'db': 'graph.db'}
2021-11-22 17:40:10,667   DEBUG  [#B5A0]  C: COMMIT
2021-11-22 17:40:10,676   DEBUG  [#B5A0]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDYJA='}
2021-11-22 17:40:10,676   DEBUG  [#B5A0]  C: RESET
2021-11-22 17:40:10,677   DEBUG  [#B5A0]  S: SUCCESS {}
2021-11-22 17:40:10,677    INFO  Node testname6 got an updated version
2021-11-22 17:40:10,683   DEBUG  [#B5A0]  C: GOODBYE
2021-11-22 17:40:10,684   DEBUG  [#B5A0]  C: <CLOSE>
2021-11-22 17:40:15,022   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 17:40:15,022   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 17:40:15,022   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 17:40:15,022   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 17:40:15,022   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 17:40:15,022   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 17:40:15,022   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 17:40:15,022   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 17:40:15,022   DEBUG  Attempting to update routing table from IPv4Address(('localhost', 7687))
2021-11-22 17:40:15,022   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 17:40:15,023   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 17:40:15,025   DEBUG  [#B5A6]  C: <MAGIC> 0x6060B017
2021-11-22 17:40:15,025   DEBUG  [#B5A6]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 17:40:15,026   DEBUG  [#B5A6]  S: <HANDSHAKE> 0x00000204
2021-11-22 17:40:15,026   DEBUG  [#B5A6]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 17:40:15,029   DEBUG  [#B5A6]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-1611'}
2021-11-22 17:40:15,029   DEBUG  [#B5A6]  C: RUN 'CALL dbms.routing.getRoutingTable($context, $database)' {'context': {'address': 'localhost:7687'}, 'database': 'graph.db'} {'mode': 'r', 'db': 'system'}
2021-11-22 17:40:15,030   DEBUG  [#B5A6]  C: PULL {'n': -1}
2021-11-22 17:40:15,034   DEBUG  [#B5A6]  S: SUCCESS {'t_first': 1, 'fields': ['ttl', 'servers']}
2021-11-22 17:40:15,035   DEBUG  [#B5A6]  S: RECORD * 1
2021-11-22 17:40:15,035   DEBUG  [#B5A6]  S: SUCCESS {'bookmark': 'FB:kcwQAAAAAAAAAAAAAAAAAAAAAReQ', 'type': 's', 't_last': 1, 'db': 'system'}
2021-11-22 17:40:15,035   DEBUG  [#B5A6]  C: RESET
2021-11-22 17:40:15,036   DEBUG  [#B5A6]  S: SUCCESS {}
2021-11-22 17:40:15,036   DEBUG  [#0000]  S: <ROUTING> table=RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=20475.5026606, ttl=300)
2021-11-22 17:40:15,036   DEBUG  [#0000]  C: <UPDATE ROUTING TABLE> address=ResolvedIPv4Address(('127.0.0.1', 7687)) (RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=20475.5026606, ttl=300))
2021-11-22 17:40:15,036   DEBUG  [#B5A6]  C: GOODBYE
2021-11-22 17:40:15,036   DEBUG  [#B5A6]  C: <CLOSE>
2021-11-22 17:40:15,036   DEBUG  [#0000]  C: <ROUTING AGED> database=None
2021-11-22 17:40:15,036   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=20475.4882312 perf_time=20475.5030537
2021-11-22 17:40:15,036   DEBUG  [#0000]  C: <ROUTING AGED> database=graph.db
2021-11-22 17:40:15,036   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=20475.5026606 perf_time=20475.5031683
2021-11-22 17:40:15,036   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=20475.4882312, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=20475.5026606, ttl=300)}
2021-11-22 17:40:15,036   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 17:40:15,037   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 17:40:15,037   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 17:40:15,037   DEBUG  [#B5AC]  C: <MAGIC> 0x6060B017
2021-11-22 17:40:15,037   DEBUG  [#B5AC]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 17:40:15,039   DEBUG  [#B5AC]  S: <HANDSHAKE> 0x00000204
2021-11-22 17:40:15,039   DEBUG  [#B5AC]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 17:40:15,042   DEBUG  [#B5AC]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-1612'}
2021-11-22 17:40:15,042   DEBUG  [#B5AC]  C: BEGIN {'db': 'graph.db'}
2021-11-22 17:40:15,042   DEBUG  [#B5AC]  C: RUN "MATCH (node_1:type1{Name:$node_1_name})            -[node_relation:Has_State]-> (node_2:type1{prop1:'temp335',prop2:'temp2',Name:'testname6_State'})             WHERE node_relation.To IS NULL             RETURN count(node_1) as exist" {'node_1_name': 'testname6'} {}
2021-11-22 17:40:15,042   DEBUG  [#B5AC]  C: PULL {'n': 1000}
2021-11-22 17:40:15,045   DEBUG  [#B5AC]  S: SUCCESS {}
2021-11-22 17:40:15,045   DEBUG  [#B5AC]  S: SUCCESS {'t_first': 0, 'fields': ['exist'], 'qid': 0}
2021-11-22 17:40:15,045   DEBUG  [#B5AC]  S: RECORD * 1
2021-11-22 17:40:15,045   DEBUG  [#B5AC]  S: SUCCESS {'type': 'r', 't_last': 1, 'db': 'graph.db'}
2021-11-22 17:40:15,045   DEBUG  [#B5AC]  C: COMMIT
2021-11-22 17:40:15,047   DEBUG  [#B5AC]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDYJA='}
2021-11-22 17:40:15,047   DEBUG  [#B5AC]  C: RESET
2021-11-22 17:40:15,048   DEBUG  [#B5AC]  S: SUCCESS {}
2021-11-22 17:40:15,048    INFO  Node testname6 is up to date
2021-11-22 17:40:15,054   DEBUG  [#B5AC]  C: GOODBYE
2021-11-22 17:40:15,055   DEBUG  [#B5AC]  C: <CLOSE>
2021-11-22 17:40:18,063   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 17:40:18,063   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 17:40:18,064   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 17:40:18,064   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 17:40:18,064   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 17:40:18,064   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 17:40:18,064   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 17:40:18,064   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 17:40:18,064   DEBUG  Attempting to update routing table from IPv4Address(('localhost', 7687))
2021-11-22 17:40:18,064   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 17:40:18,065   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 17:40:18,066   DEBUG  [#B5B2]  C: <MAGIC> 0x6060B017
2021-11-22 17:40:18,066   DEBUG  [#B5B2]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 17:40:18,067   DEBUG  [#B5B2]  S: <HANDSHAKE> 0x00000204
2021-11-22 17:40:18,067   DEBUG  [#B5B2]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 17:40:18,069   DEBUG  [#B5B2]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-1613'}
2021-11-22 17:40:18,069   DEBUG  [#B5B2]  C: RUN 'CALL dbms.routing.getRoutingTable($context, $database)' {'context': {'address': 'localhost:7687'}, 'database': 'graph.db'} {'mode': 'r', 'db': 'system'}
2021-11-22 17:40:18,069   DEBUG  [#B5B2]  C: PULL {'n': -1}
2021-11-22 17:40:18,072   DEBUG  [#B5B2]  S: SUCCESS {'t_first': 1, 'fields': ['ttl', 'servers']}
2021-11-22 17:40:18,072   DEBUG  [#B5B2]  S: RECORD * 1
2021-11-22 17:40:18,073   DEBUG  [#B5B2]  S: SUCCESS {'bookmark': 'FB:kcwQAAAAAAAAAAAAAAAAAAAAAReQ', 'type': 's', 't_last': 1, 'db': 'system'}
2021-11-22 17:40:18,073   DEBUG  [#B5B2]  C: RESET
2021-11-22 17:40:18,074   DEBUG  [#B5B2]  S: SUCCESS {}
2021-11-22 17:40:18,074   DEBUG  [#0000]  S: <ROUTING> table=RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=20478.5406494, ttl=300)
2021-11-22 17:40:18,074   DEBUG  [#0000]  C: <UPDATE ROUTING TABLE> address=ResolvedIPv4Address(('127.0.0.1', 7687)) (RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=20478.5406494, ttl=300))
2021-11-22 17:40:18,074   DEBUG  [#B5B2]  C: GOODBYE
2021-11-22 17:40:18,074   DEBUG  [#B5B2]  C: <CLOSE>
2021-11-22 17:40:18,074   DEBUG  [#0000]  C: <ROUTING AGED> database=None
2021-11-22 17:40:18,075   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=20478.5298348 perf_time=20478.5413584
2021-11-22 17:40:18,075   DEBUG  [#0000]  C: <ROUTING AGED> database=graph.db
2021-11-22 17:40:18,075   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=20478.5406494 perf_time=20478.5415324
2021-11-22 17:40:18,075   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=20478.5298348, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=20478.5406494, ttl=300)}
2021-11-22 17:40:18,075   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 17:40:18,075   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 17:40:18,075   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 17:40:18,075   DEBUG  [#B5B8]  C: <MAGIC> 0x6060B017
2021-11-22 17:40:18,075   DEBUG  [#B5B8]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 17:40:18,077   DEBUG  [#B5B8]  S: <HANDSHAKE> 0x00000204
2021-11-22 17:40:18,077   DEBUG  [#B5B8]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 17:40:18,079   DEBUG  [#B5B8]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-1614'}
2021-11-22 17:40:18,079   DEBUG  [#B5B8]  C: BEGIN {'db': 'graph.db'}
2021-11-22 17:40:18,079   DEBUG  [#B5B8]  C: RUN "MATCH (node_1:type1{Name:$node_1_name})            -[node_relation:Has_State]-> (node_2:type1{prop1:'temp335',prop2:'temp2',Name:'testname6_State'})             WHERE node_relation.To IS NULL             RETURN count(node_1) as exist" {'node_1_name': 'testname6'} {}
2021-11-22 17:40:18,080   DEBUG  [#B5B8]  C: PULL {'n': 1000}
2021-11-22 17:40:18,081   DEBUG  [#B5B8]  S: SUCCESS {}
2021-11-22 17:40:18,082   DEBUG  [#B5B8]  S: SUCCESS {'t_first': 0, 'fields': ['exist'], 'qid': 0}
2021-11-22 17:40:18,082   DEBUG  [#B5B8]  S: RECORD * 1
2021-11-22 17:40:18,082   DEBUG  [#B5B8]  S: SUCCESS {'type': 'r', 't_last': 1, 'db': 'graph.db'}
2021-11-22 17:40:18,082   DEBUG  [#B5B8]  C: COMMIT
2021-11-22 17:40:18,083   DEBUG  [#B5B8]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDYJA='}
2021-11-22 17:40:18,083   DEBUG  [#B5B8]  C: RESET
2021-11-22 17:40:18,084   DEBUG  [#B5B8]  S: SUCCESS {}
2021-11-22 17:40:18,084    INFO  Node testname6 is up to date
2021-11-22 17:40:18,090   DEBUG  [#B5B8]  C: GOODBYE
2021-11-22 17:40:18,090   DEBUG  [#B5B8]  C: <CLOSE>
2021-11-22 17:51:09,180   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 17:51:09,180   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 17:51:09,180   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 17:51:09,180   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 17:51:09,180   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 17:51:09,180   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 17:51:09,180   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 17:51:09,180   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 17:51:09,180   DEBUG  Attempting to update routing table from IPv4Address(('localhost', 7687))
2021-11-22 17:51:09,180   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 17:51:09,182   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 17:51:09,182   DEBUG  [#B6B6]  C: <MAGIC> 0x6060B017
2021-11-22 17:51:09,183   DEBUG  [#B6B6]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 17:51:09,184   DEBUG  [#B6B6]  S: <HANDSHAKE> 0x00000204
2021-11-22 17:51:09,184   DEBUG  [#B6B6]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 17:51:09,186   DEBUG  [#B6B6]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-1648'}
2021-11-22 17:51:09,186   DEBUG  [#B6B6]  C: RUN 'CALL dbms.routing.getRoutingTable($context, $database)' {'context': {'address': 'localhost:7687'}, 'database': 'graph.db'} {'mode': 'r', 'db': 'system'}
2021-11-22 17:51:09,186   DEBUG  [#B6B6]  C: PULL {'n': -1}
2021-11-22 17:51:09,190   DEBUG  [#B6B6]  S: SUCCESS {'t_first': 1, 'fields': ['ttl', 'servers']}
2021-11-22 17:51:09,190   DEBUG  [#B6B6]  S: RECORD * 1
2021-11-22 17:51:09,190   DEBUG  [#B6B6]  S: SUCCESS {'bookmark': 'FB:kcwQAAAAAAAAAAAAAAAAAAAAAReQ', 'type': 's', 't_last': 1, 'db': 'system'}
2021-11-22 17:51:09,190   DEBUG  [#B6B6]  C: RESET
2021-11-22 17:51:09,191   DEBUG  [#B6B6]  S: SUCCESS {}
2021-11-22 17:51:09,191   DEBUG  [#0000]  S: <ROUTING> table=RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=21129.6580323, ttl=300)
2021-11-22 17:51:09,191   DEBUG  [#0000]  C: <UPDATE ROUTING TABLE> address=ResolvedIPv4Address(('127.0.0.1', 7687)) (RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=21129.6580323, ttl=300))
2021-11-22 17:51:09,191   DEBUG  [#B6B6]  C: GOODBYE
2021-11-22 17:51:09,192   DEBUG  [#B6B6]  C: <CLOSE>
2021-11-22 17:51:09,192   DEBUG  [#0000]  C: <ROUTING AGED> database=None
2021-11-22 17:51:09,192   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=21129.6462295 perf_time=21129.6585559
2021-11-22 17:51:09,192   DEBUG  [#0000]  C: <ROUTING AGED> database=graph.db
2021-11-22 17:51:09,192   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=21129.6580323 perf_time=21129.6586796
2021-11-22 17:51:09,192   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=21129.6462295, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=21129.6580323, ttl=300)}
2021-11-22 17:51:09,192   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 17:51:09,192   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 17:51:09,192   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 17:51:09,192   DEBUG  [#B6BC]  C: <MAGIC> 0x6060B017
2021-11-22 17:51:09,192   DEBUG  [#B6BC]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 17:51:09,194   DEBUG  [#B6BC]  S: <HANDSHAKE> 0x00000204
2021-11-22 17:51:09,195   DEBUG  [#B6BC]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 17:51:09,197   DEBUG  [#B6BC]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-1649'}
2021-11-22 17:51:09,197   DEBUG  [#B6BC]  C: BEGIN {'db': 'graph.db'}
2021-11-22 17:51:09,197   DEBUG  [#B6BC]  C: RUN 'MATCH (node_1)-[r1]->(node_2)                WHERE r1.To is null                    RETURN (node_1,r1,node_2)' {} {}
2021-11-22 17:51:09,197   DEBUG  [#B6BC]  C: PULL {'n': 1000}
2021-11-22 17:51:09,201   DEBUG  [#B6BC]  S: SUCCESS {}
2021-11-22 17:51:09,202   DEBUG  [#B6BC]  S: FAILURE {'code': 'Neo.ClientError.Statement.SyntaxError', 'message': 'Invalid input \'(\': expected "+" or "-" (line 1, column 92 (offset: 91))\n"MATCH (node_1)-[r1]->(node_2)                WHERE r1.To is null                    RETURN (node_1,r1,node_2)"\n                                                                                            ^'}
2021-11-22 17:51:09,202   DEBUG  [#B6BC]  C: RESET
2021-11-22 17:51:09,202   DEBUG  [#B6BC]  S: IGNORED
2021-11-22 17:51:09,203   DEBUG  [#B6BC]  S: SUCCESS {}
2021-11-22 17:51:09,212   DEBUG  [#B6BC]  C: GOODBYE
2021-11-22 17:51:09,212   DEBUG  [#B6BC]  C: <CLOSE>
2021-11-22 17:51:36,088   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 17:51:36,089   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 17:51:36,089   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 17:51:36,089   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 17:51:36,089   DEBUG  [#0000]  C: <ROUTING> Checking table freshness (readonly=False)
2021-11-22 17:51:36,089   DEBUG  [#0000]  C: <ROUTING> Table expired=True
2021-11-22 17:51:36,089   DEBUG  [#0000]  C: <ROUTING> Table routers={IPv4Address(('localhost', 7687))}
2021-11-22 17:51:36,089   DEBUG  [#0000]  C: <ROUTING> Table has_server_for_mode=False
2021-11-22 17:51:36,089   DEBUG  Attempting to update routing table from IPv4Address(('localhost', 7687))
2021-11-22 17:51:36,089   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 17:51:36,090   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 17:51:36,092   DEBUG  [#B6C6]  C: <MAGIC> 0x6060B017
2021-11-22 17:51:36,092   DEBUG  [#B6C6]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 17:51:36,093   DEBUG  [#B6C6]  S: <HANDSHAKE> 0x00000204
2021-11-22 17:51:36,093   DEBUG  [#B6C6]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 17:51:36,096   DEBUG  [#B6C6]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-1650'}
2021-11-22 17:51:36,096   DEBUG  [#B6C6]  C: RUN 'CALL dbms.routing.getRoutingTable($context, $database)' {'context': {'address': 'localhost:7687'}, 'database': 'graph.db'} {'mode': 'r', 'db': 'system'}
2021-11-22 17:51:36,096   DEBUG  [#B6C6]  C: PULL {'n': -1}
2021-11-22 17:51:36,099   DEBUG  [#B6C6]  S: SUCCESS {'t_first': 2, 'fields': ['ttl', 'servers']}
2021-11-22 17:51:36,099   DEBUG  [#B6C6]  S: RECORD * 1
2021-11-22 17:51:36,099   DEBUG  [#B6C6]  S: SUCCESS {'bookmark': 'FB:kcwQAAAAAAAAAAAAAAAAAAAAAReQ', 'type': 's', 't_last': 0, 'db': 'system'}
2021-11-22 17:51:36,099   DEBUG  [#B6C6]  C: RESET
2021-11-22 17:51:36,100   DEBUG  [#B6C6]  S: SUCCESS {}
2021-11-22 17:51:36,101   DEBUG  [#0000]  S: <ROUTING> table=RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=21156.567337, ttl=300)
2021-11-22 17:51:36,101   DEBUG  [#0000]  C: <UPDATE ROUTING TABLE> address=ResolvedIPv4Address(('127.0.0.1', 7687)) (RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=21156.567337, ttl=300))
2021-11-22 17:51:36,101   DEBUG  [#B6C6]  C: GOODBYE
2021-11-22 17:51:36,101   DEBUG  [#B6C6]  C: <CLOSE>
2021-11-22 17:51:36,101   DEBUG  [#0000]  C: <ROUTING AGED> database=None
2021-11-22 17:51:36,101   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=21156.5549259 perf_time=21156.5677917
2021-11-22 17:51:36,101   DEBUG  [#0000]  C: <ROUTING AGED> database=graph.db
2021-11-22 17:51:36,101   DEBUG  [#0000]  C: <ROUTING AGED> last_updated_time=21156.567337 perf_time=21156.5678901
2021-11-22 17:51:36,101   DEBUG  [#0000]  C: <ROUTING TABLE ENSURE FRESH> {None: RoutingTable(database=None routers={IPv4Address(('localhost', 7687))}, readers={}, writers={}, last_updated_time=21156.5549259, ttl=0), 'graph.db': RoutingTable(database='graph.db' routers={IPv4Address(('localhost', 7687))}, readers={IPv4Address(('localhost', 7687))}, writers={IPv4Address(('localhost', 7687))}, last_updated_time=21156.567337, ttl=300)}
2021-11-22 17:51:36,101   DEBUG  [#0000]  C: <ACQUIRE ADDRESS> database='graph.db' address=IPv4Address(('localhost', 7687))
2021-11-22 17:51:36,101   DEBUG  [#0000]  C: <RESOLVE> localhost:7687
2021-11-22 17:51:36,101   DEBUG  [#0000]  C: <OPEN> 127.0.0.1:7687
2021-11-22 17:51:36,102   DEBUG  [#B6CC]  C: <MAGIC> 0x6060B017
2021-11-22 17:51:36,102   DEBUG  [#B6CC]  C: <HANDSHAKE> 0x00030304 0x00000104 0x00000004 0x00000003
2021-11-22 17:51:36,103   DEBUG  [#B6CC]  S: <HANDSHAKE> 0x00000204
2021-11-22 17:51:36,103   DEBUG  [#B6CC]  C: HELLO {'user_agent': 'neo4j-python/4.3.5 Python/3.8.0-final-0 (linux)', 'routing': {'address': 'localhost:7687'}, 'scheme': 'basic', 'principal': 'neo4j', 'credentials': '*******'}
2021-11-22 17:51:36,105   DEBUG  [#B6CC]  S: SUCCESS {'server': 'Neo4j/4.2.4', 'connection_id': 'bolt-1651'}
2021-11-22 17:51:36,105   DEBUG  [#B6CC]  C: BEGIN {'db': 'graph.db'}
2021-11-22 17:51:36,105   DEBUG  [#B6CC]  C: RUN 'MATCH (node_1)-[r1]->(node_2)                WHERE r1.To is null                    RETURN node_1,r1,node_2' {} {}
2021-11-22 17:51:36,106   DEBUG  [#B6CC]  C: PULL {'n': 1000}
2021-11-22 17:51:36,122   DEBUG  [#B6CC]  S: SUCCESS {}
2021-11-22 17:51:36,123   DEBUG  [#B6CC]  S: SUCCESS {'t_first': 15, 'fields': ['node_1', 'r1', 'node_2'], 'qid': 0}
2021-11-22 17:51:36,123   DEBUG  [#B6CC]  S: RECORD * 1
2021-11-22 17:51:36,124   DEBUG  [#B6CC]  S: RECORD * 1
2021-11-22 17:51:36,124   DEBUG  [#B6CC]  S: SUCCESS {'type': 'r', 't_last': 1, 'db': 'graph.db'}
2021-11-22 17:51:36,124   DEBUG  [#B6CC]  C: COMMIT
2021-11-22 17:51:36,125   DEBUG  [#B6CC]  S: SUCCESS {'bookmark': 'FB:kcwQyE5/aLoQQPC3ID5XUeaH7ckDYJA='}
2021-11-22 17:51:36,125   DEBUG  [#B6CC]  C: RESET
2021-11-22 17:51:36,127   DEBUG  [#B6CC]  S: SUCCESS {}
2021-11-22 17:51:36,132   DEBUG  [#B6CC]  C: GOODBYE
2021-11-22 17:51:36,133   DEBUG  [#B6CC]  C: <CLOSE>
